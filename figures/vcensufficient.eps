%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: vcensufficient.pdf
%%Creator: Adobe Acrobat 11.0.9
%%For: happybaoliang
%%CreationDate: 2014/12/23, 22:24:51
%%BoundingBox: 0 0 521 516
%%HiResBoundingBox: 0 0 520.3660 515.7842
%%CropBox: 0 0 520.3660 515.7842
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1094 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-12-23T22:24:20+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2014-12-23T22:24:43+08:00"
   xmp:MetadataDate="2014-12-23T22:24:43+08:00"
   pdf:Producer="Acrobat Distiller 11.0 (Windows)"
   xmpMM:DocumentID="uuid:92b6fb1f-066b-40fa-8c7e-2f30129c78bd"
   xmpMM:InstanceID="uuid:50dba60f-bcf1-466f-8154-31280b04b641">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>happybaoliang</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Visio-vcensufficient.vsd</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -515.784 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 515.784 li
520.366 515.784 li
520.366 0 li
cp
clp
2.16 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
39.8449 259.318 mo
85.2049 259.318 li
85.2049 188.458 li
39.8449 188.458 li
cp
false sop
.92929 .879301 .889677 .799283 cmyk
@
39.8449 330.178 mo
85.2049 330.178 li
85.2049 259.318 li
39.8449 259.318 li
cp
@
453.665 259.318 mo
493.385 259.318 li
493.385 188.458 li
453.665 188.458 li
cp
@
453.665 330.178 mo
493.385 330.178 li
493.385 259.318 li
453.665 259.318 li
cp
@
195.725 486.058 mo
266.585 486.058 li
266.585 443.578 li
195.725 443.578 li
cp
@
266.585 486.058 mo
cp
@
266.585 486.058 mo
337.445 486.058 li
337.445 443.578 li
266.585 443.578 li
cp
@
337.445 486.058 mo
cp
@
195.725 75.0581 mo
266.585 75.0581 li
266.585 32.5781 li
195.725 32.5781 li
cp
@
266.585 75.0581 mo
cp
@
266.585 75.0581 mo
337.445 75.0581 li
337.445 32.5781 li
266.585 32.5781 li
cp
@
337.445 75.0581 mo
cp
@
443.285 435.958 mo
415.445 408.118 li
365.285 458.218 li
393.185 486.058 li
443.285 435.958 li
cp
@
493.385 385.858 mo
465.545 358.018 li
415.445 408.118 li
443.285 435.958 li
493.385 385.858 li
cp
@
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (PBAAAA+TimesNewRomanPSMT)
%%Title: (PBAAAA+TimesNewRomanPSMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /PBAAAA+TimesNewRomanPSMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-568 -307 2046 1040} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4098 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 9 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
58 <001C60D8A8C9B5D6EF4CB383496C62617B8BD4FD4927BDE48152A6FF6216
428592F5AFA3D18F24C53020F77DA565222C98E1F496EC6F2EE4EB22E43F233D
8D98DB46EC3FFD79A8A395ED6571E9EE52C2D64F4FF1F26706DF3355CFC8C908
EAA86ADD43E05EADD0D2F7D3DC578FF752F1D87291BBD55E577C117CD30BA304
9BD39543241DD7DCD07617FA8A494E710E269F478E2E95BEC8AA7E710ACD0612
E8921B3DAA59E93D8AA4276CD08DDB3A9B4D762893C74EF3108E125B72E190D0
45E652A0B8E8729169D251777FA84DD9EC852ADB1FB8FFEDFE199F837B9E862E
992403453891> |
40 <001C60D8A8C9B7D8BE19945133FE501067A24BBF08B984801DD42E090C7B
FCA94BE6C4AA953A8A674F2ED3DEE261A8700CA873A3A1D3699D8129F8FA28DE
52C44FD8214EA37190B26E64C97677BF6E1856F59EF49286A31D4133D861C74C
DB92794376B13E311920B8F547FC8F105147550894C833300FA326DF7877402F
2A3FD3184C9B8E130B79DB62E2735C65FD4E7A86140D8A7D764E8F05488CC194
9558757A62743714E5384E2EF166B32CB849712A9C93B7CF04FCFE8063494A21
5FA79B98816AEC20BC3F> |
47 <001C60D8A8C9B7D8BE1910D0EBEC744B6638E6ED4C6FC0AF39F5B8B10BFA
09270956A997B577BBD8E3EC179B174ED931484CCFFCF819D4978AE37145A7A3
C221DF78A5AAD08DFCBE2638BCFCF6B4930FFFAD1163890B85697ECB905727AF
12A0E5C1679B01834AD8D0C4111313E17E548887938F4F64DA1DB39BD7CD6874
8B847D2C24AD687E0CDB56> |
57 <001C60D8A8C9B6079F6D060A2FEA7FC1569E0C14DA541DD91C00EBC3777B
DE67491C2EA2113C451959D17D324EE8DBB436A0F30BF65402B93EFD32E095FD
4A5BC20760673D3864924C1ACF695D3BD682644F24B440E38C1FF24D4CC16712
B502AE5F89EDD273AE3A1DBED84FBFBD9B8AF85ACA697ED4658DA6CFEAC07815
4F7D9BB4AB2053> |
38 <001C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA
345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA
9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097
158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7
399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B2
83409DD22AD16B7DD28B54D5FC454C> |
20 <001C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |
21 <001C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |
3 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /PBAAAA+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/PBAAAA+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/PYRALV+TimesNewRomanPSMT /PBAAAA+TimesNewRomanPSMT-Identity-H findfont ct_VMDictPut
PYRALV+TimesNewRomanPSMT [36 0 0 -36.0002 0 0 ]msf
1.62488 272.998 mo
(\000:)sh
496.564 270.118 mo
(\000\()sh
%ADOBeginSubsetFont: PYRALW+SimSun-ExtB-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (PYRALW+SimSun-ExtB-GBK-EUC-H)
%%Title: (PYRALW+SimSun-ExtB-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /PYRALW+SimSun-ExtB-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -160 1836 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 47180 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300A0E186BEEFB40CFF3AFE22B7A52F772A89AD9D2
9CF6EA848FF04> |
48 <001C60D8A8C9B7A73DD90A02651F8A21A7E09A7BAFBEDEEF8463A1D60506
55FE137EE7FE62CBF7A2ACC1F01C59666B89C5A80B1F2ED8A9AA42101D4155E5
68CD8160D56BBA6191BCFCA9121D70BB0B8FB909BED010838EF4D1DF24FA690F
24B3C6DC7AA13E4A5EF496220525A4FD4CD4BBB234B0301577591482ADB70C41
570BAF44A34EEE51CEA7AF2E00> |
53 <001C60D8A8C9B7A73DB6A99763167CC7BF3E0660265702A1D670C0EB9A12
1C64506BE858410BB0221EBD486DF689FD407F6433B5459747D863D80895A8A3
3DB907E7C15A5309D19B6405DBE44DB20C932E6BFA7EA72D8022F7CAD9B23D25
83D1B11506209098C177333AE804D3EFCAF600AD87C3D4F90034C52722BA48CC
881E081FFEDF85963B0741B19B66966D2CECAB342EC5D4E68DF60B0FE3DCA204
BDD7E3B8CC6A6B851C4724C1E8F87C5017F568510382F3231BA7F62EC8F47E4D
98E746DE3315BF10C377145AA9F4185F6C43901898CCA56E7E1538A5092370FF
C3B03710> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /PYRALW+SimSun-ExtB-GBK-EUC-H-Identity-H /Identity-H 0 [/PYRALW+SimSun-ExtB-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/PYRALW+SimSun-ExtB-GBK-EUC-H-Identity-H findfont [36 0 0 -36.0002 0 0 ]msf
259.025 29.2191 mo
(\0000)sh
257.646 513.897 mo
(\0005)sh
PYRALV+TimesNewRomanPSMT [36 0 0 -36.0002 0 0 ]msf
454.087 462.895 mo
(\000/)sh
PYRALV+TimesNewRomanPSMT [24 0 0 -24 0 0 ]msf
89.4649 233.938 mo
(\0009\000&\000\024)
[17.3375 16.0177 0 ]xsh
89.4649 303.418 mo
(\0009\000&\000\025)
[17.3375 16.0177 0 ]xsh
402.725 231.838 mo
(\0009\000&\000\024)
[17.3064 15.9866 0 ]xsh
402.725 301.258 mo
(\0009\000&\000\025)
[17.3064 15.9866 0 ]xsh
212.285 96.478 mo
(\0009\000&\000\024\000\003\000\003\000\003\0009\000&\000\025)
[17.3207 16.0009 11.9927 5.99268 5.99268 5.99268 17.3207 16.0009 0 ]xsh
212.285 436.618 mo
(\0009\000&\000\024\000\003\000\003\000\003\0009\000&\000\025)
[17.3207 16.0009 11.9927 5.99268 5.99268 5.99268 17.3207 16.0009 0 ]xsh
370.325 418.318 mo
370.625 418.618 li
370.265 419.098 370.085 419.518 370.085 419.878 cv
370.085 420.418 370.205 421.138 370.565 421.918 cv
376.205 435.358 li
375.905 435.718 li
361.985 430.198 li
361.265 429.958 360.845 429.778 360.605 429.778 cv
360.305 429.718 360.005 429.778 359.705 429.838 cv
359.405 429.958 359.045 430.198 358.685 430.498 cv
358.385 430.198 li
363.005 425.578 li
363.305 425.878 li
362.825 426.478 362.585 426.898 362.525 427.198 cv
362.525 427.438 362.585 427.678 362.825 427.918 cv
363.065 428.158 363.665 428.458 364.505 428.818 cv
373.925 432.538 li
370.085 423.418 li
369.665 422.458 369.365 421.918 369.125 421.678 cv
368.945 421.498 368.705 421.438 368.405 421.438 cv
368.105 421.438 367.745 421.618 367.325 421.918 cv
367.265 421.978 367.205 421.978 367.145 422.038 cv
366.845 421.738 li
cp
380.465 407.578 mo
384.545 411.178 li
384.305 411.418 li
382.805 410.638 381.485 410.278 380.345 410.398 cv
379.205 410.578 378.185 411.058 377.285 411.958 cv
376.565 412.678 376.085 413.578 375.845 414.538 cv
375.605 415.498 375.785 416.578 376.265 417.778 cv
376.745 418.978 377.585 420.178 378.845 421.378 cv
379.865 422.398 380.885 423.118 381.965 423.538 cv
383.045 423.958 384.065 424.018 385.145 423.778 cv
386.165 423.538 387.125 422.998 387.965 422.158 cv
388.685 421.438 389.165 420.598 389.465 419.758 cv
389.705 418.858 389.705 417.658 389.405 416.038 cv
389.825 415.978 li
390.305 417.538 390.365 418.918 390.065 420.118 cv
389.765 421.318 389.105 422.458 388.085 423.478 cv
386.225 425.338 384.065 426.118 381.665 425.758 cv
379.925 425.458 378.305 424.678 376.925 423.238 cv
375.785 422.158 375.005 420.838 374.585 419.398 cv
374.165 417.958 374.105 416.578 374.465 415.138 cv
374.825 413.758 375.545 412.558 376.565 411.478 cv
377.405 410.698 378.365 410.098 379.565 409.678 cv
379.925 409.558 380.165 409.498 380.285 409.378 cv
380.405 409.198 380.465 409.018 380.465 408.838 cv
380.465 408.538 380.405 408.238 380.165 407.878 cv
.92929 .879301 .889677 .799283 cmyk
f
384.905 405.898 mo
386.285 401.818 li
386.585 401.518 li
396.065 410.998 li
396.725 411.658 397.145 412.018 397.325 412.138 cv
397.565 412.198 397.745 412.258 397.985 412.138 cv
398.285 412.078 398.645 411.778 399.185 411.298 cv
399.485 411.598 li
395.225 415.798 li
394.925 415.498 li
395.465 414.958 395.765 414.598 395.825 414.358 cv
395.885 414.118 395.885 413.878 395.825 413.698 cv
395.765 413.518 395.405 413.038 394.685 412.378 cv
388.625 406.318 li
387.845 405.538 387.245 404.998 387.005 404.818 cv
386.765 404.698 386.585 404.638 386.405 404.638 cv
386.225 404.698 386.045 404.758 385.865 404.878 cv
385.685 405.118 385.505 405.478 385.265 406.018 cv
f
415.085 373.498 mo
415.385 373.798 li
415.085 374.278 414.905 374.698 414.845 375.118 cv
414.845 375.658 415.025 376.318 415.325 377.098 cv
420.965 390.598 li
420.665 390.898 li
406.745 385.438 li
406.085 385.138 405.605 385.018 405.425 384.958 cv
405.065 384.958 404.765 384.958 404.465 385.078 cv
404.165 385.198 403.865 385.378 403.505 385.738 cv
403.205 385.378 li
407.765 380.818 li
408.065 381.118 li
407.585 381.718 407.345 382.138 407.345 382.378 cv
407.285 382.678 407.405 382.918 407.585 383.098 cv
407.885 383.398 408.425 383.698 409.265 384.058 cv
418.685 387.778 li
414.845 378.598 li
414.485 377.698 414.185 377.098 413.885 376.858 cv
413.765 376.738 413.525 376.618 413.225 376.678 cv
412.925 376.678 412.505 376.858 412.085 377.158 cv
412.085 377.158 412.025 377.218 411.905 377.278 cv
411.605 376.978 li
cp
425.225 362.818 mo
429.305 366.358 li
429.065 366.658 li
427.565 365.818 426.305 365.518 425.165 365.638 cv
424.025 365.758 423.005 366.298 422.105 367.198 cv
421.325 367.918 420.845 368.758 420.665 369.778 cv
420.425 370.738 420.545 371.818 421.025 373.018 cv
421.505 374.158 422.345 375.358 423.605 376.618 cv
424.625 377.638 425.645 378.358 426.725 378.778 cv
427.805 379.198 428.885 379.258 429.905 379.018 cv
430.985 378.718 431.945 378.178 432.785 377.338 cv
433.505 376.618 433.985 375.838 434.225 374.938 cv
434.465 374.098 434.465 372.838 434.225 371.278 cv
434.645 371.158 li
435.065 372.718 435.125 374.098 434.825 375.358 cv
434.585 376.558 433.925 377.698 432.845 378.718 cv
430.985 380.578 428.885 381.298 426.485 380.938 cv
424.685 380.698 423.065 379.858 421.685 378.478 cv
420.605 377.338 419.825 376.078 419.345 374.638 cv
418.925 373.198 418.865 371.758 419.285 370.378 cv
419.645 368.998 420.305 367.738 421.385 366.718 cv
422.165 365.878 423.185 365.278 424.385 364.918 cv
424.745 364.798 424.925 364.678 425.045 364.558 cv
425.225 364.438 425.285 364.258 425.285 364.018 cv
425.285 363.718 425.165 363.418 424.985 363.118 cv
f
443.465 363.298 mo
444.845 366.238 li
438.185 372.838 li
437.885 372.538 li
438.065 368.818 438.005 365.998 437.645 364.078 cv
437.345 362.158 436.685 360.718 435.785 359.758 cv
435.065 359.098 434.225 358.678 433.325 358.678 cv
432.485 358.678 431.705 358.978 431.105 359.578 cv
430.565 360.118 430.205 360.778 430.085 361.558 cv
429.965 362.278 430.145 363.118 430.565 363.898 cv
430.265 364.258 li
429.365 363.058 428.945 361.918 428.945 360.838 cv
428.945 359.698 429.425 358.738 430.265 357.838 cv
431.165 356.938 432.245 356.458 433.445 356.458 cv
434.645 356.398 435.605 356.818 436.445 357.598 cv
436.985 358.198 437.405 358.858 437.705 359.698 cv
438.185 361.018 438.485 362.638 438.605 364.558 cv
438.725 367.438 438.725 369.178 438.725 369.838 cv
441.665 366.898 li
442.265 366.298 442.625 365.878 442.865 365.578 cv
443.045 365.278 443.165 364.978 443.225 364.678 cv
443.285 364.318 443.285 363.958 443.165 363.598 cv
f
167.405 358.498 mo
365.825 358.498 li
365.825 160.078 li
167.405 160.078 li
cp
@
181.565 316.018 mo
224.105 316.018 li
@
351.665 317.398 mo
309.125 317.398 li
@
181.565 202.618 mo
224.105 202.618 li
@
351.665 202.618 mo
309.125 202.618 li
@
224.105 202.618 mo
309.125 316.018 li
@
309.125 202.618 mo
268.025 257.398 li
267.005 256.618 265.505 256.858 264.725 257.878 cv
263.945 258.958 264.125 260.398 265.205 261.178 cv
224.105 316.018 li
@
52.3849 238.678 mo
52.2649 238.618 li
52.0239 238.507 51.8199 238.611 51.5449 238.378 cv
51.4249 238.378 li
51.4249 238.318 li
51.0649 238.138 li
50.9449 238.018 li
50.6449 237.778 li
50.6449 237.658 li
50.5249 237.598 li
50.5249 237.538 li
50.4649 237.478 li
50.4049 237.358 li
50.3449 237.238 li
50.3449 237.178 li
50.2849 237.058 li
50.2849 236.878 li
50.2249 236.578 li
50.2849 236.578 li
50.2849 236.098 li
50.3449 236.098 li
50.3449 235.858 li
50.4049 235.858 li
50.4049 235.798 li
50.4649 235.798 li
50.4649 235.678 li
50.5249 235.678 li
50.5249 235.618 li
50.5849 235.558 li
50.5849 235.498 li
50.6449 235.498 li
51.0609 234.917 51.9959 234.615 52.5649 235.138 cv
52.6249 235.138 li
52.6249 235.198 li
52.8049 235.378 li
52.8649 235.618 li
52.8649 236.278 li
52.8049 236.278 li
52.8049 236.458 li
52.7449 236.458 li
52.7449 236.578 li
52.6849 236.578 li
52.6849 236.698 li
52.6249 236.698 li
52.6249 236.758 li
52.5649 236.818 li
52.5049 236.818 li
52.5049 236.878 li
52.0499 237.364 52.0949 237.149 51.6049 237.418 cv
51.2449 237.418 li
51.3649 237.478 li
51.5449 237.658 li
51.6049 237.658 li
51.7249 237.778 li
51.7849 237.778 li
52.1449 237.958 li
52.2649 237.958 li
52.4449 238.018 li
53.1649 238.018 li
53.2849 237.958 li
53.4049 237.958 li
53.6449 237.838 li
53.6449 237.778 li
53.7649 237.778 li
54.1249 237.418 li
54.1249 237.298 li
54.1849 237.238 li
54.1849 237.178 li
54.2449 237.178 li
54.3049 237.118 li
54.3049 236.998 li
54.3649 236.998 li
54.3649 236.938 li
54.4249 236.878 li
54.4249 236.818 li
54.4849 236.818 li
54.4849 236.638 li
54.5449 236.638 li
54.5449 236.518 li
54.6049 236.518 li
54.6049 236.398 li
54.6649 236.398 li
54.6649 236.158 li
54.7249 236.158 li
54.7249 235.978 li
54.7849 235.978 li
54.7849 235.858 li
54.8449 235.858 li
54.8449 235.618 li
54.9049 235.618 li
54.9049 235.378 li
54.9649 235.378 li
54.9649 235.258 li
55.0249 235.258 li
55.0249 234.958 li
55.0849 234.958 li
55.0849 234.658 li
55.1449 234.658 li
55.1449 234.478 li
55.2049 234.478 li
55.2049 234.178 li
55.2649 234.178 li
55.2649 233.818 li
55.3249 233.818 li
55.3249 233.638 li
55.3849 233.638 li
55.3849 233.278 li
55.4449 233.278 li
55.4449 232.918 li
55.5049 232.918 li
55.5049 232.738 li
55.5649 232.738 li
55.5649 232.378 li
55.6249 232.378 li
55.6249 232.078 li
55.6849 232.078 li
55.6849 231.898 li
55.7449 231.898 li
55.7449 231.538 li
55.8049 231.538 li
55.8049 231.178 li
55.8649 231.178 li
55.8649 230.998 li
55.9249 230.998 li
55.9249 230.638 li
55.9849 230.638 li
55.9849 230.278 li
56.0449 230.278 li
56.0449 230.098 li
56.1049 230.098 li
56.1049 229.678 li
56.1649 229.678 li
56.1649 229.318 li
56.2249 229.318 li
56.2249 229.138 li
56.2849 229.138 li
56.2849 228.778 li
56.3449 228.778 li
56.3449 228.418 li
56.4049 228.418 li
56.4049 228.238 li
56.4649 228.238 li
56.4649 227.878 li
56.5249 227.878 li
56.5249 227.458 li
56.5849 227.458 li
56.5849 227.278 li
56.6449 227.278 li
56.6449 226.918 li
56.7049 226.918 li
56.7049 226.558 li
56.7649 226.558 li
56.7649 226.378 li
56.8249 226.378 li
56.8249 225.958 li
56.8849 225.958 li
56.8849 225.598 li
56.9449 225.598 li
56.9449 225.418 li
57.0049 225.418 li
57.0049 225.058 li
57.0649 225.058 li
57.0649 224.638 li
57.1249 224.638 li
57.1249 224.458 li
57.1849 224.458 li
57.1849 224.038 li
57.2449 224.038 li
57.2449 223.678 li
57.3049 223.678 li
57.3049 223.318 li
57.3649 223.318 li
57.3649 223.078 li
57.4249 223.078 li
57.4249 222.718 li
57.4849 222.718 li
57.4849 222.358 li
57.5449 222.358 li
57.5449 222.178 li
57.6049 222.178 li
57.6049 221.758 li
57.6649 221.758 li
57.6649 221.338 li
57.7249 221.338 li
57.7249 221.158 li
57.7849 221.158 li
57.7849 220.798 li
57.8449 220.798 li
57.8449 220.378 li
57.9049 220.378 li
57.9049 220.198 li
57.9649 220.198 li
57.9649 219.778 li
58.0249 219.778 li
58.0249 219.418 li
55.4449 219.418 li
55.2649 219.238 li
55.2049 219.058 li
55.2649 219.058 li
55.2649 218.698 li
55.3249 218.698 li
55.3249 218.638 li
55.3849 218.638 li
55.4449 218.578 li
55.6249 218.518 li
58.2649 218.518 li
58.3249 218.458 li
58.3249 218.038 li
58.3849 218.038 li
58.3849 217.678 li
58.4449 217.678 li
58.4449 217.438 li
58.5049 217.438 li
58.5049 217.078 li
58.5649 217.078 li
58.5649 216.658 li
58.6249 216.658 li
58.6249 216.478 li
58.6849 216.478 li
58.6849 216.058 li
58.7449 216.058 li
58.7449 215.698 li
58.8049 215.698 li
58.8049 215.518 li
58.8649 215.518 li
58.8649 215.158 li
58.9249 215.158 li
58.9249 214.858 li
58.9849 214.858 li
58.9849 214.738 li
59.0449 214.738 li
59.0449 214.378 li
59.1049 214.378 li
59.1049 214.078 li
59.1649 214.078 li
59.1649 214.018 li
59.2249 214.018 li
59.2249 213.718 li
59.2849 213.718 li
59.2849 213.478 li
59.3449 213.478 li
59.3449 213.358 li
59.4049 213.358 li
59.4049 213.118 li
59.4649 213.118 li
59.4649 212.938 li
59.5249 212.938 li
59.5249 212.818 li
59.5849 212.818 li
59.5849 212.638 li
59.6449 212.638 li
59.6449 212.458 li
59.7049 212.458 li
59.7049 212.398 li
59.7649 212.398 li
59.7649 212.278 li
59.8249 212.278 li
59.8249 212.158 li
59.8849 212.158 li
59.8849 212.038 li
59.9449 212.038 li
59.9449 211.918 li
60.0049 211.918 li
60.0049 211.798 li
60.0649 211.798 li
60.0649 211.738 li
60.1249 211.738 li
60.1249 211.618 li
60.1849 211.618 li
60.1849 211.498 li
60.2449 211.498 li
60.3649 211.438 li
60.3649 211.318 li
60.4849 211.258 li
60.4849 211.198 li
60.9049 210.778 li
60.9649 210.778 li
61.2049 210.538 li
61.2649 210.538 li
61.3849 210.418 li
61.4449 210.418 li
61.5649 210.358 li
61.6249 210.298 li
61.9849 210.118 li
62.0449 210.058 li
62.2249 209.998 li
62.5249 209.938 li
62.5849 209.878 li
62.8249 209.878 li
63.7849 209.818 li
63.7849 209.878 li
64.3249 209.998 li
64.5319 210.024 64.9789 210.267 65.1649 210.358 cv
65.2849 210.538 li
65.4049 210.538 li
65.4649 210.658 li
65.8559 211.059 66.0309 211.658 65.9449 212.218 cv
65.9449 212.398 li
65.8849 212.398 li
65.8849 212.458 li
65.8249 212.458 li
65.8249 212.638 li
65.7649 212.638 li
65.7649 212.818 li
65.6449 212.818 li
65.6449 212.998 li
65.3449 213.298 li
65.2849 213.298 li
65.2249 213.358 li
65.1649 213.358 li
65.1049 213.418 li
64.9249 213.538 li
64.8049 213.538 li
64.6849 213.598 li
64.0849 213.598 li
63.8449 213.478 li
63.7849 213.478 li
63.4849 213.178 li
63.3649 212.998 li
63.3049 212.818 li
63.3049 212.278 li
63.3649 212.278 li
63.3649 212.158 li
63.4249 212.158 li
63.4249 211.978 li
63.4849 211.978 li
63.4849 211.858 li
63.5449 211.858 li
63.5449 211.798 li
63.6049 211.798 li
63.6049 211.678 li
63.8849 211.395 64.3289 211.066 64.7449 211.078 cv
64.9249 211.018 li
64.8649 210.958 li
64.7449 210.898 li
64.6249 210.778 li
64.5649 210.778 li
64.2049 210.598 li
64.0849 210.598 li
63.9649 210.538 li
63.8449 210.538 li
63.6049 210.478 li
62.9449 210.418 li
62.9449 210.478 li
62.7649 210.538 li
62.4649 210.718 li
62.4049 210.718 li
62.2249 210.898 li
62.1649 210.898 li
62.1649 210.958 li
61.9849 211.138 li
61.9249 211.138 li
61.9249 211.258 li
61.8649 211.258 li
61.8649 211.318 li
61.8049 211.318 li
61.8049 211.498 li
61.7449 211.498 li
61.7449 211.558 li
61.6849 211.558 li
61.6849 211.678 li
61.6249 211.678 li
61.6249 211.918 li
61.5649 211.918 li
61.5649 212.218 li
61.5049 212.218 li
61.5049 212.398 li
61.4449 212.398 li
61.4449 212.698 li
61.3849 212.698 li
61.3849 212.998 li
61.3249 212.998 li
61.3249 213.178 li
61.2649 213.178 li
61.2649 213.538 li
61.2049 213.538 li
61.2049 213.898 li
61.1449 213.898 li
61.1449 214.078 li
61.0849 214.078 li
61.0849 214.438 li
61.0249 214.438 li
61.0249 214.798 li
60.9649 214.798 li
60.9649 214.978 li
60.9049 214.978 li
60.9049 215.338 li
60.8449 215.338 li
60.8449 215.698 li
60.7849 215.698 li
60.7849 215.878 li
60.7249 215.878 li
60.7249 216.298 li
60.6649 216.298 li
60.6649 216.718 li
60.6049 216.718 li
60.6049 216.898 li
60.5449 216.898 li
60.5449 217.258 li
60.4849 217.258 li
60.4849 217.678 li
60.4249 217.678 li
60.4249 217.858 li
60.3649 217.858 li
60.3649 218.278 li
60.3049 218.278 li
60.3049 218.518 li
63.4249 218.518 li
63.6049 218.578 li
63.6049 218.698 li
63.6649 219.118 li
63.6049 219.118 li
63.6049 219.238 li
63.4849 219.298 li
63.4249 219.358 li
63.3049 219.418 li
60.0649 219.418 li
60.0649 219.658 li
60.0049 219.658 li
60.0049 220.018 li
59.9449 220.018 li
59.9449 220.438 li
59.8849 220.438 li
59.8849 220.618 li
59.8249 220.618 li
59.8249 221.038 li
59.7649 221.038 li
59.7649 221.398 li
59.7049 221.398 li
59.7049 221.638 li
59.6449 221.638 li
59.6449 221.998 li
59.5849 221.998 li
59.5849 222.358 li
59.5249 222.358 li
59.5249 222.598 li
59.4649 222.598 li
59.4649 222.958 li
59.4049 222.958 li
59.4049 223.318 li
59.3449 223.318 li
59.3449 223.558 li
59.2849 223.558 li
59.2849 223.918 li
59.2249 223.918 li
59.2249 224.338 li
59.1649 224.338 li
59.1649 224.518 li
59.1049 224.518 li
59.1049 224.878 li
59.0449 224.878 li
59.0449 225.238 li
58.9849 225.238 li
58.9849 225.418 li
58.9249 225.418 li
58.9249 225.838 li
58.8649 225.838 li
58.8649 226.198 li
58.8049 226.198 li
58.8049 226.378 li
58.7449 226.378 li
58.7449 226.738 li
58.6849 226.738 li
58.6849 227.098 li
58.6249 227.098 li
58.6249 227.338 li
58.5649 227.338 li
58.5649 227.698 li
58.5049 227.698 li
58.5049 228.058 li
58.4449 228.058 li
58.4449 228.238 li
58.3849 228.238 li
58.3849 228.598 li
58.3249 228.598 li
58.3249 228.958 li
58.2649 228.958 li
58.2649 229.138 li
58.2049 229.138 li
58.2049 229.498 li
58.1449 229.498 li
58.1449 229.858 li
58.0849 229.858 li
58.0849 230.038 li
58.0249 230.038 li
58.0249 230.398 li
57.9649 230.398 li
57.9649 230.758 li
57.9049 230.758 li
57.9049 230.938 li
57.8449 230.938 li
57.8449 231.238 li
57.7849 231.238 li
57.7849 231.598 li
57.7249 231.598 li
57.7249 231.718 li
57.6649 231.718 li
57.6649 232.018 li
57.6049 232.018 li
57.6049 232.318 li
57.5449 232.318 li
57.5449 232.438 li
57.4849 232.438 li
57.4849 232.738 li
57.4249 232.738 li
57.4249 232.978 li
57.3649 232.978 li
57.3649 233.098 li
57.3049 233.098 li
57.3049 233.338 li
57.2449 233.338 li
57.2449 233.578 li
57.1849 233.578 li
57.1849 233.758 li
57.1249 233.758 li
57.1249 233.878 li
57.0649 233.878 li
57.0649 234.118 li
57.0049 234.118 li
57.0049 234.298 li
56.9449 234.298 li
56.9449 234.358 li
56.8849 234.358 li
56.8849 234.538 li
56.8249 234.538 li
56.8249 234.718 li
56.7649 234.718 li
56.7649 234.778 li
56.7049 234.778 li
56.7049 234.958 li
56.6449 234.958 li
56.6449 235.138 li
56.5849 235.138 li
56.5849 235.258 li
56.5249 235.258 li
56.5249 235.438 li
56.4649 235.438 li
56.4649 235.618 li
56.4049 235.618 li
56.4049 235.678 li
56.3449 235.678 li
56.3449 235.798 li
56.2849 235.798 li
56.2849 235.918 li
56.2249 235.918 li
56.2249 235.978 li
56.1649 235.978 li
56.1649 236.158 li
56.1049 236.158 li
56.1049 236.278 li
56.0449 236.338 li
55.9849 236.338 li
55.9849 236.458 li
55.9249 236.518 li
55.9249 236.578 li
55.8649 236.578 li
55.8649 236.638 li
55.8049 236.698 li
55.8049 236.758 li
55.7449 236.758 li
55.7449 236.878 li
55.6249 236.938 li
55.6249 236.998 li
55.5649 237.058 li
55.5649 237.118 li
55.4449 237.178 li
55.4449 237.238 li
54.9239 237.853 54.2859 238.405 53.4649 238.618 cv
53.2249 238.678 li
ef
68.1049 236.938 mo
68.1049 236.398 li
68.5249 236.398 li
69.3049 236.338 li
69.5449 236.338 li
69.7249 236.278 li
69.9649 236.158 li
69.9649 236.098 li
70.0249 236.038 li
70.0249 235.978 li
70.0849 235.978 li
70.0849 235.858 li
70.1449 235.858 li
70.1449 233.218 li
64.3849 233.218 li
64.3849 232.558 li
64.4449 232.558 li
64.4449 232.498 li
64.5049 232.498 li
64.5049 232.378 li
64.5649 232.378 li
64.5649 232.258 li
64.6249 232.258 li
64.6249 232.198 li
64.6849 232.198 li
64.6849 232.078 li
64.7449 232.078 li
64.7449 231.958 li
64.8049 231.958 li
64.8049 231.898 li
64.8649 231.898 li
64.8649 231.778 li
64.9249 231.778 li
64.9249 231.658 li
64.9849 231.658 li
64.9849 231.598 li
65.0449 231.598 li
65.0449 231.478 li
65.1049 231.478 li
65.1049 231.418 li
65.1649 231.418 li
65.1649 231.298 li
65.2249 231.298 li
65.2249 231.238 li
65.2849 231.238 li
65.2849 231.118 li
65.3449 231.118 li
65.4049 231.058 li
65.4049 230.938 li
65.4649 230.938 li
65.4649 230.818 li
65.5249 230.818 li
65.5849 230.758 li
65.5849 230.638 li
65.6449 230.638 li
65.6449 230.518 li
65.7649 230.518 li
65.7649 230.338 li
65.8249 230.338 li
65.8249 230.218 li
65.9449 230.218 li
65.9449 230.038 li
66.0049 230.038 li
66.0049 229.978 li
66.0649 229.978 li
66.0649 229.858 li
66.1249 229.858 li
66.1249 229.798 li
66.1849 229.798 li
66.1849 229.678 li
66.2449 229.678 li
66.2449 229.558 li
66.3049 229.558 li
66.3649 229.498 li
66.3649 229.378 li
66.4249 229.378 li
66.4249 229.258 li
66.5449 229.258 li
66.5449 229.078 li
66.6049 229.078 li
66.6049 228.958 li
66.7249 228.958 li
66.7249 228.778 li
66.7849 228.778 li
66.7849 228.718 li
66.8449 228.718 li
66.9049 228.658 li
66.9049 228.538 li
66.9649 228.538 li
66.9649 228.418 li
67.0249 228.418 li
67.0849 228.358 li
67.0849 228.238 li
67.1449 228.238 li
67.1449 228.118 li
67.2049 228.118 li
67.2649 228.058 li
67.2649 227.998 li
67.3249 227.998 li
67.3249 227.818 li
67.4449 227.818 li
67.4449 227.698 li
67.5049 227.698 li
67.5049 227.518 li
67.6249 227.518 li
67.6249 227.458 li
67.6849 227.398 li
67.6849 227.278 li
67.7449 227.278 li
67.8049 227.218 li
67.8049 227.158 li
67.8649 227.098 li
67.8649 226.978 li
67.9249 226.978 li
67.9849 226.918 li
67.9849 226.858 li
68.0449 226.858 li
68.0449 226.678 li
68.1649 226.678 li
68.1649 226.558 li
68.2249 226.558 li
68.2249 226.498 li
68.2849 226.438 li
68.2849 226.378 li
68.3449 226.378 li
68.3449 226.318 li
68.4049 226.258 li
68.4049 226.198 li
68.4649 226.138 li
68.4649 226.078 li
68.5249 226.078 li
68.5249 226.018 li
68.5849 225.958 li
68.5849 225.898 li
68.6449 225.838 li
68.6449 225.778 li
68.7049 225.778 li
68.7049 225.718 li
68.7649 225.658 li
68.7649 225.598 li
68.8249 225.598 li
68.8249 225.478 li
68.8849 225.478 li
68.8849 225.418 li
68.9449 225.418 li
68.9449 225.298 li
69.0049 225.298 li
69.0049 225.238 li
69.0649 225.238 li
69.0649 225.118 li
69.1249 225.118 li
69.1249 225.058 li
69.1849 224.998 li
69.1849 224.938 li
69.2449 224.938 li
69.2449 224.818 li
69.3049 224.818 li
69.3049 224.758 li
69.3649 224.698 li
69.3649 224.638 li
69.4249 224.638 li
69.4249 224.518 li
69.4849 224.518 li
69.4849 224.458 li
69.5449 224.398 li
69.5449 224.338 li
69.6049 224.338 li
69.6049 224.218 li
69.6649 224.218 li
69.6649 224.158 li
69.7249 224.158 li
69.7249 224.038 li
69.7849 224.038 li
69.7849 223.978 li
69.8449 223.978 li
69.8449 223.858 li
69.9049 223.858 li
69.9049 223.798 li
69.9649 223.798 li
69.9649 223.678 li
70.0249 223.678 li
70.0249 223.618 li
70.0849 223.558 li
70.0849 223.498 li
70.1449 223.498 li
70.1449 223.378 li
70.2049 223.378 li
70.2049 223.258 li
70.2649 223.258 li
70.2649 223.198 li
70.3249 223.138 li
70.3249 223.078 li
70.3849 223.078 li
70.3849 222.958 li
70.4449 222.958 li
70.4449 222.898 li
70.5049 222.898 li
70.5049 222.778 li
70.5649 222.778 li
70.5649 222.718 li
70.6249 222.718 li
70.6249 222.598 li
70.6849 222.598 li
70.6849 222.538 li
70.7449 222.538 li
70.7449 222.418 li
70.8049 222.418 li
70.8049 222.358 li
70.8649 222.298 li
70.8649 222.238 li
70.9249 222.238 li
70.9249 222.118 li
70.9849 222.118 li
71.2849 222.058 li
71.2849 222.118 li
71.3449 222.118 li
71.3449 222.178 li
71.4049 232.618 li
73.6849 232.618 li
73.6849 233.218 li
71.4049 233.218 li
71.4049 235.318 li
71.4649 235.858 li
71.4649 235.978 li
71.5249 236.038 li
71.5849 236.158 li
71.6449 236.158 li
71.8249 236.278 li
72.0049 236.338 li
72.2449 236.338 li
72.9649 236.398 li
73.4449 236.398 li
73.4449 236.938 li
cp
64.8649 232.618 mo
64.8649 232.558 li
64.9249 232.558 li
64.9249 232.498 li
64.9849 232.438 li
64.9849 232.378 li
65.0449 232.378 li
65.0449 232.318 li
65.1049 232.258 li
65.1049 232.198 li
65.1649 232.138 li
65.1649 232.078 li
65.2249 232.078 li
65.2249 232.018 li
65.2849 231.958 li
65.2849 231.898 li
65.3449 231.838 li
65.3449 231.778 li
65.4049 231.778 li
65.4049 231.718 li
65.4649 231.658 li
65.4649 231.598 li
65.5249 231.598 li
65.5249 231.478 li
65.5849 231.478 li
65.5849 231.418 li
65.6449 231.418 li
65.6449 231.298 li
65.7049 231.298 li
65.7049 231.238 li
65.7649 231.238 li
65.7649 231.118 li
65.8249 231.118 li
65.8249 231.058 li
65.8849 230.998 li
65.8849 230.938 li
65.9449 230.938 li
65.9449 230.878 li
66.0049 230.818 li
66.0049 230.758 li
66.0649 230.698 li
66.0649 230.578 li
66.1249 230.578 li
66.1849 230.518 li
66.1849 230.458 li
66.2449 230.398 li
66.2449 230.278 li
66.3049 230.278 li
66.3649 230.218 li
66.3649 230.158 li
66.4249 230.158 li
66.4249 229.978 li
66.5449 229.978 li
66.5449 229.858 li
66.6049 229.858 li
66.6049 229.678 li
66.7249 229.678 li
66.7249 229.498 li
66.7849 229.498 li
66.7849 229.438 li
66.8449 229.438 li
66.9049 229.378 li
66.9049 229.258 li
66.9649 229.258 li
66.9649 229.138 li
67.0249 229.138 li
67.0849 229.078 li
67.0849 228.958 li
67.1449 228.958 li
67.1449 228.838 li
67.2049 228.838 li
67.2649 228.778 li
67.2649 228.658 li
67.3249 228.658 li
67.3249 228.538 li
67.4449 228.538 li
67.4449 228.358 li
67.5049 228.358 li
67.5049 228.238 li
67.6249 228.238 li
67.6249 228.058 li
67.6849 228.058 li
67.6849 227.998 li
67.7449 227.998 li
67.8049 227.938 li
67.8049 227.818 li
67.8649 227.818 li
67.8649 227.698 li
67.9249 227.698 li
67.9849 227.638 li
67.9849 227.518 li
68.0449 227.518 li
68.0449 227.398 li
68.1049 227.398 li
68.1649 227.338 li
68.1649 227.218 li
68.2249 227.218 li
68.2249 227.098 li
68.3449 227.098 li
68.3449 226.918 li
68.4049 226.918 li
68.4049 226.858 li
68.4649 226.858 li
68.4649 226.738 li
68.5249 226.738 li
68.5249 226.678 li
68.5849 226.678 li
68.5849 226.558 li
68.6449 226.558 li
68.6449 226.498 li
68.7049 226.498 li
68.7049 226.378 li
68.7649 226.378 li
68.7649 226.258 li
68.8249 226.258 li
68.8249 226.198 li
68.8849 226.198 li
68.8849 226.078 li
68.9449 226.078 li
68.9449 225.958 li
69.0049 225.958 li
69.0049 225.898 li
69.0649 225.898 li
69.0649 225.778 li
69.1249 225.778 li
69.1249 225.658 li
69.1849 225.658 li
69.1849 225.598 li
69.2449 225.598 li
69.2449 225.478 li
69.3049 225.478 li
69.3049 225.418 li
69.3649 225.418 li
69.3649 225.298 li
69.4249 225.298 li
69.4249 225.238 li
69.4849 225.238 li
69.4849 225.118 li
69.5449 225.118 li
69.5449 225.058 li
69.6049 225.058 li
69.6049 224.938 li
69.6649 224.938 li
69.6649 224.818 li
69.7249 224.818 li
69.7249 224.758 li
69.7849 224.758 li
69.7849 224.638 li
69.8449 224.638 li
69.8449 224.518 li
69.9049 224.518 li
69.9049 224.458 li
69.9649 224.458 li
69.9649 224.338 li
70.0249 224.338 li
70.0249 224.218 li
70.0849 224.218 li
70.0849 224.158 li
70.1449 224.158 li
70.1449 224.038 li
70.2049 232.618 li
ef
52.3849 238.678 mo
52.2649 238.618 li
52.0239 238.507 51.8199 238.611 51.5449 238.378 cv
51.4249 238.378 li
51.4249 238.318 li
51.0649 238.138 li
50.9449 238.018 li
50.6449 237.778 li
50.6449 237.658 li
50.5249 237.598 li
50.5249 237.538 li
50.4649 237.478 li
50.4049 237.358 li
50.3449 237.238 li
50.3449 237.178 li
50.2849 237.058 li
50.2849 236.878 li
50.2249 236.578 li
50.2849 236.578 li
50.2849 236.098 li
50.3449 236.098 li
50.3449 235.858 li
50.4049 235.858 li
50.4049 235.798 li
50.4649 235.798 li
50.4649 235.678 li
50.5249 235.678 li
50.5249 235.618 li
50.5849 235.558 li
50.5849 235.498 li
50.6449 235.498 li
51.0609 234.917 51.9959 234.615 52.5649 235.138 cv
52.6249 235.138 li
52.6249 235.198 li
52.8049 235.378 li
52.8649 235.618 li
52.8649 236.278 li
52.8049 236.278 li
52.8049 236.458 li
52.7449 236.458 li
52.7449 236.578 li
52.6849 236.578 li
52.6849 236.698 li
52.6249 236.698 li
52.6249 236.758 li
52.5649 236.818 li
52.5049 236.818 li
52.5049 236.878 li
52.0499 237.364 52.0949 237.149 51.6049 237.418 cv
51.2449 237.418 li
51.3649 237.478 li
51.5449 237.658 li
51.6049 237.658 li
51.7249 237.778 li
51.7849 237.778 li
52.1449 237.958 li
52.2649 237.958 li
52.4449 238.018 li
53.1649 238.018 li
53.2849 237.958 li
53.4049 237.958 li
53.6449 237.838 li
53.6449 237.778 li
53.7649 237.778 li
54.1249 237.418 li
54.1249 237.298 li
54.1849 237.238 li
54.1849 237.178 li
54.2449 237.178 li
54.3049 237.118 li
54.3049 236.998 li
54.3649 236.998 li
54.3649 236.938 li
54.4249 236.878 li
54.4249 236.818 li
54.4849 236.818 li
54.4849 236.638 li
54.5449 236.638 li
54.5449 236.518 li
54.6049 236.518 li
54.6049 236.398 li
54.6649 236.398 li
54.6649 236.158 li
54.7249 236.158 li
54.7249 235.978 li
54.7849 235.978 li
54.7849 235.858 li
54.8449 235.858 li
54.8449 235.618 li
54.9049 235.618 li
54.9049 235.378 li
54.9649 235.378 li
54.9649 235.258 li
55.0249 235.258 li
55.0249 234.958 li
55.0849 234.958 li
55.0849 234.658 li
55.1449 234.658 li
55.1449 234.478 li
55.2049 234.478 li
55.2049 234.178 li
55.2649 234.178 li
55.2649 233.818 li
55.3249 233.818 li
55.3249 233.638 li
55.3849 233.638 li
55.3849 233.278 li
55.4449 233.278 li
55.4449 232.918 li
55.5049 232.918 li
55.5049 232.738 li
55.5649 232.738 li
55.5649 232.378 li
55.6249 232.378 li
55.6249 232.078 li
55.6849 232.078 li
55.6849 231.898 li
55.7449 231.898 li
55.7449 231.538 li
55.8049 231.538 li
55.8049 231.178 li
55.8649 231.178 li
55.8649 230.998 li
55.9249 230.998 li
55.9249 230.638 li
55.9849 230.638 li
55.9849 230.278 li
56.0449 230.278 li
56.0449 230.098 li
56.1049 230.098 li
56.1049 229.678 li
56.1649 229.678 li
56.1649 229.318 li
56.2249 229.318 li
56.2249 229.138 li
56.2849 229.138 li
56.2849 228.778 li
56.3449 228.778 li
56.3449 228.418 li
56.4049 228.418 li
56.4049 228.238 li
56.4649 228.238 li
56.4649 227.878 li
56.5249 227.878 li
56.5249 227.458 li
56.5849 227.458 li
56.5849 227.278 li
56.6449 227.278 li
56.6449 226.918 li
56.7049 226.918 li
56.7049 226.558 li
56.7649 226.558 li
56.7649 226.378 li
56.8249 226.378 li
56.8249 225.958 li
56.8849 225.958 li
56.8849 225.598 li
56.9449 225.598 li
56.9449 225.418 li
57.0049 225.418 li
57.0049 225.058 li
57.0649 225.058 li
57.0649 224.638 li
57.1249 224.638 li
57.1249 224.458 li
57.1849 224.458 li
57.1849 224.038 li
57.2449 224.038 li
57.2449 223.678 li
57.3049 223.678 li
57.3049 223.318 li
57.3649 223.318 li
57.3649 223.078 li
57.4249 223.078 li
57.4249 222.718 li
57.4849 222.718 li
57.4849 222.358 li
57.5449 222.358 li
57.5449 222.178 li
57.6049 222.178 li
57.6049 221.758 li
57.6649 221.758 li
57.6649 221.338 li
57.7249 221.338 li
57.7249 221.158 li
57.7849 221.158 li
57.7849 220.798 li
57.8449 220.798 li
57.8449 220.378 li
57.9049 220.378 li
57.9049 220.198 li
57.9649 220.198 li
57.9649 219.778 li
58.0249 219.778 li
58.0249 219.418 li
55.4449 219.418 li
55.2649 219.238 li
55.2049 219.058 li
55.2649 219.058 li
55.2649 218.698 li
55.3249 218.698 li
55.3249 218.638 li
55.3849 218.638 li
55.4449 218.578 li
55.6249 218.518 li
58.2649 218.518 li
58.3249 218.458 li
58.3249 218.038 li
58.3849 218.038 li
58.3849 217.678 li
58.4449 217.678 li
58.4449 217.438 li
58.5049 217.438 li
58.5049 217.078 li
58.5649 217.078 li
58.5649 216.658 li
58.6249 216.658 li
58.6249 216.478 li
58.6849 216.478 li
58.6849 216.058 li
58.7449 216.058 li
58.7449 215.698 li
58.8049 215.698 li
58.8049 215.518 li
58.8649 215.518 li
58.8649 215.158 li
58.9249 215.158 li
58.9249 214.858 li
58.9849 214.858 li
58.9849 214.738 li
59.0449 214.738 li
59.0449 214.378 li
59.1049 214.378 li
59.1049 214.078 li
59.1649 214.078 li
59.1649 214.018 li
59.2249 214.018 li
59.2249 213.718 li
59.2849 213.718 li
59.2849 213.478 li
59.3449 213.478 li
59.3449 213.358 li
59.4049 213.358 li
59.4049 213.118 li
59.4649 213.118 li
59.4649 212.938 li
59.5249 212.938 li
59.5249 212.818 li
59.5849 212.818 li
59.5849 212.638 li
59.6449 212.638 li
59.6449 212.458 li
59.7049 212.458 li
59.7049 212.398 li
59.7649 212.398 li
59.7649 212.278 li
59.8249 212.278 li
59.8249 212.158 li
59.8849 212.158 li
59.8849 212.038 li
59.9449 212.038 li
59.9449 211.918 li
60.0049 211.918 li
60.0049 211.798 li
60.0649 211.798 li
60.0649 211.738 li
60.1249 211.738 li
60.1249 211.618 li
60.1849 211.618 li
60.1849 211.498 li
60.2449 211.498 li
60.3649 211.438 li
60.3649 211.318 li
60.4849 211.258 li
60.4849 211.198 li
60.9049 210.778 li
60.9649 210.778 li
61.2049 210.538 li
61.2649 210.538 li
61.3849 210.418 li
61.4449 210.418 li
61.5649 210.358 li
61.6249 210.298 li
61.9849 210.118 li
62.0449 210.058 li
62.2249 209.998 li
62.5249 209.938 li
62.5849 209.878 li
62.8249 209.878 li
63.7849 209.818 li
63.7849 209.878 li
64.3249 209.998 li
64.5319 210.024 64.9789 210.267 65.1649 210.358 cv
65.2849 210.538 li
65.4049 210.538 li
65.4649 210.658 li
65.8559 211.059 66.0309 211.658 65.9449 212.218 cv
65.9449 212.398 li
65.8849 212.398 li
65.8849 212.458 li
65.8249 212.458 li
65.8249 212.638 li
65.7649 212.638 li
65.7649 212.818 li
65.6449 212.818 li
65.6449 212.998 li
65.3449 213.298 li
65.2849 213.298 li
65.2249 213.358 li
65.1649 213.358 li
65.1049 213.418 li
64.9249 213.538 li
64.8049 213.538 li
64.6849 213.598 li
64.0849 213.598 li
63.8449 213.478 li
63.7849 213.478 li
63.4849 213.178 li
63.3649 212.998 li
63.3049 212.818 li
63.3049 212.278 li
63.3649 212.278 li
63.3649 212.158 li
63.4249 212.158 li
63.4249 211.978 li
63.4849 211.978 li
63.4849 211.858 li
63.5449 211.858 li
63.5449 211.798 li
63.6049 211.798 li
63.6049 211.678 li
63.8849 211.395 64.3289 211.066 64.7449 211.078 cv
64.9249 211.018 li
64.8649 210.958 li
64.7449 210.898 li
64.6249 210.778 li
64.5649 210.778 li
64.2049 210.598 li
64.0849 210.598 li
63.9649 210.538 li
63.8449 210.538 li
63.6049 210.478 li
62.9449 210.418 li
62.9449 210.478 li
62.7649 210.538 li
62.4649 210.718 li
62.4049 210.718 li
62.2249 210.898 li
62.1649 210.898 li
62.1649 210.958 li
61.9849 211.138 li
61.9249 211.138 li
61.9249 211.258 li
61.8649 211.258 li
61.8649 211.318 li
61.8049 211.318 li
61.8049 211.498 li
61.7449 211.498 li
61.7449 211.558 li
61.6849 211.558 li
61.6849 211.678 li
61.6249 211.678 li
61.6249 211.918 li
61.5649 211.918 li
61.5649 212.218 li
61.5049 212.218 li
61.5049 212.398 li
61.4449 212.398 li
61.4449 212.698 li
61.3849 212.698 li
61.3849 212.998 li
61.3249 212.998 li
61.3249 213.178 li
61.2649 213.178 li
61.2649 213.538 li
61.2049 213.538 li
61.2049 213.898 li
61.1449 213.898 li
61.1449 214.078 li
61.0849 214.078 li
61.0849 214.438 li
61.0249 214.438 li
61.0249 214.798 li
60.9649 214.798 li
60.9649 214.978 li
60.9049 214.978 li
60.9049 215.338 li
60.8449 215.338 li
60.8449 215.698 li
60.7849 215.698 li
60.7849 215.878 li
60.7249 215.878 li
60.7249 216.298 li
60.6649 216.298 li
60.6649 216.718 li
60.6049 216.718 li
60.6049 216.898 li
60.5449 216.898 li
60.5449 217.258 li
60.4849 217.258 li
60.4849 217.678 li
60.4249 217.678 li
60.4249 217.858 li
60.3649 217.858 li
60.3649 218.278 li
60.3049 218.278 li
60.3049 218.518 li
63.4249 218.518 li
63.6049 218.578 li
63.6049 218.698 li
63.6649 219.118 li
63.6049 219.118 li
63.6049 219.238 li
63.4849 219.298 li
63.4249 219.358 li
63.3049 219.418 li
60.0649 219.418 li
60.0649 219.658 li
60.0049 219.658 li
60.0049 220.018 li
59.9449 220.018 li
59.9449 220.438 li
59.8849 220.438 li
59.8849 220.618 li
59.8249 220.618 li
59.8249 221.038 li
59.7649 221.038 li
59.7649 221.398 li
59.7049 221.398 li
59.7049 221.638 li
59.6449 221.638 li
59.6449 221.998 li
59.5849 221.998 li
59.5849 222.358 li
59.5249 222.358 li
59.5249 222.598 li
59.4649 222.598 li
59.4649 222.958 li
59.4049 222.958 li
59.4049 223.318 li
59.3449 223.318 li
59.3449 223.558 li
59.2849 223.558 li
59.2849 223.918 li
59.2249 223.918 li
59.2249 224.338 li
59.1649 224.338 li
59.1649 224.518 li
59.1049 224.518 li
59.1049 224.878 li
59.0449 224.878 li
59.0449 225.238 li
58.9849 225.238 li
58.9849 225.418 li
58.9249 225.418 li
58.9249 225.838 li
58.8649 225.838 li
58.8649 226.198 li
58.8049 226.198 li
58.8049 226.378 li
58.7449 226.378 li
58.7449 226.738 li
58.6849 226.738 li
58.6849 227.098 li
58.6249 227.098 li
58.6249 227.338 li
58.5649 227.338 li
58.5649 227.698 li
58.5049 227.698 li
58.5049 228.058 li
58.4449 228.058 li
58.4449 228.238 li
58.3849 228.238 li
58.3849 228.598 li
58.3249 228.598 li
58.3249 228.958 li
58.2649 228.958 li
58.2649 229.138 li
58.2049 229.138 li
58.2049 229.498 li
58.1449 229.498 li
58.1449 229.858 li
58.0849 229.858 li
58.0849 230.038 li
58.0249 230.038 li
58.0249 230.398 li
57.9649 230.398 li
57.9649 230.758 li
57.9049 230.758 li
57.9049 230.938 li
57.8449 230.938 li
57.8449 231.238 li
57.7849 231.238 li
57.7849 231.598 li
57.7249 231.598 li
57.7249 231.718 li
57.6649 231.718 li
57.6649 232.018 li
57.6049 232.018 li
57.6049 232.318 li
57.5449 232.318 li
57.5449 232.438 li
57.4849 232.438 li
57.4849 232.738 li
57.4249 232.738 li
57.4249 232.978 li
57.3649 232.978 li
57.3649 233.098 li
57.3049 233.098 li
57.3049 233.338 li
57.2449 233.338 li
57.2449 233.578 li
57.1849 233.578 li
57.1849 233.758 li
57.1249 233.758 li
57.1249 233.878 li
57.0649 233.878 li
57.0649 234.118 li
57.0049 234.118 li
57.0049 234.298 li
56.9449 234.298 li
56.9449 234.358 li
56.8849 234.358 li
56.8849 234.538 li
56.8249 234.538 li
56.8249 234.718 li
56.7649 234.718 li
56.7649 234.778 li
56.7049 234.778 li
56.7049 234.958 li
56.6449 234.958 li
56.6449 235.138 li
56.5849 235.138 li
56.5849 235.258 li
56.5249 235.258 li
56.5249 235.438 li
56.4649 235.438 li
56.4649 235.618 li
56.4049 235.618 li
56.4049 235.678 li
56.3449 235.678 li
56.3449 235.798 li
56.2849 235.798 li
56.2849 235.918 li
56.2249 235.918 li
56.2249 235.978 li
56.1649 235.978 li
56.1649 236.158 li
56.1049 236.158 li
56.1049 236.278 li
56.0449 236.338 li
55.9849 236.338 li
55.9849 236.458 li
55.9249 236.518 li
55.9249 236.578 li
55.8649 236.578 li
55.8649 236.638 li
55.8049 236.698 li
55.8049 236.758 li
55.7449 236.758 li
55.7449 236.878 li
55.6249 236.938 li
55.6249 236.998 li
55.5649 237.058 li
55.5649 237.118 li
55.4449 237.178 li
55.4449 237.238 li
54.9239 237.853 54.2859 238.405 53.4649 238.618 cv
53.2249 238.678 li
ef
68.1049 236.938 mo
68.1049 236.398 li
68.5249 236.398 li
69.3049 236.338 li
69.5449 236.338 li
69.7249 236.278 li
69.9649 236.158 li
69.9649 236.098 li
70.0249 236.038 li
70.0249 235.978 li
70.0849 235.978 li
70.0849 235.858 li
70.1449 235.858 li
70.1449 233.218 li
64.3849 233.218 li
64.3849 232.558 li
64.4449 232.558 li
64.4449 232.498 li
64.5049 232.498 li
64.5049 232.378 li
64.5649 232.378 li
64.5649 232.258 li
64.6249 232.258 li
64.6249 232.198 li
64.6849 232.198 li
64.6849 232.078 li
64.7449 232.078 li
64.7449 231.958 li
64.8049 231.958 li
64.8049 231.898 li
64.8649 231.898 li
64.8649 231.778 li
64.9249 231.778 li
64.9249 231.658 li
64.9849 231.658 li
64.9849 231.598 li
65.0449 231.598 li
65.0449 231.478 li
65.1049 231.478 li
65.1049 231.418 li
65.1649 231.418 li
65.1649 231.298 li
65.2249 231.298 li
65.2249 231.238 li
65.2849 231.238 li
65.2849 231.118 li
65.3449 231.118 li
65.4049 231.058 li
65.4049 230.938 li
65.4649 230.938 li
65.4649 230.818 li
65.5249 230.818 li
65.5849 230.758 li
65.5849 230.638 li
65.6449 230.638 li
65.6449 230.518 li
65.7649 230.518 li
65.7649 230.338 li
65.8249 230.338 li
65.8249 230.218 li
65.9449 230.218 li
65.9449 230.038 li
66.0049 230.038 li
66.0049 229.978 li
66.0649 229.978 li
66.0649 229.858 li
66.1249 229.858 li
66.1249 229.798 li
66.1849 229.798 li
66.1849 229.678 li
66.2449 229.678 li
66.2449 229.558 li
66.3049 229.558 li
66.3649 229.498 li
66.3649 229.378 li
66.4249 229.378 li
66.4249 229.258 li
66.5449 229.258 li
66.5449 229.078 li
66.6049 229.078 li
66.6049 228.958 li
66.7249 228.958 li
66.7249 228.778 li
66.7849 228.778 li
66.7849 228.718 li
66.8449 228.718 li
66.9049 228.658 li
66.9049 228.538 li
66.9649 228.538 li
66.9649 228.418 li
67.0249 228.418 li
67.0849 228.358 li
67.0849 228.238 li
67.1449 228.238 li
67.1449 228.118 li
67.2049 228.118 li
67.2649 228.058 li
67.2649 227.998 li
67.3249 227.998 li
67.3249 227.818 li
67.4449 227.818 li
67.4449 227.698 li
67.5049 227.698 li
67.5049 227.518 li
67.6249 227.518 li
67.6249 227.458 li
67.6849 227.398 li
67.6849 227.278 li
67.7449 227.278 li
67.8049 227.218 li
67.8049 227.158 li
67.8649 227.098 li
67.8649 226.978 li
67.9249 226.978 li
67.9849 226.918 li
67.9849 226.858 li
68.0449 226.858 li
68.0449 226.678 li
68.1649 226.678 li
68.1649 226.558 li
68.2249 226.558 li
68.2249 226.498 li
68.2849 226.438 li
68.2849 226.378 li
68.3449 226.378 li
68.3449 226.318 li
68.4049 226.258 li
68.4049 226.198 li
68.4649 226.138 li
68.4649 226.078 li
68.5249 226.078 li
68.5249 226.018 li
68.5849 225.958 li
68.5849 225.898 li
68.6449 225.838 li
68.6449 225.778 li
68.7049 225.778 li
68.7049 225.718 li
68.7649 225.658 li
68.7649 225.598 li
68.8249 225.598 li
68.8249 225.478 li
68.8849 225.478 li
68.8849 225.418 li
68.9449 225.418 li
68.9449 225.298 li
69.0049 225.298 li
69.0049 225.238 li
69.0649 225.238 li
69.0649 225.118 li
69.1249 225.118 li
69.1249 225.058 li
69.1849 224.998 li
69.1849 224.938 li
69.2449 224.938 li
69.2449 224.818 li
69.3049 224.818 li
69.3049 224.758 li
69.3649 224.698 li
69.3649 224.638 li
69.4249 224.638 li
69.4249 224.518 li
69.4849 224.518 li
69.4849 224.458 li
69.5449 224.398 li
69.5449 224.338 li
69.6049 224.338 li
69.6049 224.218 li
69.6649 224.218 li
69.6649 224.158 li
69.7249 224.158 li
69.7249 224.038 li
69.7849 224.038 li
69.7849 223.978 li
69.8449 223.978 li
69.8449 223.858 li
69.9049 223.858 li
69.9049 223.798 li
69.9649 223.798 li
69.9649 223.678 li
70.0249 223.678 li
70.0249 223.618 li
70.0849 223.558 li
70.0849 223.498 li
70.1449 223.498 li
70.1449 223.378 li
70.2049 223.378 li
70.2049 223.258 li
70.2649 223.258 li
70.2649 223.198 li
70.3249 223.138 li
70.3249 223.078 li
70.3849 223.078 li
70.3849 222.958 li
70.4449 222.958 li
70.4449 222.898 li
70.5049 222.898 li
70.5049 222.778 li
70.5649 222.778 li
70.5649 222.718 li
70.6249 222.718 li
70.6249 222.598 li
70.6849 222.598 li
70.6849 222.538 li
70.7449 222.538 li
70.7449 222.418 li
70.8049 222.418 li
70.8049 222.358 li
70.8649 222.298 li
70.8649 222.238 li
70.9249 222.238 li
70.9249 222.118 li
70.9849 222.118 li
71.2849 222.058 li
71.2849 222.118 li
71.3449 222.118 li
71.3449 222.178 li
71.4049 232.618 li
73.6849 232.618 li
73.6849 233.218 li
71.4049 233.218 li
71.4049 235.318 li
71.4649 235.858 li
71.4649 235.978 li
71.5249 236.038 li
71.5849 236.158 li
71.6449 236.158 li
71.8249 236.278 li
72.0049 236.338 li
72.2449 236.338 li
72.9649 236.398 li
73.4449 236.398 li
73.4449 236.938 li
cp
64.8649 232.618 mo
64.8649 232.558 li
64.9249 232.558 li
64.9249 232.498 li
64.9849 232.438 li
64.9849 232.378 li
65.0449 232.378 li
65.0449 232.318 li
65.1049 232.258 li
65.1049 232.198 li
65.1649 232.138 li
65.1649 232.078 li
65.2249 232.078 li
65.2249 232.018 li
65.2849 231.958 li
65.2849 231.898 li
65.3449 231.838 li
65.3449 231.778 li
65.4049 231.778 li
65.4049 231.718 li
65.4649 231.658 li
65.4649 231.598 li
65.5249 231.598 li
65.5249 231.478 li
65.5849 231.478 li
65.5849 231.418 li
65.6449 231.418 li
65.6449 231.298 li
65.7049 231.298 li
65.7049 231.238 li
65.7649 231.238 li
65.7649 231.118 li
65.8249 231.118 li
65.8249 231.058 li
65.8849 230.998 li
65.8849 230.938 li
65.9449 230.938 li
65.9449 230.878 li
66.0049 230.818 li
66.0049 230.758 li
66.0649 230.698 li
66.0649 230.578 li
66.1249 230.578 li
66.1849 230.518 li
66.1849 230.458 li
66.2449 230.398 li
66.2449 230.278 li
66.3049 230.278 li
66.3649 230.218 li
66.3649 230.158 li
66.4249 230.158 li
66.4249 229.978 li
66.5449 229.978 li
66.5449 229.858 li
66.6049 229.858 li
66.6049 229.678 li
66.7249 229.678 li
66.7249 229.498 li
66.7849 229.498 li
66.7849 229.438 li
66.8449 229.438 li
66.9049 229.378 li
66.9049 229.258 li
66.9649 229.258 li
66.9649 229.138 li
67.0249 229.138 li
67.0849 229.078 li
67.0849 228.958 li
67.1449 228.958 li
67.1449 228.838 li
67.2049 228.838 li
67.2649 228.778 li
67.2649 228.658 li
67.3249 228.658 li
67.3249 228.538 li
67.4449 228.538 li
67.4449 228.358 li
67.5049 228.358 li
67.5049 228.238 li
67.6249 228.238 li
67.6249 228.058 li
67.6849 228.058 li
67.6849 227.998 li
67.7449 227.998 li
67.8049 227.938 li
67.8049 227.818 li
67.8649 227.818 li
67.8649 227.698 li
67.9249 227.698 li
67.9849 227.638 li
67.9849 227.518 li
68.0449 227.518 li
68.0449 227.398 li
68.1049 227.398 li
68.1649 227.338 li
68.1649 227.218 li
68.2249 227.218 li
68.2249 227.098 li
68.3449 227.098 li
68.3449 226.918 li
68.4049 226.918 li
68.4049 226.858 li
68.4649 226.858 li
68.4649 226.738 li
68.5249 226.738 li
68.5249 226.678 li
68.5849 226.678 li
68.5849 226.558 li
68.6449 226.558 li
68.6449 226.498 li
68.7049 226.498 li
68.7049 226.378 li
68.7649 226.378 li
68.7649 226.258 li
68.8249 226.258 li
68.8249 226.198 li
68.8849 226.198 li
68.8849 226.078 li
68.9449 226.078 li
68.9449 225.958 li
69.0049 225.958 li
69.0049 225.898 li
69.0649 225.898 li
69.0649 225.778 li
69.1249 225.778 li
69.1249 225.658 li
69.1849 225.658 li
69.1849 225.598 li
69.2449 225.598 li
69.2449 225.478 li
69.3049 225.478 li
69.3049 225.418 li
69.3649 225.418 li
69.3649 225.298 li
69.4249 225.298 li
69.4249 225.238 li
69.4849 225.238 li
69.4849 225.118 li
69.5449 225.118 li
69.5449 225.058 li
69.6049 225.058 li
69.6049 224.938 li
69.6649 224.938 li
69.6649 224.818 li
69.7249 224.818 li
69.7249 224.758 li
69.7849 224.758 li
69.7849 224.638 li
69.8449 224.638 li
69.8449 224.518 li
69.9049 224.518 li
69.9049 224.458 li
69.9649 224.458 li
69.9649 224.338 li
70.0249 224.338 li
70.0249 224.218 li
70.0849 224.218 li
70.0849 224.158 li
70.1449 224.158 li
70.1449 224.038 li
70.2049 232.618 li
ef
224.405 479.938 mo
224.285 479.938 li
223.925 479.818 li
223.865 479.818 li
223.745 479.758 li
223.565 479.698 li
223.505 479.638 li
223.445 479.638 li
223.205 479.518 li
223.205 479.458 li
223.145 479.458 li
223.025 479.398 li
222.965 479.338 li
222.665 479.038 li
222.665 478.978 li
222.485 478.798 li
222.425 478.678 li
222.425 478.558 li
222.365 478.498 li
222.305 478.378 li
222.305 478.138 li
222.245 477.898 li
222.305 477.838 li
222.305 477.418 li
222.365 477.418 li
222.365 477.298 li
222.425 477.298 li
222.425 477.058 li
222.485 477.058 li
222.485 476.938 li
222.545 476.938 li
222.545 476.878 li
222.605 476.878 li
222.605 476.758 li
222.665 476.758 li
222.905 476.518 li
222.965 476.518 li
223.025 476.398 li
223.325 476.278 li
223.445 476.218 li
223.565 476.218 li
224.105 476.158 li
224.105 476.218 li
224.285 476.218 li
224.345 476.278 li
224.525 476.398 li
224.645 476.398 li
224.645 476.518 li
225.01 476.843 224.841 476.835 224.885 477.418 cv
224.885 477.598 li
224.825 477.598 li
224.825 477.778 li
224.765 477.778 li
224.765 477.838 li
224.705 477.838 li
224.705 477.958 li
224.645 477.958 li
224.645 478.018 li
224.585 478.138 li
224.525 478.138 li
224.525 478.198 li
224.465 478.258 li
224.405 478.318 li
224.285 478.438 li
224.165 478.498 li
224.105 478.498 li
223.745 478.678 li
223.625 478.678 li
223.325 478.738 li
223.385 478.738 li
223.505 478.918 li
223.565 478.918 li
223.625 478.978 li
223.745 479.038 li
223.805 479.098 li
223.925 479.098 li
224.045 479.218 li
224.165 479.218 li
224.285 479.278 li
225.365 479.278 li
225.425 479.218 li
225.665 479.098 li
225.725 479.098 li
226.145 478.678 li
226.145 478.618 li
226.265 478.558 li
226.265 478.498 li
226.325 478.438 li
226.325 478.318 li
226.385 478.318 li
226.385 478.198 li
226.445 478.198 li
226.445 478.138 li
226.505 478.138 li
226.505 477.958 li
226.565 477.958 li
226.565 477.838 li
226.625 477.838 li
226.625 477.658 li
226.685 477.658 li
226.685 477.478 li
226.745 477.478 li
226.745 477.358 li
226.805 477.358 li
226.805 477.178 li
226.865 477.178 li
226.865 476.938 li
226.925 476.938 li
226.925 476.758 li
226.985 476.758 li
226.985 476.518 li
227.045 476.518 li
227.045 476.278 li
227.105 476.278 li
227.105 476.098 li
227.165 476.098 li
227.165 475.798 li
227.225 475.798 li
227.225 475.438 li
227.285 475.438 li
227.285 475.258 li
227.345 475.258 li
227.345 474.958 li
227.405 474.958 li
227.405 474.598 li
227.465 474.598 li
227.465 474.418 li
227.525 474.418 li
227.525 474.058 li
227.585 474.058 li
227.585 473.698 li
227.645 473.698 li
227.645 473.518 li
227.705 473.518 li
227.705 473.218 li
227.765 473.218 li
227.765 472.858 li
227.825 472.858 li
227.825 472.678 li
227.885 472.678 li
227.885 472.318 li
227.945 472.318 li
227.945 471.958 li
228.005 471.958 li
228.005 471.778 li
228.065 471.778 li
228.065 471.418 li
228.125 471.418 li
228.125 470.998 li
228.185 470.998 li
228.185 470.818 li
228.245 470.818 li
228.245 470.458 li
228.305 470.458 li
228.305 470.098 li
228.365 470.098 li
228.365 469.678 li
228.425 469.678 li
228.425 469.498 li
228.485 469.498 li
228.485 469.138 li
228.545 469.138 li
228.545 468.778 li
228.605 468.778 li
228.605 468.598 li
228.665 468.598 li
228.665 468.238 li
228.725 468.238 li
228.725 467.818 li
228.785 467.818 li
228.785 467.638 li
228.845 467.638 li
228.845 467.278 li
228.905 467.278 li
228.905 466.918 li
228.965 466.918 li
228.965 466.678 li
229.025 466.678 li
229.025 466.318 li
229.085 466.318 li
229.085 465.958 li
229.145 465.958 li
229.145 465.778 li
229.205 465.778 li
229.205 465.358 li
229.265 465.358 li
229.265 464.938 li
229.325 464.938 li
229.325 464.758 li
229.385 464.758 li
229.385 464.398 li
229.445 464.398 li
229.445 464.038 li
229.505 464.038 li
229.505 463.798 li
229.565 463.798 li
229.565 463.438 li
229.625 463.438 li
229.625 463.078 li
229.685 463.078 li
229.685 462.838 li
229.745 462.838 li
229.745 462.418 li
229.805 462.418 li
229.805 462.058 li
229.865 462.058 li
229.865 461.878 li
229.925 461.878 li
229.925 461.458 li
229.985 461.458 li
229.985 461.098 li
230.045 461.098 li
230.045 460.918 li
230.105 460.918 li
230.105 460.738 li
227.885 460.738 li
227.465 460.678 li
227.405 460.678 li
227.285 460.558 li
227.225 460.378 li
227.285 460.318 li
227.285 460.078 li
227.345 460.078 li
227.345 459.958 li
227.405 459.958 li
227.525 459.838 li
227.705 459.838 li
230.285 459.778 li
230.345 459.778 li
230.345 459.358 li
230.405 459.358 li
230.405 459.118 li
230.465 459.118 li
230.465 458.758 li
230.525 458.758 li
230.525 458.338 li
230.585 458.338 li
230.585 458.158 li
230.645 458.158 li
230.645 457.798 li
230.705 457.798 li
230.705 457.378 li
230.765 457.378 li
230.765 457.198 li
230.825 457.198 li
230.825 456.838 li
230.885 456.838 li
230.885 456.478 li
230.945 456.478 li
230.945 456.358 li
231.005 456.358 li
231.005 455.998 li
231.065 455.998 li
231.065 455.698 li
231.125 455.698 li
231.125 455.518 li
231.185 455.518 li
231.185 455.278 li
231.245 455.278 li
231.245 454.978 li
231.305 454.978 li
231.305 454.918 li
231.365 454.918 li
231.365 454.618 li
231.425 454.618 li
231.425 454.438 li
231.485 454.438 li
231.485 454.318 li
231.545 454.318 li
231.545 454.138 li
231.605 454.138 li
231.605 453.958 li
231.665 453.958 li
231.665 453.898 li
231.725 453.898 li
231.725 453.718 li
231.785 453.718 li
231.785 453.538 li
231.845 453.538 li
231.845 453.478 li
231.905 453.478 li
231.905 453.298 li
231.965 453.298 li
231.965 453.238 li
232.025 453.238 li
232.085 453.178 li
232.085 453.058 li
232.145 453.058 li
232.145 452.938 li
232.205 452.938 li
232.265 452.878 li
232.265 452.818 li
232.385 452.698 li
232.385 452.638 li
232.445 452.638 li
232.505 452.578 li
232.505 452.518 li
232.985 452.038 li
233.105 451.978 li
233.285 451.798 li
233.345 451.798 li
233.405 451.738 li
233.465 451.678 li
233.585 451.618 li
233.645 451.618 li
234.245 451.318 li
234.545 451.258 li
234.665 451.198 li
234.845 451.138 li
235.805 451.138 li
236.345 451.258 li
236.465 451.318 li
236.525 451.318 li
236.705 451.438 li
236.945 451.498 li
237.005 451.558 li
237.365 451.798 li
237.425 451.858 li
237.485 451.978 li
237.545 452.038 li
237.795 452.223 237.783 452.448 237.905 452.698 cv
237.965 452.878 li
237.965 453.658 li
237.905 453.658 li
237.905 453.778 li
237.845 453.778 li
237.845 453.958 li
237.785 453.958 li
237.785 454.078 li
237.725 454.138 li
237.665 454.138 li
237.665 454.258 li
237.305 454.618 li
237.245 454.618 li
237.185 454.678 li
237.185 454.738 li
236.945 454.798 li
236.705 454.918 li
236.105 454.918 li
235.865 454.798 li
235.805 454.738 li
235.685 454.678 li
235.505 454.498 li
235.385 454.258 li
235.385 454.138 li
235.325 453.898 li
235.385 453.838 li
235.385 453.418 li
235.445 453.418 li
235.445 453.238 li
235.505 453.238 li
235.505 453.178 li
235.565 453.178 li
235.565 453.058 li
235.625 453.058 li
235.625 452.998 li
235.985 452.698 li
236.105 452.578 li
236.285 452.518 li
236.405 452.458 li
236.465 452.398 li
236.645 452.398 li
236.825 452.338 li
236.945 452.338 li
236.885 452.218 li
236.825 452.218 li
236.765 452.158 li
236.705 452.158 li
236.585 452.038 li
236.465 452.038 li
236.285 451.918 li
236.105 451.858 li
235.985 451.858 li
235.865 451.798 li
235.625 451.798 li
235.025 451.738 li
235.025 451.798 li
234.785 451.858 li
234.485 451.978 li
234.485 452.038 li
234.365 452.038 li
234.305 452.158 li
234.185 452.218 li
234.185 452.278 li
234.005 452.458 li
233.945 452.458 li
233.945 452.578 li
233.885 452.578 li
233.885 452.638 li
233.825 452.638 li
233.825 452.758 li
233.765 452.758 li
233.765 452.938 li
233.705 452.938 li
233.705 452.998 li
233.645 452.998 li
233.645 453.238 li
233.585 453.238 li
233.585 453.538 li
233.525 453.538 li
233.525 453.658 li
233.465 453.658 li
233.465 454.018 li
233.405 454.018 li
233.405 454.318 li
233.345 454.318 li
233.345 454.498 li
233.285 454.498 li
233.285 454.798 li
233.225 454.798 li
233.225 455.158 li
233.165 455.158 li
233.165 455.338 li
233.105 455.338 li
233.105 455.698 li
233.045 455.698 li
233.045 456.058 li
232.985 456.058 li
232.985 456.238 li
232.925 456.238 li
232.925 456.598 li
232.865 456.598 li
232.865 457.018 li
232.805 457.018 li
232.805 457.378 li
232.745 457.378 li
232.745 457.618 li
232.685 457.618 li
232.685 457.978 li
232.625 457.978 li
232.625 458.398 li
232.565 458.398 li
232.565 458.578 li
232.505 458.578 li
232.505 458.938 li
232.445 458.938 li
232.445 459.358 li
232.385 459.358 li
232.385 459.598 li
232.325 459.598 li
232.325 459.778 li
235.445 459.838 li
235.625 459.898 li
235.625 459.958 li
235.685 460.378 li
235.625 460.378 li
235.625 460.558 li
235.565 460.618 li
235.445 460.678 li
235.325 460.678 li
234.785 460.738 li
232.085 460.738 li
232.085 461.098 li
232.025 461.098 li
232.025 461.338 li
231.965 461.338 li
231.965 461.698 li
231.905 461.698 li
231.905 462.118 li
231.845 462.118 li
231.845 462.358 li
231.785 462.358 li
231.785 462.718 li
231.725 462.718 li
231.725 463.078 li
231.665 463.078 li
231.665 463.318 li
231.605 463.318 li
231.605 463.678 li
231.545 463.678 li
231.545 464.038 li
231.485 464.038 li
231.485 464.218 li
231.425 464.218 li
231.425 464.638 li
231.365 464.638 li
231.365 465.058 li
231.305 465.058 li
231.305 465.238 li
231.245 465.238 li
231.245 465.598 li
231.185 465.598 li
231.185 465.958 li
231.125 465.958 li
231.125 466.198 li
231.065 466.198 li
231.065 466.558 li
231.005 466.558 li
231.005 466.918 li
230.945 466.918 li
230.945 467.098 li
230.885 467.098 li
230.885 467.458 li
230.825 467.458 li
230.825 467.878 li
230.765 467.878 li
230.765 468.058 li
230.705 468.058 li
230.705 468.418 li
230.645 468.418 li
230.645 468.778 li
230.585 468.778 li
230.585 468.958 li
230.525 468.958 li
230.525 469.318 li
230.465 469.318 li
230.465 469.738 li
230.405 469.738 li
230.405 469.918 li
230.345 469.918 li
230.345 470.278 li
230.285 470.278 li
230.285 470.638 li
230.225 470.638 li
230.225 470.818 li
230.165 470.818 li
230.165 471.178 li
230.105 471.178 li
230.105 471.538 li
230.045 471.538 li
230.045 471.718 li
229.985 471.718 li
229.985 472.018 li
229.925 472.018 li
229.925 472.378 li
229.865 472.378 li
229.865 472.558 li
229.805 472.558 li
229.805 472.858 li
229.745 472.858 li
229.745 473.218 li
229.685 473.218 li
229.685 473.338 li
229.625 473.338 li
229.625 473.638 li
229.565 473.638 li
229.565 473.878 li
229.505 473.878 li
229.505 473.998 li
229.445 473.998 li
229.445 474.298 li
229.385 474.298 li
229.385 474.478 li
229.325 474.478 li
229.325 474.658 li
229.265 474.658 li
229.265 474.838 li
229.205 474.838 li
229.205 475.078 li
229.145 475.078 li
229.145 475.138 li
229.085 475.138 li
229.085 475.378 li
229.025 475.378 li
229.025 475.618 li
228.965 475.618 li
228.965 475.678 li
228.905 475.678 li
228.905 475.858 li
228.845 475.858 li
228.845 476.038 li
228.785 476.038 li
228.785 476.098 li
228.725 476.098 li
228.725 476.278 li
228.665 476.278 li
228.665 476.458 li
228.605 476.458 li
228.605 476.518 li
228.545 476.518 li
228.545 476.698 li
228.485 476.698 li
228.485 476.878 li
228.425 476.878 li
228.425 476.938 li
228.365 476.938 li
228.365 477.118 li
228.305 477.118 li
228.305 477.238 li
228.245 477.238 li
228.245 477.358 li
228.185 477.358 li
228.185 477.418 li
228.125 477.418 li
228.125 477.598 li
228.065 477.598 li
228.065 477.658 li
228.005 477.658 li
228.005 477.778 li
227.945 477.778 li
227.945 477.838 li
227.885 477.838 li
227.885 477.958 li
227.825 477.958 li
227.825 478.018 li
227.765 478.078 li
227.765 478.138 li
227.705 478.198 li
227.645 478.198 li
227.645 478.318 li
227.585 478.318 li
227.585 478.378 li
227.525 478.498 li
227.465 478.498 li
227.465 478.558 li
227.225 478.738 li
227.225 478.858 li
226.925 479.098 li
226.865 479.158 li
226.685 479.278 li
226.505 479.458 li
226.385 479.518 li
226.325 479.578 li
226.145 479.638 li
226.025 479.758 li
225.485 479.938 li
225.245 479.938 li
ef
238.025 478.198 mo
238.025 477.658 li
239.645 477.658 li
239.885 477.598 li
240.065 477.598 li
240.425 477.418 li
240.545 477.298 li
240.545 477.178 li
240.605 477.178 li
240.605 477.118 li
240.665 477.118 li
240.605 464.878 li
240.605 464.938 li
240.245 465.118 li
240.125 465.118 li
240.005 465.238 li
239.825 465.238 li
239.765 465.298 li
239.585 465.298 li
239.345 465.418 li
239.225 465.418 li
239.045 465.478 li
238.745 465.478 li
238.565 465.538 li
237.905 465.538 li
237.905 464.998 li
237.965 464.998 li
238.145 464.938 li
238.685 464.938 li
238.925 464.878 li
239.165 464.878 li
239.525 464.758 li
239.645 464.758 li
239.765 464.698 li
240.005 464.638 li
240.065 464.578 li
240.185 464.578 li
240.425 464.458 li
240.485 464.398 li
240.545 464.398 li
240.665 464.338 li
240.725 464.278 li
240.845 464.218 li
241.085 463.978 li
241.205 463.978 li
241.565 463.618 li
241.805 463.558 li
241.805 463.618 li
241.865 463.678 li
241.925 476.638 li
241.925 477.118 li
241.985 477.238 li
241.985 477.298 li
242.165 477.478 li
242.225 477.478 li
242.465 477.598 li
242.645 477.598 li
242.885 477.658 li
244.505 477.658 li
244.505 478.198 li
ef
224.405 479.938 mo
224.285 479.938 li
223.925 479.818 li
223.865 479.818 li
223.745 479.758 li
223.565 479.698 li
223.505 479.638 li
223.445 479.638 li
223.205 479.518 li
223.205 479.458 li
223.145 479.458 li
223.025 479.398 li
222.965 479.338 li
222.665 479.038 li
222.665 478.978 li
222.485 478.798 li
222.425 478.678 li
222.425 478.558 li
222.365 478.498 li
222.305 478.378 li
222.305 478.138 li
222.245 477.898 li
222.305 477.838 li
222.305 477.418 li
222.365 477.418 li
222.365 477.298 li
222.425 477.298 li
222.425 477.058 li
222.485 477.058 li
222.485 476.938 li
222.545 476.938 li
222.545 476.878 li
222.605 476.878 li
222.605 476.758 li
222.665 476.758 li
222.905 476.518 li
222.965 476.518 li
223.025 476.398 li
223.325 476.278 li
223.445 476.218 li
223.565 476.218 li
224.105 476.158 li
224.105 476.218 li
224.285 476.218 li
224.345 476.278 li
224.525 476.398 li
224.645 476.398 li
224.645 476.518 li
225.01 476.843 224.841 476.835 224.885 477.418 cv
224.885 477.598 li
224.825 477.598 li
224.825 477.778 li
224.765 477.778 li
224.765 477.838 li
224.705 477.838 li
224.705 477.958 li
224.645 477.958 li
224.645 478.018 li
224.585 478.138 li
224.525 478.138 li
224.525 478.198 li
224.465 478.258 li
224.405 478.318 li
224.285 478.438 li
224.165 478.498 li
224.105 478.498 li
223.745 478.678 li
223.625 478.678 li
223.325 478.738 li
223.385 478.738 li
223.505 478.918 li
223.565 478.918 li
223.625 478.978 li
223.745 479.038 li
223.805 479.098 li
223.925 479.098 li
224.045 479.218 li
224.165 479.218 li
224.285 479.278 li
225.365 479.278 li
225.425 479.218 li
225.665 479.098 li
225.725 479.098 li
226.145 478.678 li
226.145 478.618 li
226.265 478.558 li
226.265 478.498 li
226.325 478.438 li
226.325 478.318 li
226.385 478.318 li
226.385 478.198 li
226.445 478.198 li
226.445 478.138 li
226.505 478.138 li
226.505 477.958 li
226.565 477.958 li
226.565 477.838 li
226.625 477.838 li
226.625 477.658 li
226.685 477.658 li
226.685 477.478 li
226.745 477.478 li
226.745 477.358 li
226.805 477.358 li
226.805 477.178 li
226.865 477.178 li
226.865 476.938 li
226.925 476.938 li
226.925 476.758 li
226.985 476.758 li
226.985 476.518 li
227.045 476.518 li
227.045 476.278 li
227.105 476.278 li
227.105 476.098 li
227.165 476.098 li
227.165 475.798 li
227.225 475.798 li
227.225 475.438 li
227.285 475.438 li
227.285 475.258 li
227.345 475.258 li
227.345 474.958 li
227.405 474.958 li
227.405 474.598 li
227.465 474.598 li
227.465 474.418 li
227.525 474.418 li
227.525 474.058 li
227.585 474.058 li
227.585 473.698 li
227.645 473.698 li
227.645 473.518 li
227.705 473.518 li
227.705 473.218 li
227.765 473.218 li
227.765 472.858 li
227.825 472.858 li
227.825 472.678 li
227.885 472.678 li
227.885 472.318 li
227.945 472.318 li
227.945 471.958 li
228.005 471.958 li
228.005 471.778 li
228.065 471.778 li
228.065 471.418 li
228.125 471.418 li
228.125 470.998 li
228.185 470.998 li
228.185 470.818 li
228.245 470.818 li
228.245 470.458 li
228.305 470.458 li
228.305 470.098 li
228.365 470.098 li
228.365 469.678 li
228.425 469.678 li
228.425 469.498 li
228.485 469.498 li
228.485 469.138 li
228.545 469.138 li
228.545 468.778 li
228.605 468.778 li
228.605 468.598 li
228.665 468.598 li
228.665 468.238 li
228.725 468.238 li
228.725 467.818 li
228.785 467.818 li
228.785 467.638 li
228.845 467.638 li
228.845 467.278 li
228.905 467.278 li
228.905 466.918 li
228.965 466.918 li
228.965 466.678 li
229.025 466.678 li
229.025 466.318 li
229.085 466.318 li
229.085 465.958 li
229.145 465.958 li
229.145 465.778 li
229.205 465.778 li
229.205 465.358 li
229.265 465.358 li
229.265 464.938 li
229.325 464.938 li
229.325 464.758 li
229.385 464.758 li
229.385 464.398 li
229.445 464.398 li
229.445 464.038 li
229.505 464.038 li
229.505 463.798 li
229.565 463.798 li
229.565 463.438 li
229.625 463.438 li
229.625 463.078 li
229.685 463.078 li
229.685 462.838 li
229.745 462.838 li
229.745 462.418 li
229.805 462.418 li
229.805 462.058 li
229.865 462.058 li
229.865 461.878 li
229.925 461.878 li
229.925 461.458 li
229.985 461.458 li
229.985 461.098 li
230.045 461.098 li
230.045 460.918 li
230.105 460.918 li
230.105 460.738 li
227.885 460.738 li
227.465 460.678 li
227.405 460.678 li
227.285 460.558 li
227.225 460.378 li
227.285 460.318 li
227.285 460.078 li
227.345 460.078 li
227.345 459.958 li
227.405 459.958 li
227.525 459.838 li
227.705 459.838 li
230.285 459.778 li
230.345 459.778 li
230.345 459.358 li
230.405 459.358 li
230.405 459.118 li
230.465 459.118 li
230.465 458.758 li
230.525 458.758 li
230.525 458.338 li
230.585 458.338 li
230.585 458.158 li
230.645 458.158 li
230.645 457.798 li
230.705 457.798 li
230.705 457.378 li
230.765 457.378 li
230.765 457.198 li
230.825 457.198 li
230.825 456.838 li
230.885 456.838 li
230.885 456.478 li
230.945 456.478 li
230.945 456.358 li
231.005 456.358 li
231.005 455.998 li
231.065 455.998 li
231.065 455.698 li
231.125 455.698 li
231.125 455.518 li
231.185 455.518 li
231.185 455.278 li
231.245 455.278 li
231.245 454.978 li
231.305 454.978 li
231.305 454.918 li
231.365 454.918 li
231.365 454.618 li
231.425 454.618 li
231.425 454.438 li
231.485 454.438 li
231.485 454.318 li
231.545 454.318 li
231.545 454.138 li
231.605 454.138 li
231.605 453.958 li
231.665 453.958 li
231.665 453.898 li
231.725 453.898 li
231.725 453.718 li
231.785 453.718 li
231.785 453.538 li
231.845 453.538 li
231.845 453.478 li
231.905 453.478 li
231.905 453.298 li
231.965 453.298 li
231.965 453.238 li
232.025 453.238 li
232.085 453.178 li
232.085 453.058 li
232.145 453.058 li
232.145 452.938 li
232.205 452.938 li
232.265 452.878 li
232.265 452.818 li
232.385 452.698 li
232.385 452.638 li
232.445 452.638 li
232.505 452.578 li
232.505 452.518 li
232.985 452.038 li
233.105 451.978 li
233.285 451.798 li
233.345 451.798 li
233.405 451.738 li
233.465 451.678 li
233.585 451.618 li
233.645 451.618 li
234.245 451.318 li
234.545 451.258 li
234.665 451.198 li
234.845 451.138 li
235.805 451.138 li
236.345 451.258 li
236.465 451.318 li
236.525 451.318 li
236.705 451.438 li
236.945 451.498 li
237.005 451.558 li
237.365 451.798 li
237.425 451.858 li
237.485 451.978 li
237.545 452.038 li
237.795 452.223 237.783 452.448 237.905 452.698 cv
237.965 452.878 li
237.965 453.658 li
237.905 453.658 li
237.905 453.778 li
237.845 453.778 li
237.845 453.958 li
237.785 453.958 li
237.785 454.078 li
237.725 454.138 li
237.665 454.138 li
237.665 454.258 li
237.305 454.618 li
237.245 454.618 li
237.185 454.678 li
237.185 454.738 li
236.945 454.798 li
236.705 454.918 li
236.105 454.918 li
235.865 454.798 li
235.805 454.738 li
235.685 454.678 li
235.505 454.498 li
235.385 454.258 li
235.385 454.138 li
235.325 453.898 li
235.385 453.838 li
235.385 453.418 li
235.445 453.418 li
235.445 453.238 li
235.505 453.238 li
235.505 453.178 li
235.565 453.178 li
235.565 453.058 li
235.625 453.058 li
235.625 452.998 li
235.985 452.698 li
236.105 452.578 li
236.285 452.518 li
236.405 452.458 li
236.465 452.398 li
236.645 452.398 li
236.825 452.338 li
236.945 452.338 li
236.885 452.218 li
236.825 452.218 li
236.765 452.158 li
236.705 452.158 li
236.585 452.038 li
236.465 452.038 li
236.285 451.918 li
236.105 451.858 li
235.985 451.858 li
235.865 451.798 li
235.625 451.798 li
235.025 451.738 li
235.025 451.798 li
234.785 451.858 li
234.485 451.978 li
234.485 452.038 li
234.365 452.038 li
234.305 452.158 li
234.185 452.218 li
234.185 452.278 li
234.005 452.458 li
233.945 452.458 li
233.945 452.578 li
233.885 452.578 li
233.885 452.638 li
233.825 452.638 li
233.825 452.758 li
233.765 452.758 li
233.765 452.938 li
233.705 452.938 li
233.705 452.998 li
233.645 452.998 li
233.645 453.238 li
233.585 453.238 li
233.585 453.538 li
233.525 453.538 li
233.525 453.658 li
233.465 453.658 li
233.465 454.018 li
233.405 454.018 li
233.405 454.318 li
233.345 454.318 li
233.345 454.498 li
233.285 454.498 li
233.285 454.798 li
233.225 454.798 li
233.225 455.158 li
233.165 455.158 li
233.165 455.338 li
233.105 455.338 li
233.105 455.698 li
233.045 455.698 li
233.045 456.058 li
232.985 456.058 li
232.985 456.238 li
232.925 456.238 li
232.925 456.598 li
232.865 456.598 li
232.865 457.018 li
232.805 457.018 li
232.805 457.378 li
232.745 457.378 li
232.745 457.618 li
232.685 457.618 li
232.685 457.978 li
232.625 457.978 li
232.625 458.398 li
232.565 458.398 li
232.565 458.578 li
232.505 458.578 li
232.505 458.938 li
232.445 458.938 li
232.445 459.358 li
232.385 459.358 li
232.385 459.598 li
232.325 459.598 li
232.325 459.778 li
235.445 459.838 li
235.625 459.898 li
235.625 459.958 li
235.685 460.378 li
235.625 460.378 li
235.625 460.558 li
235.565 460.618 li
235.445 460.678 li
235.325 460.678 li
234.785 460.738 li
232.085 460.738 li
232.085 461.098 li
232.025 461.098 li
232.025 461.338 li
231.965 461.338 li
231.965 461.698 li
231.905 461.698 li
231.905 462.118 li
231.845 462.118 li
231.845 462.358 li
231.785 462.358 li
231.785 462.718 li
231.725 462.718 li
231.725 463.078 li
231.665 463.078 li
231.665 463.318 li
231.605 463.318 li
231.605 463.678 li
231.545 463.678 li
231.545 464.038 li
231.485 464.038 li
231.485 464.218 li
231.425 464.218 li
231.425 464.638 li
231.365 464.638 li
231.365 465.058 li
231.305 465.058 li
231.305 465.238 li
231.245 465.238 li
231.245 465.598 li
231.185 465.598 li
231.185 465.958 li
231.125 465.958 li
231.125 466.198 li
231.065 466.198 li
231.065 466.558 li
231.005 466.558 li
231.005 466.918 li
230.945 466.918 li
230.945 467.098 li
230.885 467.098 li
230.885 467.458 li
230.825 467.458 li
230.825 467.878 li
230.765 467.878 li
230.765 468.058 li
230.705 468.058 li
230.705 468.418 li
230.645 468.418 li
230.645 468.778 li
230.585 468.778 li
230.585 468.958 li
230.525 468.958 li
230.525 469.318 li
230.465 469.318 li
230.465 469.738 li
230.405 469.738 li
230.405 469.918 li
230.345 469.918 li
230.345 470.278 li
230.285 470.278 li
230.285 470.638 li
230.225 470.638 li
230.225 470.818 li
230.165 470.818 li
230.165 471.178 li
230.105 471.178 li
230.105 471.538 li
230.045 471.538 li
230.045 471.718 li
229.985 471.718 li
229.985 472.018 li
229.925 472.018 li
229.925 472.378 li
229.865 472.378 li
229.865 472.558 li
229.805 472.558 li
229.805 472.858 li
229.745 472.858 li
229.745 473.218 li
229.685 473.218 li
229.685 473.338 li
229.625 473.338 li
229.625 473.638 li
229.565 473.638 li
229.565 473.878 li
229.505 473.878 li
229.505 473.998 li
229.445 473.998 li
229.445 474.298 li
229.385 474.298 li
229.385 474.478 li
229.325 474.478 li
229.325 474.658 li
229.265 474.658 li
229.265 474.838 li
229.205 474.838 li
229.205 475.078 li
229.145 475.078 li
229.145 475.138 li
229.085 475.138 li
229.085 475.378 li
229.025 475.378 li
229.025 475.618 li
228.965 475.618 li
228.965 475.678 li
228.905 475.678 li
228.905 475.858 li
228.845 475.858 li
228.845 476.038 li
228.785 476.038 li
228.785 476.098 li
228.725 476.098 li
228.725 476.278 li
228.665 476.278 li
228.665 476.458 li
228.605 476.458 li
228.605 476.518 li
228.545 476.518 li
228.545 476.698 li
228.485 476.698 li
228.485 476.878 li
228.425 476.878 li
228.425 476.938 li
228.365 476.938 li
228.365 477.118 li
228.305 477.118 li
228.305 477.238 li
228.245 477.238 li
228.245 477.358 li
228.185 477.358 li
228.185 477.418 li
228.125 477.418 li
228.125 477.598 li
228.065 477.598 li
228.065 477.658 li
228.005 477.658 li
228.005 477.778 li
227.945 477.778 li
227.945 477.838 li
227.885 477.838 li
227.885 477.958 li
227.825 477.958 li
227.825 478.018 li
227.765 478.078 li
227.765 478.138 li
227.705 478.198 li
227.645 478.198 li
227.645 478.318 li
227.585 478.318 li
227.585 478.378 li
227.525 478.498 li
227.465 478.498 li
227.465 478.558 li
227.225 478.738 li
227.225 478.858 li
226.925 479.098 li
226.865 479.158 li
226.685 479.278 li
226.505 479.458 li
226.385 479.518 li
226.325 479.578 li
226.145 479.638 li
226.025 479.758 li
225.485 479.938 li
225.245 479.938 li
ef
238.025 478.198 mo
238.025 477.658 li
239.645 477.658 li
239.885 477.598 li
240.065 477.598 li
240.425 477.418 li
240.545 477.298 li
240.545 477.178 li
240.605 477.178 li
240.605 477.118 li
240.665 477.118 li
240.605 464.878 li
240.605 464.938 li
240.245 465.118 li
240.125 465.118 li
240.005 465.238 li
239.825 465.238 li
239.765 465.298 li
239.585 465.298 li
239.345 465.418 li
239.225 465.418 li
239.045 465.478 li
238.745 465.478 li
238.565 465.538 li
237.905 465.538 li
237.905 464.998 li
237.965 464.998 li
238.145 464.938 li
238.685 464.938 li
238.925 464.878 li
239.165 464.878 li
239.525 464.758 li
239.645 464.758 li
239.765 464.698 li
240.005 464.638 li
240.065 464.578 li
240.185 464.578 li
240.425 464.458 li
240.485 464.398 li
240.545 464.398 li
240.665 464.338 li
240.725 464.278 li
240.845 464.218 li
241.085 463.978 li
241.205 463.978 li
241.565 463.618 li
241.805 463.558 li
241.805 463.618 li
241.865 463.678 li
241.925 476.638 li
241.925 477.118 li
241.985 477.238 li
241.985 477.298 li
242.165 477.478 li
242.225 477.478 li
242.465 477.598 li
242.645 477.598 li
242.885 477.658 li
244.505 477.658 li
244.505 478.198 li
ef
294.425 479.578 mo
294.305 479.518 li
294.125 479.518 li
293.945 479.458 li
293.885 479.398 li
293.765 479.398 li
293.585 479.338 li
293.465 479.218 li
293.225 479.158 li
293.225 479.098 li
293.165 479.038 li
293.045 478.978 li
292.985 478.978 li
292.685 478.678 li
292.685 478.618 li
292.625 478.498 li
292.565 478.438 li
292.505 478.438 li
292.445 478.258 li
292.445 478.138 li
292.385 478.078 li
292.325 477.958 li
292.325 477.778 li
292.265 477.538 li
292.325 477.478 li
292.325 476.998 li
292.385 476.998 li
292.385 476.878 li
292.445 476.878 li
292.445 476.698 li
292.505 476.698 li
292.505 476.578 li
292.565 476.578 li
292.565 476.518 li
292.625 476.518 li
292.625 476.398 li
292.685 476.398 li
293.045 476.038 li
293.345 475.918 li
293.585 475.798 li
294.125 475.798 li
294.305 475.858 li
294.365 475.918 li
294.605 475.978 li
294.605 476.038 li
294.665 476.038 li
294.665 476.098 li
294.785 476.158 li
294.785 476.278 li
294.845 476.278 li
294.905 476.518 li
294.965 477.058 li
294.905 477.058 li
294.905 477.178 li
294.845 477.178 li
294.845 477.358 li
294.785 477.358 li
294.785 477.538 li
294.725 477.598 li
294.665 477.598 li
294.665 477.658 li
294.605 477.718 li
294.605 477.778 li
294.485 477.898 li
294.425 477.898 li
294.305 478.078 li
294.245 478.078 li
293.885 478.258 li
293.765 478.258 li
293.645 478.318 li
293.345 478.318 li
293.645 478.618 li
293.765 478.678 li
293.825 478.678 li
294.065 478.798 li
294.245 478.858 li
294.305 478.858 li
294.485 478.918 li
295.205 478.918 li
295.385 478.858 li
295.505 478.858 li
295.685 478.738 li
295.745 478.678 li
295.805 478.678 li
296.165 478.318 li
296.165 478.258 li
296.225 478.258 li
296.285 478.138 li
296.285 478.078 li
296.345 478.078 li
296.345 477.958 li
296.405 477.958 li
296.405 477.838 li
296.465 477.838 li
296.465 477.718 li
296.525 477.718 li
296.525 477.598 li
296.585 477.598 li
296.585 477.478 li
296.645 477.478 li
296.645 477.298 li
296.705 477.298 li
296.705 477.178 li
296.765 477.178 li
296.765 476.998 li
296.825 476.998 li
296.825 476.818 li
296.885 476.818 li
296.885 476.698 li
296.945 476.698 li
296.945 476.398 li
297.005 476.398 li
297.005 476.158 li
297.065 476.158 li
297.065 475.978 li
297.125 475.978 li
297.125 475.738 li
297.185 475.738 li
297.185 475.378 li
297.245 475.378 li
297.245 475.258 li
297.305 475.258 li
297.305 474.898 li
297.365 474.898 li
297.365 474.598 li
297.425 474.598 li
297.425 474.418 li
297.485 474.418 li
297.485 474.058 li
297.545 474.058 li
297.545 473.698 li
297.605 473.698 li
297.605 473.518 li
297.665 473.518 li
297.665 473.158 li
297.725 473.158 li
297.725 472.798 li
297.785 472.798 li
297.785 472.618 li
297.845 472.618 li
297.845 472.258 li
297.905 472.258 li
297.905 471.898 li
297.965 471.898 li
297.965 471.718 li
298.025 471.718 li
298.025 471.358 li
298.085 471.358 li
298.085 470.998 li
298.145 470.998 li
298.145 470.818 li
298.205 470.818 li
298.205 470.458 li
298.265 470.458 li
298.265 470.098 li
298.325 470.098 li
298.325 469.918 li
298.385 469.918 li
298.385 469.558 li
298.445 469.558 li
298.445 469.138 li
298.505 469.138 li
298.505 468.958 li
298.565 468.958 li
298.565 468.598 li
298.625 468.598 li
298.625 468.238 li
298.685 468.238 li
298.685 468.058 li
298.745 468.058 li
298.745 467.638 li
298.805 467.638 li
298.805 467.278 li
298.865 467.278 li
298.865 467.098 li
298.925 467.098 li
298.925 466.678 li
298.985 466.678 li
298.985 466.318 li
299.045 466.318 li
299.045 465.958 li
299.105 465.958 li
299.105 465.718 li
299.165 465.718 li
299.165 465.358 li
299.225 465.358 li
299.225 464.998 li
299.285 464.998 li
299.285 464.818 li
299.345 464.818 li
299.345 464.398 li
299.405 464.398 li
299.405 463.978 li
299.465 463.978 li
299.465 463.798 li
299.525 463.798 li
299.525 463.438 li
299.585 463.438 li
299.585 463.078 li
299.645 463.078 li
299.645 462.838 li
299.705 462.838 li
299.705 462.478 li
299.765 462.478 li
299.765 462.058 li
299.825 462.058 li
299.825 461.878 li
299.885 461.878 li
299.885 461.458 li
299.945 461.458 li
299.945 461.098 li
300.005 461.098 li
300.005 460.918 li
300.065 460.918 li
300.065 460.498 li
300.125 460.498 li
300.125 460.318 li
297.485 460.318 li
297.305 460.138 li
297.305 459.718 li
297.365 459.718 li
297.365 459.538 li
297.485 459.538 li
297.545 459.478 li
297.725 459.418 li
300.305 459.418 li
300.365 459.358 li
300.365 459.178 li
300.425 459.178 li
300.425 458.758 li
300.485 458.758 li
300.485 458.338 li
300.545 458.338 li
300.545 458.158 li
300.605 458.158 li
300.605 457.738 li
300.665 457.738 li
300.665 457.378 li
300.725 457.378 li
300.725 457.198 li
300.785 457.198 li
300.785 456.838 li
300.845 456.838 li
300.845 456.478 li
300.905 456.478 li
300.905 456.298 li
300.965 456.298 li
300.965 455.938 li
301.025 455.938 li
301.025 455.638 li
301.085 455.638 li
301.085 455.458 li
301.145 455.458 li
301.145 455.158 li
301.205 455.158 li
301.205 454.918 li
301.265 454.918 li
301.265 454.738 li
301.325 454.738 li
301.325 454.498 li
301.385 454.498 li
301.385 454.258 li
301.445 454.258 li
301.445 454.138 li
301.505 454.138 li
301.505 453.958 li
301.565 453.958 li
301.565 453.778 li
301.625 453.778 li
301.625 453.658 li
301.685 453.658 li
301.685 453.538 li
301.745 453.538 li
301.745 453.358 li
301.805 453.358 li
301.805 453.238 li
301.865 453.238 li
301.865 453.118 li
301.925 453.118 li
301.925 452.938 li
301.985 452.938 li
302.045 452.878 li
302.045 452.818 li
302.105 452.818 li
302.105 452.638 li
302.225 452.638 li
302.225 452.518 li
302.285 452.518 li
302.285 452.458 li
302.405 452.338 li
302.405 452.278 li
302.465 452.278 li
302.525 452.158 li
302.525 452.098 li
302.585 452.098 li
302.808 451.832 303.055 451.635 303.305 451.438 cv
303.365 451.438 li
303.365 451.378 li
303.485 451.378 li
303.485 451.318 li
303.665 451.258 li
303.665 451.198 li
304.025 451.018 li
304.145 451.018 li
304.265 450.898 li
304.565 450.838 li
304.685 450.838 li
304.925 450.778 li
305.825 450.718 li
305.825 450.778 li
306.365 450.898 li
306.485 450.898 li
306.545 450.958 li
306.785 451.018 li
306.965 451.138 li
307.025 451.198 li
307.205 451.258 li
307.385 451.438 li
307.445 451.438 li
307.565 451.558 li
307.565 451.618 li
307.685 451.738 li
307.685 451.798 li
307.865 451.978 li
307.865 452.098 li
307.925 452.158 li
307.925 452.278 li
307.985 452.518 li
308.045 453.118 li
307.985 453.118 li
307.985 453.298 li
307.925 453.298 li
307.925 453.538 li
307.865 453.538 li
307.865 453.658 li
307.805 453.658 li
307.805 453.718 li
307.745 453.778 li
307.745 453.838 li
307.685 453.838 li
307.685 453.898 li
307.385 454.198 li
307.325 454.198 li
307.325 454.258 li
306.845 454.498 li
306.065 454.498 li
305.885 454.378 li
305.705 454.318 li
305.525 454.138 li
305.465 453.898 li
305.405 453.778 li
305.345 453.538 li
305.405 453.478 li
305.405 453.178 li
305.465 453.178 li
305.465 452.998 li
305.525 452.998 li
305.525 452.818 li
305.585 452.818 li
305.585 452.698 li
305.645 452.698 li
305.645 452.638 li
305.705 452.638 li
306.005 452.278 li
306.065 452.278 li
306.125 452.218 li
306.305 452.098 li
306.425 452.098 li
306.485 452.038 li
306.665 451.978 li
306.845 451.978 li
306.965 451.918 li
306.845 451.798 li
306.785 451.798 li
306.725 451.738 li
306.665 451.738 li
306.605 451.678 li
306.485 451.618 li
306.125 451.498 li
306.065 451.438 li
305.885 451.438 li
305.705 451.378 li
305.045 451.378 li
304.805 451.438 li
304.565 451.618 li
304.505 451.618 li
304.445 451.678 li
304.325 451.798 li
304.205 451.798 li
304.205 451.918 li
304.025 452.098 li
304.025 452.158 li
303.905 452.158 li
303.905 452.338 li
303.845 452.338 li
303.845 452.458 li
303.785 452.458 li
303.785 452.518 li
303.725 452.518 li
303.725 452.698 li
303.665 452.698 li
303.665 452.998 li
303.605 452.998 li
303.605 453.178 li
303.545 453.178 li
303.545 453.478 li
303.485 453.478 li
303.485 453.778 li
303.425 453.778 li
303.425 453.958 li
303.365 453.958 li
303.365 454.318 li
303.305 454.318 li
303.305 454.618 li
303.245 454.618 li
303.245 454.798 li
303.185 454.798 li
303.185 455.158 li
303.125 455.158 li
303.125 455.518 li
303.065 455.518 li
303.065 455.698 li
303.005 455.698 li
303.005 456.058 li
302.945 456.058 li
302.945 456.478 li
302.885 456.478 li
302.885 456.658 li
302.825 456.658 li
302.825 457.018 li
302.765 457.018 li
302.765 457.378 li
302.705 457.378 li
302.705 457.618 li
302.645 457.618 li
302.645 457.978 li
302.585 457.978 li
302.585 458.398 li
302.525 458.398 li
302.525 458.578 li
302.465 458.578 li
302.465 458.998 li
302.405 458.998 li
302.405 459.358 li
302.345 459.418 li
305.525 459.418 li
305.705 459.598 li
305.705 460.078 li
305.645 460.078 li
305.645 460.138 li
305.585 460.258 li
305.525 460.258 li
305.345 460.318 li
302.105 460.318 li
302.105 460.738 li
302.045 460.738 li
302.045 461.158 li
301.985 461.158 li
301.985 461.338 li
301.925 461.338 li
301.925 461.758 li
301.865 461.758 li
301.865 462.118 li
301.805 462.118 li
301.805 462.298 li
301.745 462.298 li
301.745 462.718 li
301.685 462.718 li
301.685 463.078 li
301.625 463.078 li
301.625 463.258 li
301.565 463.258 li
301.565 463.678 li
301.505 463.678 li
301.505 464.098 li
301.445 464.098 li
301.445 464.278 li
301.385 464.278 li
301.385 464.638 li
301.325 464.638 li
301.325 465.058 li
301.265 465.058 li
301.265 465.238 li
301.205 465.238 li
301.205 465.598 li
301.145 465.598 li
301.145 465.958 li
301.085 465.958 li
301.085 466.138 li
301.025 466.138 li
301.025 466.558 li
300.965 466.558 li
300.965 466.918 li
300.905 466.918 li
300.905 467.098 li
300.845 467.098 li
300.845 467.518 li
300.785 467.518 li
300.785 467.878 li
300.725 467.878 li
300.725 468.058 li
300.665 468.058 li
300.665 468.418 li
300.605 468.418 li
300.605 468.778 li
300.545 468.778 li
300.545 468.958 li
300.485 468.958 li
300.485 469.378 li
300.425 469.378 li
300.425 469.738 li
300.365 469.738 li
300.365 469.918 li
300.305 469.918 li
300.305 470.278 li
300.245 470.278 li
300.245 470.638 li
300.185 470.638 li
300.185 470.818 li
300.125 470.818 li
300.125 471.178 li
300.065 471.178 li
300.065 471.478 li
300.005 471.478 li
300.005 471.658 li
299.945 471.658 li
299.945 472.018 li
299.885 472.018 li
299.885 472.318 li
299.825 472.318 li
299.825 472.498 li
299.765 472.498 li
299.765 472.798 li
299.705 472.798 li
299.705 473.098 li
299.645 473.098 li
299.645 473.218 li
299.585 473.218 li
299.585 473.518 li
299.525 473.518 li
299.525 473.758 li
299.465 473.758 li
299.465 473.878 li
299.405 473.878 li
299.405 474.118 li
299.345 474.118 li
299.345 474.358 li
299.285 474.358 li
299.285 474.478 li
299.225 474.478 li
299.225 474.658 li
299.165 474.658 li
299.165 474.898 li
299.105 474.898 li
299.105 475.018 li
299.045 475.018 li
299.045 475.198 li
298.985 475.198 li
298.985 475.378 li
298.925 475.378 li
298.925 475.558 li
298.865 475.558 li
298.865 475.618 li
298.805 475.618 li
298.805 475.798 li
298.745 475.798 li
298.745 475.978 li
298.685 475.978 li
298.685 476.098 li
298.625 476.098 li
298.625 476.278 li
298.565 476.278 li
298.565 476.398 li
298.505 476.398 li
298.505 476.518 li
298.445 476.518 li
298.445 476.638 li
298.385 476.638 li
298.385 476.818 li
298.265 476.818 li
298.265 476.998 li
298.205 476.998 li
298.205 477.118 li
298.145 477.118 li
298.145 477.178 li
298.085 477.238 li
298.085 477.298 li
298.025 477.298 li
298.025 477.418 li
297.965 477.418 li
297.965 477.478 li
297.905 477.478 li
297.905 477.598 li
297.845 477.598 li
297.845 477.718 li
297.785 477.718 li
297.785 477.778 li
297.725 477.838 li
297.665 477.838 li
297.665 477.958 li
297.605 477.958 li
297.605 478.018 li
297.545 478.078 li
297.485 478.078 li
297.485 478.138 li
297.305 478.378 li
297.245 478.378 li
297.245 478.438 li
296.78 478.96 296.196 479.379 295.505 479.518 cv
295.265 479.578 li
ef
306.905 477.898 mo
306.905 477.358 li
306.965 477.358 li
307.205 477.058 li
307.205 476.998 li
307.445 476.818 li
307.445 476.698 li
307.505 476.698 li
307.685 476.518 li
307.685 476.458 li
307.745 476.458 li
307.925 476.218 li
307.925 476.158 li
307.985 476.158 li
308.225 475.918 li
308.225 475.798 li
308.285 475.798 li
308.465 475.618 li
308.465 475.558 li
308.525 475.558 li
308.961 475.042 309.349 474.634 309.785 474.118 cv
309.785 474.058 li
309.845 474.058 li
310.025 473.878 li
310.025 473.758 li
310.085 473.758 li
310.325 473.518 li
310.325 473.458 li
310.385 473.458 li
310.565 473.218 li
310.565 473.158 li
310.625 473.158 li
310.805 472.978 li
310.805 472.858 li
310.865 472.858 li
311.105 472.678 li
311.105 472.618 li
311.345 472.378 li
311.345 472.318 li
311.585 472.078 li
311.585 472.018 li
311.645 472.018 li
311.825 471.838 li
311.825 471.778 li
311.945 471.658 li
311.945 471.598 li
312.005 471.598 li
312.065 471.478 li
312.065 471.418 li
312.125 471.418 li
312.185 471.358 li
312.185 471.238 li
312.245 471.238 li
312.305 471.178 li
312.305 471.118 li
312.365 471.058 li
312.365 470.998 li
312.425 470.998 li
312.485 470.938 li
312.485 470.878 li
312.545 470.818 li
312.545 470.758 li
312.605 470.758 li
312.605 470.638 li
312.665 470.638 li
312.665 470.518 li
312.725 470.518 li
312.725 470.458 li
312.785 470.458 li
312.785 470.338 li
312.845 470.338 li
312.845 470.278 li
312.905 470.278 li
312.905 470.158 li
312.965 470.158 li
312.965 470.038 li
313.025 470.038 li
313.025 469.918 li
313.085 469.918 li
313.085 469.798 li
313.145 469.798 li
313.145 469.678 li
313.205 469.678 li
313.205 469.558 li
313.265 469.558 li
313.265 469.438 li
313.325 469.438 li
313.325 469.258 li
313.385 469.258 li
313.385 469.078 li
313.445 469.078 li
313.445 468.958 li
313.505 468.958 li
313.505 468.718 li
313.565 468.718 li
313.565 468.478 li
313.625 468.478 li
313.625 468.298 li
313.685 468.298 li
313.685 467.818 li
313.745 467.818 li
313.685 466.858 li
313.685 466.498 li
313.545 465.845 313.47 465.755 313.205 465.238 cv
313.145 465.178 li
313.145 465.118 li
313.025 464.998 li
312.965 464.878 li
312.905 464.818 li
312.665 464.518 li
312.605 464.518 li
312.425 464.338 li
312.245 464.278 li
312.245 464.218 li
312.065 464.158 li
312.065 464.098 li
311.825 463.978 li
311.705 463.978 li
311.585 463.918 li
311.285 463.798 li
310.925 463.798 li
310.145 463.738 li
310.145 463.798 li
309.905 463.798 li
309.845 463.858 li
309.545 463.918 li
309.005 464.158 li
308.945 464.278 li
308.885 464.278 li
308.825 464.338 li
308.765 464.338 li
308.705 464.458 li
308.645 464.458 li
308.525 464.578 li
308.465 464.578 li
308.465 464.638 li
308.225 464.878 li
308.225 464.998 li
308.105 464.998 li
308.105 465.118 li
308.045 465.118 li
308.045 465.238 li
307.985 465.238 li
307.985 465.298 li
307.925 465.298 li
307.925 465.418 li
307.865 465.418 li
307.865 465.598 li
307.805 465.598 li
307.805 465.658 li
307.745 465.658 li
307.745 465.838 li
307.685 465.838 li
307.685 466.078 li
307.625 466.078 li
307.625 466.138 li
307.565 466.138 li
307.565 466.438 li
307.505 466.438 li
307.505 466.498 li
308.105 466.558 li
308.389 466.671 308.62 466.748 308.645 467.098 cv
308.705 467.638 li
308.645 467.638 li
308.645 467.878 li
308.585 467.878 li
308.585 467.938 li
308.405 468.118 li
308.285 468.178 li
308.285 468.238 li
308.225 468.238 li
308.105 468.298 li
307.565 468.298 li
307.385 468.238 li
307.325 468.178 li
307.265 468.118 li
307.025 467.878 li
306.965 467.758 li
306.965 467.578 li
306.905 467.338 li
306.965 467.278 li
306.965 466.558 li
307.025 466.558 li
307.025 466.258 li
307.085 466.258 li
307.085 466.138 li
307.145 466.138 li
307.145 465.898 li
307.205 465.898 li
307.205 465.718 li
307.265 465.718 li
307.265 465.598 li
307.325 465.598 li
307.325 465.478 li
307.385 465.478 li
307.385 465.358 li
307.445 465.358 li
307.445 465.238 li
307.505 465.238 li
307.505 465.118 li
307.565 465.118 li
307.565 465.058 li
307.685 464.998 li
307.685 464.878 li
307.745 464.878 li
307.745 464.818 li
307.865 464.698 li
307.865 464.638 li
307.925 464.638 li
307.925 464.518 li
308.405 464.098 li
308.465 464.098 li
308.585 463.918 li
308.645 463.918 li
308.765 463.798 li
308.825 463.798 li
308.825 463.738 li
309.065 463.618 li
309.125 463.618 li
309.807 463.252 310.561 463.094 311.345 463.198 cv
311.765 463.258 li
312.185 463.378 li
312.305 463.378 li
312.605 463.438 li
312.785 463.558 li
313.145 463.738 li
313.205 463.738 li
313.325 463.798 li
313.385 463.858 li
313.505 463.918 li
313.565 463.978 li
313.685 464.038 li
313.685 464.098 li
313.745 464.098 li
313.865 464.158 li
313.925 464.218 li
314.285 464.638 li
314.345 464.698 li
314.585 464.938 li
314.585 464.998 li
314.645 465.058 li
314.705 465.178 li
314.765 465.178 li
314.945 465.598 li
315.063 465.992 315.234 466.27 315.245 466.738 cv
315.305 467.818 li
315.245 467.818 li
315.245 468.118 li
315.185 468.118 li
315.185 468.358 li
315.125 468.358 li
315.125 468.658 li
315.065 468.658 li
315.065 468.718 li
315.005 468.718 li
315.005 468.898 li
314.945 468.898 li
314.945 469.078 li
314.885 469.078 li
314.885 469.198 li
314.825 469.198 li
314.825 469.318 li
314.765 469.318 li
314.765 469.498 li
314.705 469.498 li
314.705 469.558 li
314.645 469.618 li
314.645 469.678 li
314.585 469.738 li
314.585 469.798 li
314.525 469.798 li
314.525 469.858 li
314.465 469.918 li
314.465 469.978 li
314.405 469.978 li
314.405 470.098 li
314.345 470.098 li
314.345 470.158 li
314.285 470.218 li
314.225 470.218 li
314.225 470.278 li
314.165 470.338 li
314.105 470.338 li
314.105 470.458 li
314.045 470.518 li
313.985 470.518 li
313.985 470.638 li
313.925 470.698 li
313.865 470.698 li
313.865 470.758 li
313.565 471.058 li
313.565 471.118 li
312.425 472.258 li
312.305 472.318 li
308.765 475.858 li
308.765 475.918 li
308.105 476.578 li
312.545 476.578 li
313.685 476.518 li
314.045 476.518 li
314.225 476.458 li
314.345 476.458 li
314.465 476.338 li
314.465 476.278 li
314.525 476.218 li
314.525 476.098 li
314.585 476.098 li
314.585 475.918 li
314.645 475.918 li
314.645 475.618 li
314.705 475.618 li
314.705 475.498 li
314.765 475.498 li
314.765 475.138 li
314.825 475.138 li
314.825 474.658 li
314.885 474.658 li
314.885 474.418 li
315.305 474.418 li
315.305 474.658 li
315.245 474.658 li
315.245 474.838 li
315.185 474.838 li
315.185 475.318 li
315.125 475.318 li
315.125 475.798 li
315.065 475.798 li
315.065 475.978 li
315.005 475.978 li
315.005 476.458 li
314.945 476.458 li
314.945 476.938 li
314.885 476.938 li
314.885 477.178 li
314.825 477.178 li
314.825 477.598 li
314.765 477.598 li
314.765 477.898 li
ef
294.425 479.578 mo
294.305 479.518 li
294.125 479.518 li
293.945 479.458 li
293.885 479.398 li
293.765 479.398 li
293.585 479.338 li
293.465 479.218 li
293.225 479.158 li
293.225 479.098 li
293.165 479.038 li
293.045 478.978 li
292.985 478.978 li
292.685 478.678 li
292.685 478.618 li
292.625 478.498 li
292.565 478.438 li
292.505 478.438 li
292.445 478.258 li
292.445 478.138 li
292.385 478.078 li
292.325 477.958 li
292.325 477.778 li
292.265 477.538 li
292.325 477.478 li
292.325 476.998 li
292.385 476.998 li
292.385 476.878 li
292.445 476.878 li
292.445 476.698 li
292.505 476.698 li
292.505 476.578 li
292.565 476.578 li
292.565 476.518 li
292.625 476.518 li
292.625 476.398 li
292.685 476.398 li
293.045 476.038 li
293.345 475.918 li
293.585 475.798 li
294.125 475.798 li
294.305 475.858 li
294.365 475.918 li
294.605 475.978 li
294.605 476.038 li
294.665 476.038 li
294.665 476.098 li
294.785 476.158 li
294.785 476.278 li
294.845 476.278 li
294.905 476.518 li
294.965 477.058 li
294.905 477.058 li
294.905 477.178 li
294.845 477.178 li
294.845 477.358 li
294.785 477.358 li
294.785 477.538 li
294.725 477.598 li
294.665 477.598 li
294.665 477.658 li
294.605 477.718 li
294.605 477.778 li
294.485 477.898 li
294.425 477.898 li
294.305 478.078 li
294.245 478.078 li
293.885 478.258 li
293.765 478.258 li
293.645 478.318 li
293.345 478.318 li
293.645 478.618 li
293.765 478.678 li
293.825 478.678 li
294.065 478.798 li
294.245 478.858 li
294.305 478.858 li
294.485 478.918 li
295.205 478.918 li
295.385 478.858 li
295.505 478.858 li
295.685 478.738 li
295.745 478.678 li
295.805 478.678 li
296.165 478.318 li
296.165 478.258 li
296.225 478.258 li
296.285 478.138 li
296.285 478.078 li
296.345 478.078 li
296.345 477.958 li
296.405 477.958 li
296.405 477.838 li
296.465 477.838 li
296.465 477.718 li
296.525 477.718 li
296.525 477.598 li
296.585 477.598 li
296.585 477.478 li
296.645 477.478 li
296.645 477.298 li
296.705 477.298 li
296.705 477.178 li
296.765 477.178 li
296.765 476.998 li
296.825 476.998 li
296.825 476.818 li
296.885 476.818 li
296.885 476.698 li
296.945 476.698 li
296.945 476.398 li
297.005 476.398 li
297.005 476.158 li
297.065 476.158 li
297.065 475.978 li
297.125 475.978 li
297.125 475.738 li
297.185 475.738 li
297.185 475.378 li
297.245 475.378 li
297.245 475.258 li
297.305 475.258 li
297.305 474.898 li
297.365 474.898 li
297.365 474.598 li
297.425 474.598 li
297.425 474.418 li
297.485 474.418 li
297.485 474.058 li
297.545 474.058 li
297.545 473.698 li
297.605 473.698 li
297.605 473.518 li
297.665 473.518 li
297.665 473.158 li
297.725 473.158 li
297.725 472.798 li
297.785 472.798 li
297.785 472.618 li
297.845 472.618 li
297.845 472.258 li
297.905 472.258 li
297.905 471.898 li
297.965 471.898 li
297.965 471.718 li
298.025 471.718 li
298.025 471.358 li
298.085 471.358 li
298.085 470.998 li
298.145 470.998 li
298.145 470.818 li
298.205 470.818 li
298.205 470.458 li
298.265 470.458 li
298.265 470.098 li
298.325 470.098 li
298.325 469.918 li
298.385 469.918 li
298.385 469.558 li
298.445 469.558 li
298.445 469.138 li
298.505 469.138 li
298.505 468.958 li
298.565 468.958 li
298.565 468.598 li
298.625 468.598 li
298.625 468.238 li
298.685 468.238 li
298.685 468.058 li
298.745 468.058 li
298.745 467.638 li
298.805 467.638 li
298.805 467.278 li
298.865 467.278 li
298.865 467.098 li
298.925 467.098 li
298.925 466.678 li
298.985 466.678 li
298.985 466.318 li
299.045 466.318 li
299.045 465.958 li
299.105 465.958 li
299.105 465.718 li
299.165 465.718 li
299.165 465.358 li
299.225 465.358 li
299.225 464.998 li
299.285 464.998 li
299.285 464.818 li
299.345 464.818 li
299.345 464.398 li
299.405 464.398 li
299.405 463.978 li
299.465 463.978 li
299.465 463.798 li
299.525 463.798 li
299.525 463.438 li
299.585 463.438 li
299.585 463.078 li
299.645 463.078 li
299.645 462.838 li
299.705 462.838 li
299.705 462.478 li
299.765 462.478 li
299.765 462.058 li
299.825 462.058 li
299.825 461.878 li
299.885 461.878 li
299.885 461.458 li
299.945 461.458 li
299.945 461.098 li
300.005 461.098 li
300.005 460.918 li
300.065 460.918 li
300.065 460.498 li
300.125 460.498 li
300.125 460.318 li
297.485 460.318 li
297.305 460.138 li
297.305 459.718 li
297.365 459.718 li
297.365 459.538 li
297.485 459.538 li
297.545 459.478 li
297.725 459.418 li
300.305 459.418 li
300.365 459.358 li
300.365 459.178 li
300.425 459.178 li
300.425 458.758 li
300.485 458.758 li
300.485 458.338 li
300.545 458.338 li
300.545 458.158 li
300.605 458.158 li
300.605 457.738 li
300.665 457.738 li
300.665 457.378 li
300.725 457.378 li
300.725 457.198 li
300.785 457.198 li
300.785 456.838 li
300.845 456.838 li
300.845 456.478 li
300.905 456.478 li
300.905 456.298 li
300.965 456.298 li
300.965 455.938 li
301.025 455.938 li
301.025 455.638 li
301.085 455.638 li
301.085 455.458 li
301.145 455.458 li
301.145 455.158 li
301.205 455.158 li
301.205 454.918 li
301.265 454.918 li
301.265 454.738 li
301.325 454.738 li
301.325 454.498 li
301.385 454.498 li
301.385 454.258 li
301.445 454.258 li
301.445 454.138 li
301.505 454.138 li
301.505 453.958 li
301.565 453.958 li
301.565 453.778 li
301.625 453.778 li
301.625 453.658 li
301.685 453.658 li
301.685 453.538 li
301.745 453.538 li
301.745 453.358 li
301.805 453.358 li
301.805 453.238 li
301.865 453.238 li
301.865 453.118 li
301.925 453.118 li
301.925 452.938 li
301.985 452.938 li
302.045 452.878 li
302.045 452.818 li
302.105 452.818 li
302.105 452.638 li
302.225 452.638 li
302.225 452.518 li
302.285 452.518 li
302.285 452.458 li
302.405 452.338 li
302.405 452.278 li
302.465 452.278 li
302.525 452.158 li
302.525 452.098 li
302.585 452.098 li
302.808 451.832 303.055 451.635 303.305 451.438 cv
303.365 451.438 li
303.365 451.378 li
303.485 451.378 li
303.485 451.318 li
303.665 451.258 li
303.665 451.198 li
304.025 451.018 li
304.145 451.018 li
304.265 450.898 li
304.565 450.838 li
304.685 450.838 li
304.925 450.778 li
305.825 450.718 li
305.825 450.778 li
306.365 450.898 li
306.485 450.898 li
306.545 450.958 li
306.785 451.018 li
306.965 451.138 li
307.025 451.198 li
307.205 451.258 li
307.385 451.438 li
307.445 451.438 li
307.565 451.558 li
307.565 451.618 li
307.685 451.738 li
307.685 451.798 li
307.865 451.978 li
307.865 452.098 li
307.925 452.158 li
307.925 452.278 li
307.985 452.518 li
308.045 453.118 li
307.985 453.118 li
307.985 453.298 li
307.925 453.298 li
307.925 453.538 li
307.865 453.538 li
307.865 453.658 li
307.805 453.658 li
307.805 453.718 li
307.745 453.778 li
307.745 453.838 li
307.685 453.838 li
307.685 453.898 li
307.385 454.198 li
307.325 454.198 li
307.325 454.258 li
306.845 454.498 li
306.065 454.498 li
305.885 454.378 li
305.705 454.318 li
305.525 454.138 li
305.465 453.898 li
305.405 453.778 li
305.345 453.538 li
305.405 453.478 li
305.405 453.178 li
305.465 453.178 li
305.465 452.998 li
305.525 452.998 li
305.525 452.818 li
305.585 452.818 li
305.585 452.698 li
305.645 452.698 li
305.645 452.638 li
305.705 452.638 li
306.005 452.278 li
306.065 452.278 li
306.125 452.218 li
306.305 452.098 li
306.425 452.098 li
306.485 452.038 li
306.665 451.978 li
306.845 451.978 li
306.965 451.918 li
306.845 451.798 li
306.785 451.798 li
306.725 451.738 li
306.665 451.738 li
306.605 451.678 li
306.485 451.618 li
306.125 451.498 li
306.065 451.438 li
305.885 451.438 li
305.705 451.378 li
305.045 451.378 li
304.805 451.438 li
304.565 451.618 li
304.505 451.618 li
304.445 451.678 li
304.325 451.798 li
304.205 451.798 li
304.205 451.918 li
304.025 452.098 li
304.025 452.158 li
303.905 452.158 li
303.905 452.338 li
303.845 452.338 li
303.845 452.458 li
303.785 452.458 li
303.785 452.518 li
303.725 452.518 li
303.725 452.698 li
303.665 452.698 li
303.665 452.998 li
303.605 452.998 li
303.605 453.178 li
303.545 453.178 li
303.545 453.478 li
303.485 453.478 li
303.485 453.778 li
303.425 453.778 li
303.425 453.958 li
303.365 453.958 li
303.365 454.318 li
303.305 454.318 li
303.305 454.618 li
303.245 454.618 li
303.245 454.798 li
303.185 454.798 li
303.185 455.158 li
303.125 455.158 li
303.125 455.518 li
303.065 455.518 li
303.065 455.698 li
303.005 455.698 li
303.005 456.058 li
302.945 456.058 li
302.945 456.478 li
302.885 456.478 li
302.885 456.658 li
302.825 456.658 li
302.825 457.018 li
302.765 457.018 li
302.765 457.378 li
302.705 457.378 li
302.705 457.618 li
302.645 457.618 li
302.645 457.978 li
302.585 457.978 li
302.585 458.398 li
302.525 458.398 li
302.525 458.578 li
302.465 458.578 li
302.465 458.998 li
302.405 458.998 li
302.405 459.358 li
302.345 459.418 li
305.525 459.418 li
305.705 459.598 li
305.705 460.078 li
305.645 460.078 li
305.645 460.138 li
305.585 460.258 li
305.525 460.258 li
305.345 460.318 li
302.105 460.318 li
302.105 460.738 li
302.045 460.738 li
302.045 461.158 li
301.985 461.158 li
301.985 461.338 li
301.925 461.338 li
301.925 461.758 li
301.865 461.758 li
301.865 462.118 li
301.805 462.118 li
301.805 462.298 li
301.745 462.298 li
301.745 462.718 li
301.685 462.718 li
301.685 463.078 li
301.625 463.078 li
301.625 463.258 li
301.565 463.258 li
301.565 463.678 li
301.505 463.678 li
301.505 464.098 li
301.445 464.098 li
301.445 464.278 li
301.385 464.278 li
301.385 464.638 li
301.325 464.638 li
301.325 465.058 li
301.265 465.058 li
301.265 465.238 li
301.205 465.238 li
301.205 465.598 li
301.145 465.598 li
301.145 465.958 li
301.085 465.958 li
301.085 466.138 li
301.025 466.138 li
301.025 466.558 li
300.965 466.558 li
300.965 466.918 li
300.905 466.918 li
300.905 467.098 li
300.845 467.098 li
300.845 467.518 li
300.785 467.518 li
300.785 467.878 li
300.725 467.878 li
300.725 468.058 li
300.665 468.058 li
300.665 468.418 li
300.605 468.418 li
300.605 468.778 li
300.545 468.778 li
300.545 468.958 li
300.485 468.958 li
300.485 469.378 li
300.425 469.378 li
300.425 469.738 li
300.365 469.738 li
300.365 469.918 li
300.305 469.918 li
300.305 470.278 li
300.245 470.278 li
300.245 470.638 li
300.185 470.638 li
300.185 470.818 li
300.125 470.818 li
300.125 471.178 li
300.065 471.178 li
300.065 471.478 li
300.005 471.478 li
300.005 471.658 li
299.945 471.658 li
299.945 472.018 li
299.885 472.018 li
299.885 472.318 li
299.825 472.318 li
299.825 472.498 li
299.765 472.498 li
299.765 472.798 li
299.705 472.798 li
299.705 473.098 li
299.645 473.098 li
299.645 473.218 li
299.585 473.218 li
299.585 473.518 li
299.525 473.518 li
299.525 473.758 li
299.465 473.758 li
299.465 473.878 li
299.405 473.878 li
299.405 474.118 li
299.345 474.118 li
299.345 474.358 li
299.285 474.358 li
299.285 474.478 li
299.225 474.478 li
299.225 474.658 li
299.165 474.658 li
299.165 474.898 li
299.105 474.898 li
299.105 475.018 li
299.045 475.018 li
299.045 475.198 li
298.985 475.198 li
298.985 475.378 li
298.925 475.378 li
298.925 475.558 li
298.865 475.558 li
298.865 475.618 li
298.805 475.618 li
298.805 475.798 li
298.745 475.798 li
298.745 475.978 li
298.685 475.978 li
298.685 476.098 li
298.625 476.098 li
298.625 476.278 li
298.565 476.278 li
298.565 476.398 li
298.505 476.398 li
298.505 476.518 li
298.445 476.518 li
298.445 476.638 li
298.385 476.638 li
298.385 476.818 li
298.265 476.818 li
298.265 476.998 li
298.205 476.998 li
298.205 477.118 li
298.145 477.118 li
298.145 477.178 li
298.085 477.238 li
298.085 477.298 li
298.025 477.298 li
298.025 477.418 li
297.965 477.418 li
297.965 477.478 li
297.905 477.478 li
297.905 477.598 li
297.845 477.598 li
297.845 477.718 li
297.785 477.718 li
297.785 477.778 li
297.725 477.838 li
297.665 477.838 li
297.665 477.958 li
297.605 477.958 li
297.605 478.018 li
297.545 478.078 li
297.485 478.078 li
297.485 478.138 li
297.305 478.378 li
297.245 478.378 li
297.245 478.438 li
296.78 478.96 296.196 479.379 295.505 479.518 cv
295.265 479.578 li
ef
306.905 477.898 mo
306.905 477.358 li
306.965 477.358 li
307.205 477.058 li
307.205 476.998 li
307.445 476.818 li
307.445 476.698 li
307.505 476.698 li
307.685 476.518 li
307.685 476.458 li
307.745 476.458 li
307.925 476.218 li
307.925 476.158 li
307.985 476.158 li
308.225 475.918 li
308.225 475.798 li
308.285 475.798 li
308.465 475.618 li
308.465 475.558 li
308.525 475.558 li
308.961 475.042 309.349 474.634 309.785 474.118 cv
309.785 474.058 li
309.845 474.058 li
310.025 473.878 li
310.025 473.758 li
310.085 473.758 li
310.325 473.518 li
310.325 473.458 li
310.385 473.458 li
310.565 473.218 li
310.565 473.158 li
310.625 473.158 li
310.805 472.978 li
310.805 472.858 li
310.865 472.858 li
311.105 472.678 li
311.105 472.618 li
311.345 472.378 li
311.345 472.318 li
311.585 472.078 li
311.585 472.018 li
311.645 472.018 li
311.825 471.838 li
311.825 471.778 li
311.945 471.658 li
311.945 471.598 li
312.005 471.598 li
312.065 471.478 li
312.065 471.418 li
312.125 471.418 li
312.185 471.358 li
312.185 471.238 li
312.245 471.238 li
312.305 471.178 li
312.305 471.118 li
312.365 471.058 li
312.365 470.998 li
312.425 470.998 li
312.485 470.938 li
312.485 470.878 li
312.545 470.818 li
312.545 470.758 li
312.605 470.758 li
312.605 470.638 li
312.665 470.638 li
312.665 470.518 li
312.725 470.518 li
312.725 470.458 li
312.785 470.458 li
312.785 470.338 li
312.845 470.338 li
312.845 470.278 li
312.905 470.278 li
312.905 470.158 li
312.965 470.158 li
312.965 470.038 li
313.025 470.038 li
313.025 469.918 li
313.085 469.918 li
313.085 469.798 li
313.145 469.798 li
313.145 469.678 li
313.205 469.678 li
313.205 469.558 li
313.265 469.558 li
313.265 469.438 li
313.325 469.438 li
313.325 469.258 li
313.385 469.258 li
313.385 469.078 li
313.445 469.078 li
313.445 468.958 li
313.505 468.958 li
313.505 468.718 li
313.565 468.718 li
313.565 468.478 li
313.625 468.478 li
313.625 468.298 li
313.685 468.298 li
313.685 467.818 li
313.745 467.818 li
313.685 466.858 li
313.685 466.498 li
313.545 465.845 313.47 465.755 313.205 465.238 cv
313.145 465.178 li
313.145 465.118 li
313.025 464.998 li
312.965 464.878 li
312.905 464.818 li
312.665 464.518 li
312.605 464.518 li
312.425 464.338 li
312.245 464.278 li
312.245 464.218 li
312.065 464.158 li
312.065 464.098 li
311.825 463.978 li
311.705 463.978 li
311.585 463.918 li
311.285 463.798 li
310.925 463.798 li
310.145 463.738 li
310.145 463.798 li
309.905 463.798 li
309.845 463.858 li
309.545 463.918 li
309.005 464.158 li
308.945 464.278 li
308.885 464.278 li
308.825 464.338 li
308.765 464.338 li
308.705 464.458 li
308.645 464.458 li
308.525 464.578 li
308.465 464.578 li
308.465 464.638 li
308.225 464.878 li
308.225 464.998 li
308.105 464.998 li
308.105 465.118 li
308.045 465.118 li
308.045 465.238 li
307.985 465.238 li
307.985 465.298 li
307.925 465.298 li
307.925 465.418 li
307.865 465.418 li
307.865 465.598 li
307.805 465.598 li
307.805 465.658 li
307.745 465.658 li
307.745 465.838 li
307.685 465.838 li
307.685 466.078 li
307.625 466.078 li
307.625 466.138 li
307.565 466.138 li
307.565 466.438 li
307.505 466.438 li
307.505 466.498 li
308.105 466.558 li
308.389 466.671 308.62 466.748 308.645 467.098 cv
308.705 467.638 li
308.645 467.638 li
308.645 467.878 li
308.585 467.878 li
308.585 467.938 li
308.405 468.118 li
308.285 468.178 li
308.285 468.238 li
308.225 468.238 li
308.105 468.298 li
307.565 468.298 li
307.385 468.238 li
307.325 468.178 li
307.265 468.118 li
307.025 467.878 li
306.965 467.758 li
306.965 467.578 li
306.905 467.338 li
306.965 467.278 li
306.965 466.558 li
307.025 466.558 li
307.025 466.258 li
307.085 466.258 li
307.085 466.138 li
307.145 466.138 li
307.145 465.898 li
307.205 465.898 li
307.205 465.718 li
307.265 465.718 li
307.265 465.598 li
307.325 465.598 li
307.325 465.478 li
307.385 465.478 li
307.385 465.358 li
307.445 465.358 li
307.445 465.238 li
307.505 465.238 li
307.505 465.118 li
307.565 465.118 li
307.565 465.058 li
307.685 464.998 li
307.685 464.878 li
307.745 464.878 li
307.745 464.818 li
307.865 464.698 li
307.865 464.638 li
307.925 464.638 li
307.925 464.518 li
308.405 464.098 li
308.465 464.098 li
308.585 463.918 li
308.645 463.918 li
308.765 463.798 li
308.825 463.798 li
308.825 463.738 li
309.065 463.618 li
309.125 463.618 li
309.807 463.252 310.561 463.094 311.345 463.198 cv
311.765 463.258 li
312.185 463.378 li
312.305 463.378 li
312.605 463.438 li
312.785 463.558 li
313.145 463.738 li
313.205 463.738 li
313.325 463.798 li
313.385 463.858 li
313.505 463.918 li
313.565 463.978 li
313.685 464.038 li
313.685 464.098 li
313.745 464.098 li
313.865 464.158 li
313.925 464.218 li
314.285 464.638 li
314.345 464.698 li
314.585 464.938 li
314.585 464.998 li
314.645 465.058 li
314.705 465.178 li
314.765 465.178 li
314.945 465.598 li
315.063 465.992 315.234 466.27 315.245 466.738 cv
315.305 467.818 li
315.245 467.818 li
315.245 468.118 li
315.185 468.118 li
315.185 468.358 li
315.125 468.358 li
315.125 468.658 li
315.065 468.658 li
315.065 468.718 li
315.005 468.718 li
315.005 468.898 li
314.945 468.898 li
314.945 469.078 li
314.885 469.078 li
314.885 469.198 li
314.825 469.198 li
314.825 469.318 li
314.765 469.318 li
314.765 469.498 li
314.705 469.498 li
314.705 469.558 li
314.645 469.618 li
314.645 469.678 li
314.585 469.738 li
314.585 469.798 li
314.525 469.798 li
314.525 469.858 li
314.465 469.918 li
314.465 469.978 li
314.405 469.978 li
314.405 470.098 li
314.345 470.098 li
314.345 470.158 li
314.285 470.218 li
314.225 470.218 li
314.225 470.278 li
314.165 470.338 li
314.105 470.338 li
314.105 470.458 li
314.045 470.518 li
313.985 470.518 li
313.985 470.638 li
313.925 470.698 li
313.865 470.698 li
313.865 470.758 li
313.565 471.058 li
313.565 471.118 li
312.425 472.258 li
312.305 472.318 li
308.765 475.858 li
308.765 475.918 li
308.105 476.578 li
312.545 476.578 li
313.685 476.518 li
314.045 476.518 li
314.225 476.458 li
314.345 476.458 li
314.465 476.338 li
314.465 476.278 li
314.525 476.218 li
314.525 476.098 li
314.585 476.098 li
314.585 475.918 li
314.645 475.918 li
314.645 475.618 li
314.705 475.618 li
314.705 475.498 li
314.765 475.498 li
314.765 475.138 li
314.825 475.138 li
314.825 474.658 li
314.885 474.658 li
314.885 474.418 li
315.305 474.418 li
315.305 474.658 li
315.245 474.658 li
315.245 474.838 li
315.185 474.838 li
315.185 475.318 li
315.125 475.318 li
315.125 475.798 li
315.065 475.798 li
315.065 475.978 li
315.005 475.978 li
315.005 476.458 li
314.945 476.458 li
314.945 476.938 li
314.885 476.938 li
314.885 477.178 li
314.825 477.178 li
314.825 477.598 li
314.765 477.598 li
314.765 477.898 li
ef
464.105 238.678 mo
463.985 238.618 li
463.805 238.558 li
463.685 238.558 li
463.565 238.498 li
463.505 238.498 li
463.265 238.378 li
463.205 238.378 li
463.145 238.318 li
462.965 238.198 li
462.905 238.198 li
462.845 238.138 li
462.785 238.078 li
462.665 238.018 li
462.406 237.729 462.096 237.431 462.065 237.058 cv
462.005 236.878 li
461.945 236.578 li
462.005 236.578 li
462.005 236.218 li
462.065 236.218 li
462.065 235.978 li
462.125 235.978 li
462.125 235.798 li
462.185 235.798 li
462.245 235.738 li
462.245 235.618 li
462.305 235.618 li
462.305 235.498 li
462.365 235.498 li
462.824 234.98 463.331 234.741 464.045 234.958 cv
464.285 235.078 li
464.285 235.138 li
464.405 235.138 li
464.405 235.198 li
464.465 235.258 li
464.465 235.318 li
464.525 235.378 li
464.585 235.618 li
464.645 236.158 li
464.585 236.158 li
464.585 236.398 li
464.525 236.398 li
464.525 236.458 li
464.465 236.458 li
464.465 236.638 li
464.405 236.698 li
464.405 236.758 li
464.285 236.818 li
464.285 236.878 li
463.673 237.366 464.054 237.107 463.325 237.418 cv
463.025 237.418 li
463.085 237.478 li
463.83 238.173 465.216 238.309 465.845 237.418 cv
465.845 237.298 li
465.905 237.298 li
465.965 237.238 li
465.965 237.178 li
466.025 237.118 li
466.025 237.058 li
466.085 237.058 li
466.085 236.938 li
466.145 236.938 li
466.145 236.818 li
466.205 236.818 li
466.205 236.698 li
466.265 236.698 li
466.265 236.578 li
466.325 236.578 li
466.325 236.398 li
466.385 236.398 li
466.385 236.278 li
466.445 236.278 li
466.445 236.038 li
466.505 236.038 li
466.505 235.858 li
466.565 235.858 li
466.565 235.798 li
466.625 235.798 li
466.625 235.498 li
466.685 235.498 li
466.685 235.258 li
466.745 235.258 li
466.745 235.078 li
466.805 235.078 li
466.805 234.778 li
466.865 234.778 li
466.865 234.478 li
466.925 234.478 li
466.925 234.358 li
466.985 234.358 li
466.985 233.998 li
467.045 233.998 li
467.045 233.638 li
467.105 233.638 li
467.105 233.458 li
467.165 233.458 li
467.165 233.098 li
467.225 233.098 li
467.225 232.738 li
467.285 232.738 li
467.285 232.558 li
467.345 232.558 li
467.345 232.198 li
467.405 232.198 li
467.405 231.898 li
467.465 231.898 li
467.465 231.718 li
467.525 231.718 li
467.525 231.358 li
467.585 231.358 li
467.585 230.998 li
467.645 230.998 li
467.645 230.818 li
467.705 230.818 li
467.705 230.458 li
467.765 230.458 li
467.765 230.098 li
467.825 230.098 li
467.825 229.918 li
467.885 229.918 li
467.885 229.498 li
467.945 229.498 li
467.945 229.138 li
468.005 229.138 li
468.005 228.958 li
468.065 228.958 li
468.065 228.598 li
468.125 228.598 li
468.125 228.238 li
468.185 228.238 li
468.185 228.058 li
468.245 228.058 li
468.245 227.698 li
468.305 227.698 li
468.305 227.278 li
468.365 227.278 li
468.365 227.098 li
468.425 227.098 li
468.425 226.738 li
468.485 226.738 li
468.485 226.378 li
468.545 226.378 li
468.545 226.198 li
468.605 226.198 li
468.605 225.778 li
468.665 225.778 li
468.665 225.418 li
468.725 225.418 li
468.725 225.238 li
468.785 225.238 li
468.785 224.818 li
468.845 224.818 li
468.845 224.458 li
468.905 224.458 li
468.905 224.218 li
468.965 224.218 li
468.965 223.858 li
469.025 223.858 li
469.025 223.498 li
469.085 223.498 li
469.085 223.318 li
469.145 223.318 li
469.145 222.898 li
469.205 222.898 li
469.205 222.538 li
469.265 222.538 li
469.265 222.358 li
469.325 222.358 li
469.325 221.938 li
469.385 221.938 li
469.385 221.518 li
469.445 221.518 li
469.445 221.338 li
469.505 221.338 li
469.505 220.978 li
469.565 220.978 li
469.565 220.558 li
469.625 220.558 li
469.625 220.378 li
469.685 220.378 li
469.685 220.018 li
469.745 220.018 li
469.745 219.598 li
469.805 219.598 li
469.805 219.418 li
467.165 219.418 li
466.985 219.238 li
466.985 218.758 li
467.045 218.758 li
467.045 218.638 li
467.105 218.638 li
467.165 218.578 li
467.225 218.578 li
467.405 218.518 li
469.985 218.518 li
470.045 218.458 li
470.045 218.278 li
470.105 218.278 li
470.105 217.858 li
470.165 217.858 li
470.165 217.438 li
470.225 217.438 li
470.225 217.258 li
470.285 217.258 li
470.285 216.838 li
470.345 216.838 li
470.345 216.478 li
470.405 216.478 li
470.405 216.238 li
470.465 216.238 li
470.465 215.878 li
470.525 215.878 li
470.525 215.518 li
470.585 215.518 li
470.585 215.338 li
470.645 215.338 li
470.645 215.038 li
470.705 215.038 li
470.705 214.738 li
470.765 214.738 li
470.765 214.558 li
470.825 214.558 li
470.825 214.258 li
470.885 214.258 li
470.885 214.018 li
470.945 214.018 li
470.945 213.838 li
471.005 213.838 li
471.005 213.598 li
471.065 213.598 li
471.065 213.358 li
471.125 213.358 li
471.125 213.238 li
471.185 213.238 li
471.185 212.998 li
471.245 212.998 li
471.245 212.818 li
471.305 212.818 li
471.305 212.758 li
471.365 212.758 li
471.365 212.578 li
471.425 212.578 li
471.425 212.398 li
471.485 212.398 li
471.485 212.338 li
471.545 212.338 li
471.545 212.218 li
471.605 212.218 li
471.605 212.038 li
471.665 212.038 li
471.725 211.978 li
471.725 211.918 li
471.785 211.858 li
471.785 211.738 li
471.845 211.738 li
471.905 211.678 li
471.905 211.618 li
471.965 211.618 li
471.965 211.498 li
472.085 211.438 li
472.085 211.318 li
472.145 211.318 li
472.205 211.258 li
472.205 211.198 li
472.265 211.198 li
472.625 210.778 li
472.685 210.778 li
472.805 210.658 li
472.865 210.598 li
472.985 210.538 li
473.045 210.538 li
473.045 210.478 li
473.165 210.418 li
473.345 210.358 li
473.345 210.298 li
473.945 209.998 li
474.245 209.938 li
474.365 209.878 li
474.545 209.878 li
475.505 209.818 li
475.505 209.878 li
476.045 209.998 li
476.515 210.07 476.897 210.36 477.245 210.658 cv
477.245 210.718 li
477.365 210.778 li
477.365 210.898 li
477.425 210.958 li
477.545 211.078 li
477.545 211.198 li
477.605 211.258 li
477.605 211.378 li
477.665 211.618 li
477.725 212.218 li
477.665 212.218 li
477.665 212.398 li
477.605 212.398 li
477.605 212.578 li
477.545 212.578 li
477.545 212.758 li
477.485 212.758 li
477.485 212.818 li
477.425 212.818 li
477.425 212.938 li
477.365 212.938 li
477.365 212.998 li
477.065 213.298 li
477.005 213.298 li
477.005 213.358 li
476.885 213.358 li
476.885 213.418 li
476.645 213.538 li
476.525 213.538 li
476.405 213.598 li
475.805 213.598 li
475.745 213.538 li
475.565 213.478 li
475.385 213.358 li
475.205 213.178 li
475.085 212.998 li
475.085 212.818 li
475.025 212.578 li
475.085 212.578 li
475.085 212.158 li
475.145 212.158 li
475.145 212.038 li
475.205 212.038 li
475.205 211.858 li
475.265 211.858 li
475.265 211.798 li
475.325 211.798 li
475.325 211.678 li
475.385 211.678 li
475.685 211.378 li
475.745 211.318 li
475.805 211.318 li
475.985 211.198 li
476.105 211.138 li
476.165 211.138 li
476.345 211.078 li
476.525 211.078 li
476.645 211.018 li
476.525 210.898 li
476.465 210.898 li
476.345 210.778 li
476.285 210.778 li
476.165 210.718 li
475.985 210.598 li
475.805 210.598 li
475.745 210.538 li
475.565 210.538 li
475.385 210.478 li
474.725 210.418 li
474.725 210.478 li
474.485 210.538 li
474.245 210.718 li
474.185 210.718 li
474.125 210.778 li
474.005 210.898 li
473.885 210.898 li
473.885 210.958 li
473.705 211.138 li
473.705 211.258 li
473.585 211.258 li
473.585 211.438 li
473.525 211.438 li
473.525 211.558 li
473.465 211.558 li
473.465 211.618 li
473.405 211.618 li
473.405 211.798 li
473.345 211.798 li
473.345 212.098 li
473.285 212.098 li
473.285 212.218 li
473.225 212.218 li
473.225 212.578 li
473.165 212.578 li
473.165 212.878 li
473.105 212.878 li
473.105 212.998 li
473.045 212.998 li
473.045 213.358 li
472.985 213.358 li
472.985 213.718 li
472.925 213.718 li
472.925 213.898 li
472.865 213.898 li
472.865 214.258 li
472.805 214.258 li
472.805 214.618 li
472.745 214.618 li
472.745 214.798 li
472.685 214.798 li
472.685 215.158 li
472.625 215.158 li
472.625 215.518 li
472.565 215.518 li
472.565 215.698 li
472.505 215.698 li
472.505 216.058 li
472.445 216.058 li
472.445 216.478 li
472.385 216.478 li
472.385 216.718 li
472.325 216.718 li
472.325 217.078 li
472.265 217.078 li
472.265 217.498 li
472.205 217.498 li
472.205 217.678 li
472.145 217.678 li
472.145 218.038 li
472.085 218.038 li
472.085 218.458 li
472.025 218.518 li
475.205 218.518 li
475.325 218.578 li
475.385 218.698 li
475.385 219.178 li
475.325 219.178 li
475.325 219.238 li
475.205 219.358 li
475.025 219.418 li
471.785 219.418 li
471.785 219.838 li
471.725 219.838 li
471.725 220.258 li
471.665 220.258 li
471.665 220.438 li
471.605 220.438 li
471.605 220.798 li
471.545 220.798 li
471.545 221.218 li
471.485 221.218 li
471.485 221.398 li
471.425 221.398 li
471.425 221.818 li
471.365 221.818 li
471.365 222.178 li
471.305 222.178 li
471.305 222.358 li
471.245 222.358 li
471.245 222.778 li
471.185 222.778 li
471.185 223.138 li
471.125 223.138 li
471.125 223.318 li
471.065 223.318 li
471.065 223.738 li
471.005 223.738 li
471.005 224.158 li
470.945 224.158 li
470.945 224.338 li
470.885 224.338 li
470.885 224.698 li
470.825 224.698 li
470.825 225.058 li
470.765 225.058 li
470.765 225.238 li
470.705 225.238 li
470.705 225.658 li
470.645 225.658 li
470.645 226.018 li
470.585 226.018 li
470.585 226.198 li
470.525 226.198 li
470.525 226.558 li
470.465 226.558 li
470.465 226.918 li
470.405 226.918 li
470.405 227.098 li
470.345 227.098 li
470.345 227.518 li
470.285 227.518 li
470.285 227.878 li
470.225 227.878 li
470.225 228.058 li
470.165 228.058 li
470.165 228.418 li
470.105 228.418 li
470.105 228.778 li
470.045 228.778 li
470.045 228.958 li
469.985 228.958 li
469.985 229.318 li
469.925 229.318 li
469.925 229.678 li
469.865 229.678 li
469.865 230.038 li
469.805 230.038 li
469.805 230.218 li
469.745 230.218 li
469.745 230.578 li
469.685 230.578 li
469.685 230.938 li
469.625 230.938 li
469.625 231.118 li
469.565 231.118 li
469.565 231.418 li
469.505 231.418 li
469.505 231.718 li
469.445 231.718 li
469.445 231.898 li
469.385 231.898 li
469.385 232.198 li
469.325 232.198 li
469.325 232.438 li
469.265 232.438 li
469.265 232.558 li
469.205 232.558 li
469.205 232.858 li
469.145 232.858 li
469.145 233.098 li
469.085 233.098 li
469.085 233.218 li
469.025 233.218 li
469.025 233.458 li
468.965 233.458 li
468.965 233.638 li
468.905 233.638 li
468.905 233.758 li
468.845 233.758 li
468.845 233.998 li
468.785 233.998 li
468.785 234.178 li
468.725 234.178 li
468.725 234.298 li
468.665 234.298 li
468.665 234.478 li
468.605 234.478 li
468.605 234.598 li
468.545 234.598 li
468.545 234.718 li
468.485 234.718 li
468.485 234.898 li
468.425 234.898 li
468.425 235.078 li
468.365 235.078 li
468.365 235.138 li
468.305 235.138 li
468.305 235.318 li
468.245 235.318 li
468.245 235.498 li
468.185 235.498 li
468.185 235.618 li
468.125 235.618 li
468.125 235.738 li
468.065 235.738 li
468.065 235.858 li
468.005 235.918 li
467.945 235.918 li
467.945 236.038 li
467.885 236.038 li
467.885 236.218 li
467.825 236.218 li
467.825 236.278 li
467.765 236.338 li
467.765 236.398 li
467.705 236.398 li
467.705 236.518 li
467.645 236.518 li
467.645 236.578 li
467.585 236.578 li
467.585 236.698 li
467.525 236.698 li
467.525 236.758 li
467.465 236.758 li
467.465 236.878 li
467.405 236.938 li
467.345 236.938 li
467.345 237.058 li
467.285 237.058 li
467.285 237.118 li
467.225 237.178 li
467.165 237.178 li
467.165 237.238 li
466.985 237.478 li
466.925 237.478 li
466.925 237.538 li
466.625 237.838 li
466.565 237.838 li
466.445 238.018 li
466.325 238.018 li
466.265 238.138 li
466.085 238.198 li
466.085 238.258 li
465.845 238.378 li
465.785 238.378 li
465.725 238.438 li
465.185 238.618 li
464.945 238.678 li
ef
480.365 237.298 mo
480.125 237.238 li
479.825 237.178 li
479.525 237.058 li
479.045 236.818 li
478.985 236.758 li
478.925 236.758 li
478.865 236.698 li
478.805 236.698 li
478.745 236.638 li
478.565 236.458 478.385 236.278 478.205 236.098 cv
477.965 235.858 li
477.965 235.798 li
477.905 235.798 li
477.905 235.678 li
477.845 235.678 li
477.785 235.618 li
477.785 235.558 li
477.725 235.498 li
477.725 235.438 li
477.605 235.318 li
477.605 235.258 li
477.365 234.778 li
477.305 234.658 li
477.245 234.538 li
477.185 234.418 li
477.185 234.358 li
477.065 234.118 li
477.065 233.998 li
476.945 233.638 li
476.885 233.518 li
476.885 233.338 li
476.825 233.218 li
476.825 233.038 li
476.765 232.858 li
476.705 232.678 li
476.705 232.378 li
476.645 232.198 li
476.645 231.898 li
476.585 231.478 li
476.525 231.058 li
476.525 228.958 li
476.585 228.958 li
476.585 228.598 li
476.645 228.598 li
476.645 228.058 li
476.705 228.058 li
476.705 227.698 li
476.765 227.698 li
476.765 227.518 li
476.825 227.518 li
476.825 227.158 li
476.885 227.158 li
476.885 226.918 li
476.945 226.918 li
476.945 226.798 li
477.005 226.798 li
477.005 226.558 li
477.065 226.558 li
477.065 226.378 li
477.125 226.378 li
477.125 226.258 li
477.185 226.258 li
477.185 226.078 li
477.245 226.078 li
477.245 225.898 li
477.305 225.898 li
477.305 225.838 li
477.365 225.838 li
477.365 225.658 li
477.425 225.658 li
477.425 225.478 li
477.485 225.478 li
477.485 225.418 li
477.545 225.418 li
477.545 225.298 li
477.605 225.298 li
477.605 225.238 li
477.665 225.178 li
477.665 225.118 li
477.725 225.118 li
477.725 224.938 li
477.785 224.938 li
477.785 224.878 li
477.845 224.878 li
477.845 224.758 li
477.905 224.758 li
477.905 224.698 li
477.965 224.698 li
478.025 224.578 li
478.025 224.518 li
478.085 224.518 li
478.085 224.398 li
478.145 224.398 li
478.205 224.338 li
478.205 224.278 li
478.265 224.278 li
478.325 224.218 li
478.325 224.158 li
478.565 223.918 li
478.565 223.858 li
478.625 223.858 li
478.865 223.618 li
478.925 223.558 li
479.105 223.318 li
479.225 223.318 li
479.345 223.198 li
479.405 223.138 li
479.465 223.078 li
479.705 222.958 li
479.765 222.898 li
479.885 222.838 li
479.945 222.778 li
480.065 222.718 li
480.185 222.718 li
480.485 222.538 li
480.845 222.418 li
480.905 222.418 li
481.085 222.358 li
481.445 222.298 li
482.525 222.238 li
482.525 222.298 li
482.705 222.358 li
482.825 222.358 li
483.005 222.418 li
483.125 222.418 li
483.185 222.478 li
483.305 222.538 li
483.365 222.538 li
483.485 222.598 li
483.665 222.718 li
483.785 222.778 li
483.845 222.838 li
484.239 223.134 484.461 223.621 484.565 224.098 cv
484.565 224.818 li
484.505 224.818 li
484.505 224.938 li
484.325 225.118 li
484.205 225.178 li
484.145 225.238 li
483.485 225.238 li
483.305 225.118 li
483.185 224.998 li
483.125 224.938 li
483.065 224.878 li
483.065 224.758 li
483.005 224.518 li
483.065 224.458 li
483.065 224.158 li
483.125 224.158 li
483.125 224.038 li
483.245 223.918 li
483.305 223.858 li
483.365 223.858 li
483.485 223.798 li
483.605 223.798 li
484.025 223.738 li
483.965 223.618 li
483.845 223.498 li
483.605 223.198 li
483.005 222.898 li
482.705 222.838 li
482.525 222.778 li
481.565 222.778 li
481.385 222.838 li
481.085 222.898 li
481.025 222.958 li
480.905 222.958 li
480.845 223.018 li
480.725 223.078 li
480.545 223.138 li
480.365 223.258 li
480.305 223.318 li
480.245 223.318 li
480.185 223.378 li
480.125 223.438 li
480.065 223.438 li
479.885 223.618 li
479.465 223.978 li
479.465 224.038 li
479.405 224.098 li
479.405 224.158 li
479.285 224.218 li
479.285 224.338 li
479.225 224.398 li
479.165 224.398 li
479.165 224.458 li
479.105 224.518 li
479.105 224.578 li
479.045 224.578 li
479.045 224.698 li
478.985 224.758 li
478.925 224.758 li
478.925 224.878 li
478.865 224.878 li
478.865 225.058 li
478.805 225.058 li
478.805 225.118 li
478.745 225.118 li
478.745 225.298 li
478.685 225.298 li
478.685 225.418 li
478.625 225.418 li
478.625 225.658 li
478.565 225.658 li
478.565 225.778 li
478.505 225.778 li
478.505 225.958 li
478.445 225.958 li
478.445 226.198 li
478.385 226.198 li
478.385 226.378 li
478.325 226.378 li
478.325 226.678 li
478.265 226.678 li
478.265 227.038 li
478.205 227.038 li
478.205 227.278 li
478.145 227.278 li
478.145 227.818 li
478.085 227.818 li
478.085 229.258 li
478.025 229.258 li
478.025 229.978 li
478.085 229.978 li
478.085 229.858 li
478.145 229.858 li
478.145 229.678 li
478.205 229.678 li
478.205 229.618 li
478.265 229.618 li
478.265 229.438 li
478.325 229.438 li
478.325 229.318 li
478.385 229.318 li
478.385 229.258 li
478.445 229.258 li
478.445 229.138 li
478.505 229.138 li
478.505 228.958 li
478.625 228.958 li
478.625 228.898 li
478.685 228.778 li
478.685 228.718 li
478.745 228.718 li
478.805 228.658 li
478.805 228.598 li
478.865 228.598 li
479.225 228.178 li
479.285 228.178 li
479.405 228.058 li
479.465 228.058 li
479.585 227.938 li
479.705 227.878 li
480.005 227.758 li
480.125 227.698 li
480.365 227.638 li
480.545 227.638 li
481.445 227.578 li
481.445 227.638 li
481.685 227.638 li
481.865 227.698 li
481.985 227.698 li
482.225 227.818 li
482.285 227.818 li
482.885 228.118 li
482.945 228.178 li
483.005 228.178 li
483.065 228.238 li
483.125 228.238 li
483.185 228.358 li
483.245 228.358 li
483.425 228.538 li
483.485 228.538 li
483.845 228.898 li
483.845 228.958 li
483.965 229.078 li
483.965 229.138 li
484.025 229.198 li
484.145 229.318 li
484.145 229.378 li
484.205 229.438 li
484.205 229.498 li
484.325 229.618 li
484.505 229.978 li
484.505 230.038 li
484.685 230.338 li
484.805 230.758 li
484.865 231.058 li
484.925 231.238 li
484.925 231.478 li
484.985 231.778 li
485.045 233.038 li
484.985 233.038 li
484.985 233.278 li
484.925 233.278 li
484.925 233.698 li
484.865 233.698 li
484.865 233.998 li
484.805 233.998 li
484.805 234.118 li
484.745 234.118 li
484.745 234.298 li
484.685 234.298 li
484.685 234.538 li
484.625 234.538 li
484.625 234.598 li
484.565 234.598 li
484.565 234.778 li
484.505 234.778 li
484.505 234.898 li
484.445 234.898 li
484.445 234.958 li
484.385 235.018 li
484.385 235.078 li
484.325 235.078 li
484.325 235.258 li
484.205 235.258 li
484.205 235.318 li
484.145 235.438 li
484.145 235.498 li
484.025 235.558 li
484.025 235.618 li
483.965 235.678 li
483.905 235.678 li
483.905 235.798 li
483.845 235.858 li
483.785 235.858 li
483.785 235.918 li
483.365 236.338 li
483.305 236.398 li
483.125 236.518 li
483.065 236.578 li
483.005 236.638 li
482.945 236.698 li
482.885 236.698 li
482.825 236.758 li
482.525 236.878 li
482.525 236.938 li
482.465 236.938 li
482.345 236.998 li
482.285 237.058 li
482.165 237.058 li
482.105 237.118 li
481.985 237.118 li
481.805 237.178 li
481.745 237.238 li
481.565 237.238 li
481.325 237.298 li
cp
480.485 236.758 mo
480.305 236.698 li
480.185 236.698 li
479.433 236.387 479.435 236.337 478.925 235.738 cv
478.925 235.678 li
478.865 235.558 li
478.436 235.005 478.151 233.539 478.145 232.858 cv
478.085 232.018 li
478.085 231.838 li
478.145 231.838 li
478.145 230.998 li
478.205 230.998 li
478.205 230.818 li
478.265 230.818 li
478.265 230.458 li
478.325 230.458 li
478.325 230.218 li
478.385 230.218 li
478.385 230.098 li
478.445 230.098 li
478.445 229.858 li
478.505 229.858 li
478.505 229.738 li
478.565 229.738 li
478.565 229.618 li
478.625 229.618 li
478.625 229.498 li
478.685 229.498 li
478.685 229.318 li
478.745 229.318 li
478.745 229.258 li
478.805 229.258 li
478.805 229.138 li
478.865 229.138 li
478.865 229.078 li
478.925 229.078 li
478.925 228.958 li
478.985 228.958 li
479.045 228.898 li
479.045 228.778 li
479.105 228.778 li
479.465 228.418 li
479.585 228.358 li
479.705 228.238 li
480.005 228.118 li
480.125 228.058 li
480.185 228.058 li
480.365 227.998 li
480.485 227.998 li
481.385 227.938 li
481.385 227.998 li
481.565 227.998 li
481.997 228.135 482.338 228.411 482.645 228.718 cv
482.645 228.778 li
482.825 228.898 li
482.825 228.958 li
482.885 229.018 li
482.885 229.078 li
482.945 229.138 li
483.125 229.558 li
483.185 229.678 li
483.245 229.738 li
483.305 230.038 li
483.365 230.218 li
483.425 230.698 li
483.485 231.058 li
483.485 234.058 li
483.425 234.058 li
483.425 234.418 li
483.365 234.418 li
483.365 234.598 li
483.305 234.598 li
483.305 234.838 li
483.245 234.838 li
483.245 235.018 li
483.185 235.018 li
483.185 235.078 li
483.125 235.078 li
483.125 235.258 li
483.065 235.258 li
483.065 235.378 li
483.005 235.378 li
483.005 235.498 li
482.945 235.498 li
482.945 235.558 li
482.885 235.558 li
482.885 235.678 li
482.825 235.678 li
482.825 235.738 li
482.765 235.798 li
482.705 235.798 li
482.705 235.858 li
482.345 236.278 li
482.285 236.338 li
482.045 236.458 li
481.985 236.518 li
481.805 236.578 li
481.565 236.698 li
481.445 236.698 li
481.265 236.758 li
ef
464.105 238.678 mo
463.985 238.618 li
463.805 238.558 li
463.685 238.558 li
463.565 238.498 li
463.505 238.498 li
463.265 238.378 li
463.205 238.378 li
463.145 238.318 li
462.965 238.198 li
462.905 238.198 li
462.845 238.138 li
462.785 238.078 li
462.665 238.018 li
462.406 237.729 462.096 237.431 462.065 237.058 cv
462.005 236.878 li
461.945 236.578 li
462.005 236.578 li
462.005 236.218 li
462.065 236.218 li
462.065 235.978 li
462.125 235.978 li
462.125 235.798 li
462.185 235.798 li
462.245 235.738 li
462.245 235.618 li
462.305 235.618 li
462.305 235.498 li
462.365 235.498 li
462.824 234.98 463.331 234.741 464.045 234.958 cv
464.285 235.078 li
464.285 235.138 li
464.405 235.138 li
464.405 235.198 li
464.465 235.258 li
464.465 235.318 li
464.525 235.378 li
464.585 235.618 li
464.645 236.158 li
464.585 236.158 li
464.585 236.398 li
464.525 236.398 li
464.525 236.458 li
464.465 236.458 li
464.465 236.638 li
464.405 236.698 li
464.405 236.758 li
464.285 236.818 li
464.285 236.878 li
463.673 237.366 464.054 237.107 463.325 237.418 cv
463.025 237.418 li
463.085 237.478 li
463.83 238.173 465.216 238.309 465.845 237.418 cv
465.845 237.298 li
465.905 237.298 li
465.965 237.238 li
465.965 237.178 li
466.025 237.118 li
466.025 237.058 li
466.085 237.058 li
466.085 236.938 li
466.145 236.938 li
466.145 236.818 li
466.205 236.818 li
466.205 236.698 li
466.265 236.698 li
466.265 236.578 li
466.325 236.578 li
466.325 236.398 li
466.385 236.398 li
466.385 236.278 li
466.445 236.278 li
466.445 236.038 li
466.505 236.038 li
466.505 235.858 li
466.565 235.858 li
466.565 235.798 li
466.625 235.798 li
466.625 235.498 li
466.685 235.498 li
466.685 235.258 li
466.745 235.258 li
466.745 235.078 li
466.805 235.078 li
466.805 234.778 li
466.865 234.778 li
466.865 234.478 li
466.925 234.478 li
466.925 234.358 li
466.985 234.358 li
466.985 233.998 li
467.045 233.998 li
467.045 233.638 li
467.105 233.638 li
467.105 233.458 li
467.165 233.458 li
467.165 233.098 li
467.225 233.098 li
467.225 232.738 li
467.285 232.738 li
467.285 232.558 li
467.345 232.558 li
467.345 232.198 li
467.405 232.198 li
467.405 231.898 li
467.465 231.898 li
467.465 231.718 li
467.525 231.718 li
467.525 231.358 li
467.585 231.358 li
467.585 230.998 li
467.645 230.998 li
467.645 230.818 li
467.705 230.818 li
467.705 230.458 li
467.765 230.458 li
467.765 230.098 li
467.825 230.098 li
467.825 229.918 li
467.885 229.918 li
467.885 229.498 li
467.945 229.498 li
467.945 229.138 li
468.005 229.138 li
468.005 228.958 li
468.065 228.958 li
468.065 228.598 li
468.125 228.598 li
468.125 228.238 li
468.185 228.238 li
468.185 228.058 li
468.245 228.058 li
468.245 227.698 li
468.305 227.698 li
468.305 227.278 li
468.365 227.278 li
468.365 227.098 li
468.425 227.098 li
468.425 226.738 li
468.485 226.738 li
468.485 226.378 li
468.545 226.378 li
468.545 226.198 li
468.605 226.198 li
468.605 225.778 li
468.665 225.778 li
468.665 225.418 li
468.725 225.418 li
468.725 225.238 li
468.785 225.238 li
468.785 224.818 li
468.845 224.818 li
468.845 224.458 li
468.905 224.458 li
468.905 224.218 li
468.965 224.218 li
468.965 223.858 li
469.025 223.858 li
469.025 223.498 li
469.085 223.498 li
469.085 223.318 li
469.145 223.318 li
469.145 222.898 li
469.205 222.898 li
469.205 222.538 li
469.265 222.538 li
469.265 222.358 li
469.325 222.358 li
469.325 221.938 li
469.385 221.938 li
469.385 221.518 li
469.445 221.518 li
469.445 221.338 li
469.505 221.338 li
469.505 220.978 li
469.565 220.978 li
469.565 220.558 li
469.625 220.558 li
469.625 220.378 li
469.685 220.378 li
469.685 220.018 li
469.745 220.018 li
469.745 219.598 li
469.805 219.598 li
469.805 219.418 li
467.165 219.418 li
466.985 219.238 li
466.985 218.758 li
467.045 218.758 li
467.045 218.638 li
467.105 218.638 li
467.165 218.578 li
467.225 218.578 li
467.405 218.518 li
469.985 218.518 li
470.045 218.458 li
470.045 218.278 li
470.105 218.278 li
470.105 217.858 li
470.165 217.858 li
470.165 217.438 li
470.225 217.438 li
470.225 217.258 li
470.285 217.258 li
470.285 216.838 li
470.345 216.838 li
470.345 216.478 li
470.405 216.478 li
470.405 216.238 li
470.465 216.238 li
470.465 215.878 li
470.525 215.878 li
470.525 215.518 li
470.585 215.518 li
470.585 215.338 li
470.645 215.338 li
470.645 215.038 li
470.705 215.038 li
470.705 214.738 li
470.765 214.738 li
470.765 214.558 li
470.825 214.558 li
470.825 214.258 li
470.885 214.258 li
470.885 214.018 li
470.945 214.018 li
470.945 213.838 li
471.005 213.838 li
471.005 213.598 li
471.065 213.598 li
471.065 213.358 li
471.125 213.358 li
471.125 213.238 li
471.185 213.238 li
471.185 212.998 li
471.245 212.998 li
471.245 212.818 li
471.305 212.818 li
471.305 212.758 li
471.365 212.758 li
471.365 212.578 li
471.425 212.578 li
471.425 212.398 li
471.485 212.398 li
471.485 212.338 li
471.545 212.338 li
471.545 212.218 li
471.605 212.218 li
471.605 212.038 li
471.665 212.038 li
471.725 211.978 li
471.725 211.918 li
471.785 211.858 li
471.785 211.738 li
471.845 211.738 li
471.905 211.678 li
471.905 211.618 li
471.965 211.618 li
471.965 211.498 li
472.085 211.438 li
472.085 211.318 li
472.145 211.318 li
472.205 211.258 li
472.205 211.198 li
472.265 211.198 li
472.625 210.778 li
472.685 210.778 li
472.805 210.658 li
472.865 210.598 li
472.985 210.538 li
473.045 210.538 li
473.045 210.478 li
473.165 210.418 li
473.345 210.358 li
473.345 210.298 li
473.945 209.998 li
474.245 209.938 li
474.365 209.878 li
474.545 209.878 li
475.505 209.818 li
475.505 209.878 li
476.045 209.998 li
476.515 210.07 476.897 210.36 477.245 210.658 cv
477.245 210.718 li
477.365 210.778 li
477.365 210.898 li
477.425 210.958 li
477.545 211.078 li
477.545 211.198 li
477.605 211.258 li
477.605 211.378 li
477.665 211.618 li
477.725 212.218 li
477.665 212.218 li
477.665 212.398 li
477.605 212.398 li
477.605 212.578 li
477.545 212.578 li
477.545 212.758 li
477.485 212.758 li
477.485 212.818 li
477.425 212.818 li
477.425 212.938 li
477.365 212.938 li
477.365 212.998 li
477.065 213.298 li
477.005 213.298 li
477.005 213.358 li
476.885 213.358 li
476.885 213.418 li
476.645 213.538 li
476.525 213.538 li
476.405 213.598 li
475.805 213.598 li
475.745 213.538 li
475.565 213.478 li
475.385 213.358 li
475.205 213.178 li
475.085 212.998 li
475.085 212.818 li
475.025 212.578 li
475.085 212.578 li
475.085 212.158 li
475.145 212.158 li
475.145 212.038 li
475.205 212.038 li
475.205 211.858 li
475.265 211.858 li
475.265 211.798 li
475.325 211.798 li
475.325 211.678 li
475.385 211.678 li
475.685 211.378 li
475.745 211.318 li
475.805 211.318 li
475.985 211.198 li
476.105 211.138 li
476.165 211.138 li
476.345 211.078 li
476.525 211.078 li
476.645 211.018 li
476.525 210.898 li
476.465 210.898 li
476.345 210.778 li
476.285 210.778 li
476.165 210.718 li
475.985 210.598 li
475.805 210.598 li
475.745 210.538 li
475.565 210.538 li
475.385 210.478 li
474.725 210.418 li
474.725 210.478 li
474.485 210.538 li
474.245 210.718 li
474.185 210.718 li
474.125 210.778 li
474.005 210.898 li
473.885 210.898 li
473.885 210.958 li
473.705 211.138 li
473.705 211.258 li
473.585 211.258 li
473.585 211.438 li
473.525 211.438 li
473.525 211.558 li
473.465 211.558 li
473.465 211.618 li
473.405 211.618 li
473.405 211.798 li
473.345 211.798 li
473.345 212.098 li
473.285 212.098 li
473.285 212.218 li
473.225 212.218 li
473.225 212.578 li
473.165 212.578 li
473.165 212.878 li
473.105 212.878 li
473.105 212.998 li
473.045 212.998 li
473.045 213.358 li
472.985 213.358 li
472.985 213.718 li
472.925 213.718 li
472.925 213.898 li
472.865 213.898 li
472.865 214.258 li
472.805 214.258 li
472.805 214.618 li
472.745 214.618 li
472.745 214.798 li
472.685 214.798 li
472.685 215.158 li
472.625 215.158 li
472.625 215.518 li
472.565 215.518 li
472.565 215.698 li
472.505 215.698 li
472.505 216.058 li
472.445 216.058 li
472.445 216.478 li
472.385 216.478 li
472.385 216.718 li
472.325 216.718 li
472.325 217.078 li
472.265 217.078 li
472.265 217.498 li
472.205 217.498 li
472.205 217.678 li
472.145 217.678 li
472.145 218.038 li
472.085 218.038 li
472.085 218.458 li
472.025 218.518 li
475.205 218.518 li
475.325 218.578 li
475.385 218.698 li
475.385 219.178 li
475.325 219.178 li
475.325 219.238 li
475.205 219.358 li
475.025 219.418 li
471.785 219.418 li
471.785 219.838 li
471.725 219.838 li
471.725 220.258 li
471.665 220.258 li
471.665 220.438 li
471.605 220.438 li
471.605 220.798 li
471.545 220.798 li
471.545 221.218 li
471.485 221.218 li
471.485 221.398 li
471.425 221.398 li
471.425 221.818 li
471.365 221.818 li
471.365 222.178 li
471.305 222.178 li
471.305 222.358 li
471.245 222.358 li
471.245 222.778 li
471.185 222.778 li
471.185 223.138 li
471.125 223.138 li
471.125 223.318 li
471.065 223.318 li
471.065 223.738 li
471.005 223.738 li
471.005 224.158 li
470.945 224.158 li
470.945 224.338 li
470.885 224.338 li
470.885 224.698 li
470.825 224.698 li
470.825 225.058 li
470.765 225.058 li
470.765 225.238 li
470.705 225.238 li
470.705 225.658 li
470.645 225.658 li
470.645 226.018 li
470.585 226.018 li
470.585 226.198 li
470.525 226.198 li
470.525 226.558 li
470.465 226.558 li
470.465 226.918 li
470.405 226.918 li
470.405 227.098 li
470.345 227.098 li
470.345 227.518 li
470.285 227.518 li
470.285 227.878 li
470.225 227.878 li
470.225 228.058 li
470.165 228.058 li
470.165 228.418 li
470.105 228.418 li
470.105 228.778 li
470.045 228.778 li
470.045 228.958 li
469.985 228.958 li
469.985 229.318 li
469.925 229.318 li
469.925 229.678 li
469.865 229.678 li
469.865 230.038 li
469.805 230.038 li
469.805 230.218 li
469.745 230.218 li
469.745 230.578 li
469.685 230.578 li
469.685 230.938 li
469.625 230.938 li
469.625 231.118 li
469.565 231.118 li
469.565 231.418 li
469.505 231.418 li
469.505 231.718 li
469.445 231.718 li
469.445 231.898 li
469.385 231.898 li
469.385 232.198 li
469.325 232.198 li
469.325 232.438 li
469.265 232.438 li
469.265 232.558 li
469.205 232.558 li
469.205 232.858 li
469.145 232.858 li
469.145 233.098 li
469.085 233.098 li
469.085 233.218 li
469.025 233.218 li
469.025 233.458 li
468.965 233.458 li
468.965 233.638 li
468.905 233.638 li
468.905 233.758 li
468.845 233.758 li
468.845 233.998 li
468.785 233.998 li
468.785 234.178 li
468.725 234.178 li
468.725 234.298 li
468.665 234.298 li
468.665 234.478 li
468.605 234.478 li
468.605 234.598 li
468.545 234.598 li
468.545 234.718 li
468.485 234.718 li
468.485 234.898 li
468.425 234.898 li
468.425 235.078 li
468.365 235.078 li
468.365 235.138 li
468.305 235.138 li
468.305 235.318 li
468.245 235.318 li
468.245 235.498 li
468.185 235.498 li
468.185 235.618 li
468.125 235.618 li
468.125 235.738 li
468.065 235.738 li
468.065 235.858 li
468.005 235.918 li
467.945 235.918 li
467.945 236.038 li
467.885 236.038 li
467.885 236.218 li
467.825 236.218 li
467.825 236.278 li
467.765 236.338 li
467.765 236.398 li
467.705 236.398 li
467.705 236.518 li
467.645 236.518 li
467.645 236.578 li
467.585 236.578 li
467.585 236.698 li
467.525 236.698 li
467.525 236.758 li
467.465 236.758 li
467.465 236.878 li
467.405 236.938 li
467.345 236.938 li
467.345 237.058 li
467.285 237.058 li
467.285 237.118 li
467.225 237.178 li
467.165 237.178 li
467.165 237.238 li
466.985 237.478 li
466.925 237.478 li
466.925 237.538 li
466.625 237.838 li
466.565 237.838 li
466.445 238.018 li
466.325 238.018 li
466.265 238.138 li
466.085 238.198 li
466.085 238.258 li
465.845 238.378 li
465.785 238.378 li
465.725 238.438 li
465.185 238.618 li
464.945 238.678 li
ef
480.365 237.298 mo
480.125 237.238 li
479.825 237.178 li
479.525 237.058 li
479.045 236.818 li
478.985 236.758 li
478.925 236.758 li
478.865 236.698 li
478.805 236.698 li
478.745 236.638 li
478.565 236.458 478.385 236.278 478.205 236.098 cv
477.965 235.858 li
477.965 235.798 li
477.905 235.798 li
477.905 235.678 li
477.845 235.678 li
477.785 235.618 li
477.785 235.558 li
477.725 235.498 li
477.725 235.438 li
477.605 235.318 li
477.605 235.258 li
477.365 234.778 li
477.305 234.658 li
477.245 234.538 li
477.185 234.418 li
477.185 234.358 li
477.065 234.118 li
477.065 233.998 li
476.945 233.638 li
476.885 233.518 li
476.885 233.338 li
476.825 233.218 li
476.825 233.038 li
476.765 232.858 li
476.705 232.678 li
476.705 232.378 li
476.645 232.198 li
476.645 231.898 li
476.585 231.478 li
476.525 231.058 li
476.525 228.958 li
476.585 228.958 li
476.585 228.598 li
476.645 228.598 li
476.645 228.058 li
476.705 228.058 li
476.705 227.698 li
476.765 227.698 li
476.765 227.518 li
476.825 227.518 li
476.825 227.158 li
476.885 227.158 li
476.885 226.918 li
476.945 226.918 li
476.945 226.798 li
477.005 226.798 li
477.005 226.558 li
477.065 226.558 li
477.065 226.378 li
477.125 226.378 li
477.125 226.258 li
477.185 226.258 li
477.185 226.078 li
477.245 226.078 li
477.245 225.898 li
477.305 225.898 li
477.305 225.838 li
477.365 225.838 li
477.365 225.658 li
477.425 225.658 li
477.425 225.478 li
477.485 225.478 li
477.485 225.418 li
477.545 225.418 li
477.545 225.298 li
477.605 225.298 li
477.605 225.238 li
477.665 225.178 li
477.665 225.118 li
477.725 225.118 li
477.725 224.938 li
477.785 224.938 li
477.785 224.878 li
477.845 224.878 li
477.845 224.758 li
477.905 224.758 li
477.905 224.698 li
477.965 224.698 li
478.025 224.578 li
478.025 224.518 li
478.085 224.518 li
478.085 224.398 li
478.145 224.398 li
478.205 224.338 li
478.205 224.278 li
478.265 224.278 li
478.325 224.218 li
478.325 224.158 li
478.565 223.918 li
478.565 223.858 li
478.625 223.858 li
478.865 223.618 li
478.925 223.558 li
479.105 223.318 li
479.225 223.318 li
479.345 223.198 li
479.405 223.138 li
479.465 223.078 li
479.705 222.958 li
479.765 222.898 li
479.885 222.838 li
479.945 222.778 li
480.065 222.718 li
480.185 222.718 li
480.485 222.538 li
480.845 222.418 li
480.905 222.418 li
481.085 222.358 li
481.445 222.298 li
482.525 222.238 li
482.525 222.298 li
482.705 222.358 li
482.825 222.358 li
483.005 222.418 li
483.125 222.418 li
483.185 222.478 li
483.305 222.538 li
483.365 222.538 li
483.485 222.598 li
483.665 222.718 li
483.785 222.778 li
483.845 222.838 li
484.239 223.134 484.461 223.621 484.565 224.098 cv
484.565 224.818 li
484.505 224.818 li
484.505 224.938 li
484.325 225.118 li
484.205 225.178 li
484.145 225.238 li
483.485 225.238 li
483.305 225.118 li
483.185 224.998 li
483.125 224.938 li
483.065 224.878 li
483.065 224.758 li
483.005 224.518 li
483.065 224.458 li
483.065 224.158 li
483.125 224.158 li
483.125 224.038 li
483.245 223.918 li
483.305 223.858 li
483.365 223.858 li
483.485 223.798 li
483.605 223.798 li
484.025 223.738 li
483.965 223.618 li
483.845 223.498 li
483.605 223.198 li
483.005 222.898 li
482.705 222.838 li
482.525 222.778 li
481.565 222.778 li
481.385 222.838 li
481.085 222.898 li
481.025 222.958 li
480.905 222.958 li
480.845 223.018 li
480.725 223.078 li
480.545 223.138 li
480.365 223.258 li
480.305 223.318 li
480.245 223.318 li
480.185 223.378 li
480.125 223.438 li
480.065 223.438 li
479.885 223.618 li
479.465 223.978 li
479.465 224.038 li
479.405 224.098 li
479.405 224.158 li
479.285 224.218 li
479.285 224.338 li
479.225 224.398 li
479.165 224.398 li
479.165 224.458 li
479.105 224.518 li
479.105 224.578 li
479.045 224.578 li
479.045 224.698 li
478.985 224.758 li
478.925 224.758 li
478.925 224.878 li
478.865 224.878 li
478.865 225.058 li
478.805 225.058 li
478.805 225.118 li
478.745 225.118 li
478.745 225.298 li
478.685 225.298 li
478.685 225.418 li
478.625 225.418 li
478.625 225.658 li
478.565 225.658 li
478.565 225.778 li
478.505 225.778 li
478.505 225.958 li
478.445 225.958 li
478.445 226.198 li
478.385 226.198 li
478.385 226.378 li
478.325 226.378 li
478.325 226.678 li
478.265 226.678 li
478.265 227.038 li
478.205 227.038 li
478.205 227.278 li
478.145 227.278 li
478.145 227.818 li
478.085 227.818 li
478.085 229.258 li
478.025 229.258 li
478.025 229.978 li
478.085 229.978 li
478.085 229.858 li
478.145 229.858 li
478.145 229.678 li
478.205 229.678 li
478.205 229.618 li
478.265 229.618 li
478.265 229.438 li
478.325 229.438 li
478.325 229.318 li
478.385 229.318 li
478.385 229.258 li
478.445 229.258 li
478.445 229.138 li
478.505 229.138 li
478.505 228.958 li
478.625 228.958 li
478.625 228.898 li
478.685 228.778 li
478.685 228.718 li
478.745 228.718 li
478.805 228.658 li
478.805 228.598 li
478.865 228.598 li
479.225 228.178 li
479.285 228.178 li
479.405 228.058 li
479.465 228.058 li
479.585 227.938 li
479.705 227.878 li
480.005 227.758 li
480.125 227.698 li
480.365 227.638 li
480.545 227.638 li
481.445 227.578 li
481.445 227.638 li
481.685 227.638 li
481.865 227.698 li
481.985 227.698 li
482.225 227.818 li
482.285 227.818 li
482.885 228.118 li
482.945 228.178 li
483.005 228.178 li
483.065 228.238 li
483.125 228.238 li
483.185 228.358 li
483.245 228.358 li
483.425 228.538 li
483.485 228.538 li
483.845 228.898 li
483.845 228.958 li
483.965 229.078 li
483.965 229.138 li
484.025 229.198 li
484.145 229.318 li
484.145 229.378 li
484.205 229.438 li
484.205 229.498 li
484.325 229.618 li
484.505 229.978 li
484.505 230.038 li
484.685 230.338 li
484.805 230.758 li
484.865 231.058 li
484.925 231.238 li
484.925 231.478 li
484.985 231.778 li
485.045 233.038 li
484.985 233.038 li
484.985 233.278 li
484.925 233.278 li
484.925 233.698 li
484.865 233.698 li
484.865 233.998 li
484.805 233.998 li
484.805 234.118 li
484.745 234.118 li
484.745 234.298 li
484.685 234.298 li
484.685 234.538 li
484.625 234.538 li
484.625 234.598 li
484.565 234.598 li
484.565 234.778 li
484.505 234.778 li
484.505 234.898 li
484.445 234.898 li
484.445 234.958 li
484.385 235.018 li
484.385 235.078 li
484.325 235.078 li
484.325 235.258 li
484.205 235.258 li
484.205 235.318 li
484.145 235.438 li
484.145 235.498 li
484.025 235.558 li
484.025 235.618 li
483.965 235.678 li
483.905 235.678 li
483.905 235.798 li
483.845 235.858 li
483.785 235.858 li
483.785 235.918 li
483.365 236.338 li
483.305 236.398 li
483.125 236.518 li
483.065 236.578 li
483.005 236.638 li
482.945 236.698 li
482.885 236.698 li
482.825 236.758 li
482.525 236.878 li
482.525 236.938 li
482.465 236.938 li
482.345 236.998 li
482.285 237.058 li
482.165 237.058 li
482.105 237.118 li
481.985 237.118 li
481.805 237.178 li
481.745 237.238 li
481.565 237.238 li
481.325 237.298 li
cp
480.485 236.758 mo
480.305 236.698 li
480.185 236.698 li
479.433 236.387 479.435 236.337 478.925 235.738 cv
478.925 235.678 li
478.865 235.558 li
478.436 235.005 478.151 233.539 478.145 232.858 cv
478.085 232.018 li
478.085 231.838 li
478.145 231.838 li
478.145 230.998 li
478.205 230.998 li
478.205 230.818 li
478.265 230.818 li
478.265 230.458 li
478.325 230.458 li
478.325 230.218 li
478.385 230.218 li
478.385 230.098 li
478.445 230.098 li
478.445 229.858 li
478.505 229.858 li
478.505 229.738 li
478.565 229.738 li
478.565 229.618 li
478.625 229.618 li
478.625 229.498 li
478.685 229.498 li
478.685 229.318 li
478.745 229.318 li
478.745 229.258 li
478.805 229.258 li
478.805 229.138 li
478.865 229.138 li
478.865 229.078 li
478.925 229.078 li
478.925 228.958 li
478.985 228.958 li
479.045 228.898 li
479.045 228.778 li
479.105 228.778 li
479.465 228.418 li
479.585 228.358 li
479.705 228.238 li
480.005 228.118 li
480.125 228.058 li
480.185 228.058 li
480.365 227.998 li
480.485 227.998 li
481.385 227.938 li
481.385 227.998 li
481.565 227.998 li
481.997 228.135 482.338 228.411 482.645 228.718 cv
482.645 228.778 li
482.825 228.898 li
482.825 228.958 li
482.885 229.018 li
482.885 229.078 li
482.945 229.138 li
483.125 229.558 li
483.185 229.678 li
483.245 229.738 li
483.305 230.038 li
483.365 230.218 li
483.425 230.698 li
483.485 231.058 li
483.485 234.058 li
483.425 234.058 li
483.425 234.418 li
483.365 234.418 li
483.365 234.598 li
483.305 234.598 li
483.305 234.838 li
483.245 234.838 li
483.245 235.018 li
483.185 235.018 li
483.185 235.078 li
483.125 235.078 li
483.125 235.258 li
483.065 235.258 li
483.065 235.378 li
483.005 235.378 li
483.005 235.498 li
482.945 235.498 li
482.945 235.558 li
482.885 235.558 li
482.885 235.678 li
482.825 235.678 li
482.825 235.738 li
482.765 235.798 li
482.705 235.798 li
482.705 235.858 li
482.345 236.278 li
482.285 236.338 li
482.045 236.458 li
481.985 236.518 li
481.805 236.578 li
481.565 236.698 li
481.445 236.698 li
481.265 236.758 li
ef
223.505 68.5781 mo
223.385 68.5181 li
223.205 68.4581 li
223.025 68.4581 li
222.965 68.3981 li
222.845 68.3981 li
222.665 68.2781 li
222.605 68.2781 li
222.545 68.2181 li
222.305 68.0981 li
222.245 68.0381 li
222.125 67.9781 li
222.065 67.9181 li
221.765 67.6781 li
221.765 67.5581 li
221.705 67.4981 li
221.645 67.4381 li
221.585 67.3781 li
221.525 67.2581 li
221.525 67.1381 li
221.465 67.0781 li
221.405 66.9581 li
221.405 66.7781 li
221.345 66.4781 li
221.405 66.4781 li
221.405 65.9981 li
221.465 65.9981 li
221.465 65.8781 li
221.525 65.8781 li
221.525 65.6981 li
221.585 65.6981 li
221.585 65.5781 li
221.645 65.5781 li
221.645 65.5181 li
221.705 65.5181 li
221.705 65.3981 li
221.765 65.3981 li
222.005 65.1581 li
222.065 65.0981 li
222.125 65.0381 li
222.425 64.8581 li
222.545 64.8581 li
222.665 64.7981 li
223.205 64.7981 li
223.385 64.8581 li
223.445 64.8581 li
223.685 64.9781 li
223.685 65.0381 li
223.745 65.0381 li
223.745 65.0981 li
223.865 65.1581 li
223.865 65.2181 li
223.925 65.2781 li
223.985 65.5181 li
224.045 66.0581 li
223.985 66.0581 li
223.985 66.1781 li
223.925 66.1781 li
223.925 66.3581 li
223.865 66.3581 li
223.865 66.5381 li
223.805 66.5981 li
223.745 66.5981 li
223.745 66.6581 li
223.685 66.7181 li
223.685 66.7781 li
223.565 66.8381 li
223.133 67.3171 223.239 67.0211 222.725 67.3181 cv
222.425 67.3181 li
222.605 67.4981 li
222.863 67.6861 222.852 67.6601 223.145 67.7981 cv
223.325 67.8581 li
223.385 67.8581 li
223.565 67.9181 li
224.285 67.9181 li
224.465 67.8581 li
224.585 67.8581 li
224.765 67.7381 li
224.825 67.6781 li
224.885 67.6781 li
225.245 67.3181 li
225.245 67.1981 li
225.305 67.1981 li
225.365 67.1381 li
225.365 67.0781 li
225.425 67.0181 li
225.425 66.9581 li
225.485 66.9581 li
225.485 66.8381 li
225.545 66.8381 li
225.545 66.7181 li
225.605 66.7181 li
225.605 66.5981 li
225.665 66.5981 li
225.665 66.4781 li
225.725 66.4781 li
225.725 66.2981 li
225.785 66.2981 li
225.785 66.1781 li
225.845 66.1781 li
225.845 65.9381 li
225.905 65.9381 li
225.905 65.7581 li
225.965 65.7581 li
225.965 65.5181 li
226.025 65.5181 li
226.025 65.3981 li
226.085 65.3981 li
226.085 65.1581 li
226.145 65.1581 li
226.145 64.8581 li
226.205 64.8581 li
226.205 64.6781 li
226.265 64.6781 li
226.265 64.3781 li
226.325 64.3781 li
226.325 64.0781 li
226.385 64.0781 li
226.385 63.8981 li
226.445 63.8981 li
226.445 63.5381 li
226.505 63.5381 li
226.505 63.1781 li
226.565 63.1781 li
226.565 62.9981 li
226.625 62.9981 li
226.625 62.6381 li
226.685 62.6381 li
226.685 62.2781 li
226.745 62.2781 li
226.745 62.0981 li
226.805 62.0981 li
226.805 61.7981 li
226.865 61.7981 li
226.865 61.4381 li
226.925 61.4381 li
226.925 61.2581 li
226.985 61.2581 li
226.985 60.8981 li
227.045 60.8981 li
227.045 60.5381 li
227.105 60.5381 li
227.105 60.3581 li
227.165 60.3581 li
227.165 59.9981 li
227.225 59.9981 li
227.225 59.5781 li
227.285 59.5781 li
227.285 59.3981 li
227.345 59.3981 li
227.345 59.0381 li
227.405 59.0381 li
227.405 58.6781 li
227.465 58.6781 li
227.465 58.4981 li
227.525 58.4981 li
227.525 58.1381 li
227.585 58.1381 li
227.585 57.7781 li
227.645 57.7781 li
227.645 57.5981 li
227.705 57.5981 li
227.705 57.1781 li
227.765 57.1781 li
227.765 56.8181 li
227.825 56.8181 li
227.825 56.6381 li
227.885 56.6381 li
227.885 56.2781 li
227.945 56.2781 li
227.945 55.8581 li
228.005 55.8581 li
228.005 55.6781 li
228.065 55.6781 li
228.065 55.3181 li
228.125 55.3181 li
228.125 54.9581 li
228.185 54.9581 li
228.185 54.7181 li
228.245 54.7181 li
228.245 54.3581 li
228.305 54.3581 li
228.305 53.9381 li
228.365 53.9381 li
228.365 53.7581 li
228.425 53.7581 li
228.425 53.3981 li
228.485 53.3981 li
228.485 52.9781 li
228.545 52.9781 li
228.545 52.7981 li
228.605 52.7981 li
228.605 52.4381 li
228.665 52.4381 li
228.665 52.0781 li
228.725 52.0781 li
228.725 51.8381 li
228.785 51.8381 li
228.785 51.4181 li
228.845 51.4181 li
228.845 51.0581 li
228.905 51.0581 li
228.905 50.8781 li
228.965 50.8781 li
228.965 50.4581 li
229.025 50.4581 li
229.025 50.0981 li
229.085 50.0981 li
229.085 49.9181 li
229.145 49.9181 li
229.145 49.4981 li
229.205 49.4981 li
229.205 49.3181 li
226.565 49.3181 li
226.505 49.2581 li
226.385 49.1381 li
226.325 48.9581 li
226.385 48.9581 li
226.385 48.6581 li
226.445 48.6581 li
226.445 48.5381 li
226.505 48.5381 li
226.565 48.4781 li
226.625 48.4781 li
226.805 48.4181 li
229.385 48.4181 li
229.445 48.3581 li
229.445 48.1781 li
229.505 48.1781 li
229.505 47.7581 li
229.565 47.7581 li
229.565 47.3381 li
229.625 47.3381 li
229.625 47.1581 li
229.685 47.1581 li
229.685 46.7381 li
229.745 46.7381 li
229.745 46.3781 li
229.805 46.3781 li
229.805 46.1381 li
229.865 46.1381 li
229.865 45.7781 li
229.925 45.7781 li
229.925 45.4181 li
229.985 45.4181 li
229.985 45.2381 li
230.045 45.2381 li
230.045 44.9381 li
230.105 44.9381 li
230.105 44.6381 li
230.165 44.6381 li
230.165 44.4581 li
230.225 44.4581 li
230.225 44.1581 li
230.285 44.1581 li
230.285 43.9182 li
230.345 43.9182 li
230.345 43.7381 li
230.405 43.7381 li
230.405 43.4981 li
230.465 43.4981 li
230.465 43.2581 li
230.525 43.2581 li
230.525 43.1381 li
230.585 43.1381 li
230.585 42.8981 li
230.645 42.8981 li
230.645 42.7181 li
230.705 42.7181 li
230.705 42.6581 li
230.765 42.6581 li
230.765 42.4781 li
230.825 42.4781 li
230.825 42.2981 li
230.885 42.2981 li
230.885 42.1781 li
230.945 42.1781 li
230.945 42.1181 li
231.005 42.1181 li
231.005 41.9381 li
231.065 41.9381 li
231.065 41.8181 li
231.125 41.8181 li
231.185 41.7581 li
231.185 41.6381 li
231.245 41.6381 li
231.245 41.5181 li
231.365 41.5181 li
231.365 41.3981 li
231.485 41.3381 li
231.485 41.2181 li
231.545 41.2181 li
231.605 41.1581 li
231.605 41.0981 li
232.025 40.6781 li
232.085 40.6781 li
232.325 40.4381 li
232.445 40.4381 li
232.445 40.3781 li
232.505 40.3181 li
232.565 40.3181 li
232.685 40.2581 li
232.745 40.1981 li
233.345 39.8981 li
233.645 39.8381 li
233.765 39.7781 li
233.945 39.7781 li
234.905 39.7181 li
234.905 39.7781 li
235.445 39.8981 li
235.565 39.8981 li
235.625 39.9581 li
235.805 40.0181 li
236.045 40.1381 li
236.105 40.1381 li
236.285 40.2581 li
236.465 40.4381 li
236.525 40.4381 li
236.645 40.5581 li
236.645 40.6181 li
236.854 40.8871 237.039 41.1701 237.065 41.5181 cv
237.065 42.2981 li
237.005 42.2981 li
237.005 42.4781 li
236.945 42.4781 li
236.945 42.5381 li
236.885 42.5381 li
236.885 42.7181 li
236.825 42.7181 li
236.825 42.8381 li
236.765 42.8381 li
236.765 42.8981 li
236.465 43.1981 li
236.405 43.1981 li
236.345 43.2581 li
236.285 43.2581 li
236.285 43.3181 li
236.045 43.4381 li
235.925 43.4381 li
235.805 43.4981 li
235.205 43.4981 li
235.145 43.4381 li
234.965 43.3781 li
234.785 43.2581 li
234.605 43.0781 li
234.485 42.8981 li
234.485 42.7181 li
234.425 42.4781 li
234.485 42.4781 li
234.485 42.0581 li
234.545 42.0581 li
234.545 41.9381 li
234.605 41.9381 li
234.605 41.7581 li
234.665 41.7581 li
234.665 41.6981 li
234.725 41.6981 li
234.725 41.5781 li
234.785 41.5781 li
235.145 41.2181 li
235.205 41.2181 li
235.385 41.0981 li
235.505 41.0381 li
235.565 41.0381 li
235.745 40.9781 li
235.925 40.9781 li
236.045 40.9182 li
235.985 40.8582 li
235.925 40.7981 li
235.865 40.7981 li
235.805 40.7381 li
235.745 40.6781 li
235.685 40.6781 li
235.565 40.6181 li
235.385 40.4981 li
235.205 40.4981 li
235.145 40.4381 li
234.965 40.4381 li
234.785 40.3781 li
234.125 40.3181 li
234.125 40.3781 li
233.885 40.4381 li
233.585 40.6181 li
233.405 40.7981 li
233.285 40.7981 li
233.285 40.8582 li
233.105 41.0381 li
233.045 41.0381 li
233.045 41.1581 li
232.985 41.1581 li
232.985 41.3381 li
232.925 41.3381 li
232.925 41.3981 li
232.865 41.3981 li
232.865 41.5181 li
232.805 41.5181 li
232.805 41.6981 li
232.745 41.6981 li
232.745 41.8181 li
232.685 41.8181 li
232.685 42.1181 li
232.625 42.1181 li
232.625 42.4781 li
232.565 42.4781 li
232.565 42.5981 li
232.505 42.5981 li
232.505 42.8981 li
232.445 42.8981 li
232.445 43.2581 li
232.385 43.2581 li
232.385 43.4381 li
232.325 43.4381 li
232.325 43.7981 li
232.265 43.7981 li
232.265 44.1581 li
232.205 44.1581 li
232.205 44.3381 li
232.145 44.3381 li
232.145 44.6981 li
232.085 44.6981 li
232.085 45.0581 li
232.025 45.0581 li
232.025 45.2381 li
231.965 45.2381 li
231.965 45.5981 li
231.905 45.5981 li
231.905 45.9581 li
231.845 45.9581 li
231.845 46.1981 li
231.785 46.1981 li
231.785 46.6181 li
231.725 46.6181 li
231.725 46.9781 li
231.665 46.9781 li
231.665 47.1581 li
231.605 47.1581 li
231.605 47.5781 li
231.545 47.5781 li
231.545 47.9381 li
231.485 47.9381 li
231.485 48.1781 li
231.425 48.1781 li
231.425 48.4181 li
234.605 48.4181 li
234.725 48.4781 li
234.785 48.5981 li
234.785 49.0781 li
234.725 49.0781 li
234.725 49.1381 li
234.605 49.2581 li
234.425 49.3181 li
231.185 49.3181 li
231.185 49.7381 li
231.125 49.7381 li
231.125 49.9181 li
231.065 49.9181 li
231.065 50.3381 li
231.005 50.3381 li
231.005 50.6981 li
230.945 50.6981 li
230.945 50.9381 li
230.885 50.9381 li
230.885 51.2981 li
230.825 51.2981 li
230.825 51.7181 li
230.765 51.7181 li
230.765 52.0781 li
230.705 52.0781 li
230.705 52.2581 li
230.645 52.2581 li
230.645 52.6781 li
230.585 52.6781 li
230.585 53.0381 li
230.525 53.0381 li
230.525 53.2181 li
230.465 53.2181 li
230.465 53.6381 li
230.405 53.6381 li
230.405 54.0581 li
230.345 54.0581 li
230.345 54.2381 li
230.285 54.2381 li
230.285 54.5981 li
230.225 54.5981 li
230.225 54.9581 li
230.165 54.9581 li
230.165 55.1381 li
230.105 55.1381 li
230.105 55.5581 li
230.045 55.5581 li
230.045 55.9181 li
229.985 55.9181 li
229.985 56.0981 li
229.925 56.0981 li
229.925 56.4581 li
229.865 56.4581 li
229.865 56.8181 li
229.805 56.8181 li
229.805 56.9981 li
229.745 56.9981 li
229.745 57.4181 li
229.685 57.4181 li
229.685 57.7781 li
229.625 57.7781 li
229.625 57.9581 li
229.565 57.9581 li
229.565 58.3181 li
229.505 58.3181 li
229.505 58.6781 li
229.445 58.6781 li
229.445 58.8581 li
229.385 58.8581 li
229.385 59.2181 li
229.325 59.2181 li
229.325 59.5781 li
229.265 59.5781 li
229.265 59.7581 li
229.205 59.7581 li
229.205 60.1181 li
229.145 60.1181 li
229.145 60.4781 li
229.085 60.4781 li
229.085 60.6581 li
229.025 60.6581 li
229.025 61.0181 li
228.965 61.0181 li
228.965 61.3181 li
228.905 61.3181 li
228.905 61.4981 li
228.845 61.4981 li
228.845 61.7981 li
228.785 61.7981 li
228.785 62.0981 li
228.725 62.0981 li
228.725 62.2181 li
228.665 62.2181 li
228.665 62.4581 li
228.605 62.4581 li
228.605 62.7581 li
228.545 62.7581 li
228.545 62.8781 li
228.485 62.8781 li
228.485 63.1181 li
228.425 63.1181 li
228.425 63.3581 li
228.365 63.3581 li
228.365 63.4781 li
228.305 63.4781 li
228.305 63.6581 li
228.245 63.6581 li
228.245 63.8981 li
228.185 63.8981 li
228.185 64.0181 li
228.125 64.0181 li
228.125 64.1981 li
228.065 64.1981 li
228.065 64.3781 li
228.005 64.3781 li
228.005 64.4381 li
227.945 64.4381 li
227.945 64.6181 li
227.885 64.6181 li
227.885 64.7981 li
227.825 64.7981 li
227.825 64.8581 li
227.765 64.8581 li
227.765 65.0381 li
227.705 65.0381 li
227.705 65.2181 li
227.645 65.2181 li
227.645 65.3381 li
227.585 65.3381 li
227.585 65.5181 li
227.525 65.5181 li
227.525 65.6381 li
227.465 65.6381 li
227.465 65.6981 li
227.405 65.6981 li
227.405 65.8181 li
227.345 65.8181 li
227.345 65.9381 li
227.285 65.9381 li
227.285 66.0581 li
227.225 66.0581 li
227.225 66.1781 li
227.165 66.2381 li
227.165 66.2981 li
227.105 66.2981 li
227.105 66.3581 li
227.045 66.4181 li
227.045 66.4781 li
226.985 66.4781 li
226.985 66.5981 li
226.925 66.5981 li
226.925 66.6581 li
226.865 66.6581 li
226.865 66.7781 li
226.805 66.8381 li
226.745 66.8381 li
226.745 66.8981 li
226.685 66.9581 li
226.685 67.0181 li
226.625 67.0781 li
226.565 67.0781 li
226.565 67.1381 li
226.325 67.3781 li
226.325 67.4381 li
226.025 67.7381 li
225.965 67.7381 li
225.845 67.9181 li
225.725 67.9181 li
225.665 68.0381 li
225.485 68.0981 li
225.485 68.1581 li
225.245 68.2781 li
225.185 68.2781 li
225.125 68.3381 li
224.585 68.5181 li
224.345 68.5781 li
ef
239.345 67.1981 mo
239.225 67.1381 li
239.165 67.1381 li
239.165 67.0781 li
239.045 67.0181 li
238.985 66.9581 li
238.985 66.8981 li
238.925 66.8381 li
238.805 66.5981 li
238.805 65.3981 li
238.865 65.3981 li
238.865 64.6181 li
238.925 64.6181 li
238.925 64.3781 li
238.985 64.3781 li
238.985 63.8981 li
239.045 63.8981 li
239.045 63.5381 li
239.105 63.5381 li
239.105 63.3581 li
239.165 63.3581 li
239.165 63.0581 li
239.225 63.0581 li
239.225 62.7581 li
239.285 62.7581 li
239.285 62.5781 li
239.345 62.5781 li
239.345 62.3381 li
239.405 62.3381 li
239.405 62.0981 li
239.465 62.0981 li
239.465 61.9781 li
239.525 61.9781 li
239.525 61.7381 li
239.585 61.7381 li
239.585 61.4981 li
239.645 61.4981 li
239.645 61.3781 li
239.705 61.3781 li
239.705 61.1981 li
239.765 61.1981 li
239.765 61.0181 li
239.825 61.0181 li
239.825 60.9581 li
239.885 60.9581 li
239.885 60.7181 li
239.945 60.7181 li
239.945 60.5381 li
240.005 60.5381 li
240.005 60.4781 li
240.065 60.4781 li
240.065 60.2981 li
240.125 60.2981 li
240.125 60.1181 li
240.185 60.1181 li
240.185 60.0581 li
240.245 60.0581 li
240.245 59.8781 li
240.305 59.8781 li
240.305 59.6981 li
240.365 59.6981 li
240.365 59.6381 li
240.425 59.6381 li
240.425 59.5181 li
240.485 59.5181 li
240.485 59.3381 li
240.545 59.3381 li
240.545 59.2181 li
240.605 59.2181 li
240.605 59.1581 li
240.665 59.1581 li
240.665 58.9781 li
240.725 58.9781 li
240.725 58.8581 li
240.785 58.8581 li
240.785 58.7981 li
240.845 58.7981 li
240.845 58.6781 li
240.905 58.6781 li
240.905 58.4981 li
240.965 58.4981 li
240.965 58.4381 li
241.025 58.4381 li
241.025 58.3781 li
241.085 58.3181 li
241.085 58.1981 li
241.145 58.1981 li
241.205 58.1381 li
241.205 58.0781 li
241.265 58.0781 li
241.265 57.8981 li
241.385 57.8981 li
241.385 57.7781 li
241.445 57.7781 li
241.445 57.5981 li
241.565 57.5981 li
241.565 57.4181 li
241.625 57.4181 li
241.625 57.3581 li
241.685 57.3581 li
241.745 57.2981 li
241.745 57.2381 li
241.805 57.1781 li
241.805 57.1181 li
241.865 57.0581 li
241.865 56.9981 li
241.925 56.9981 li
241.925 56.9381 li
241.985 56.9381 li
241.985 56.8181 li
242.045 56.8181 li
242.105 56.7581 li
242.105 56.6981 li
242.165 56.6381 li
242.165 56.5781 li
242.225 56.5781 li
242.225 56.4581 li
242.285 56.4581 li
242.285 56.3981 li
242.345 56.3981 li
242.345 56.2781 li
242.405 56.2781 li
242.465 56.2181 li
242.465 56.1581 li
242.525 56.0981 li
242.525 56.0381 li
242.585 56.0381 li
242.585 55.9181 li
242.645 55.9181 li
242.645 55.8581 li
242.705 55.8581 li
242.705 55.7381 li
242.765 55.7381 li
242.825 55.6781 li
242.825 55.5581 li
242.885 55.5581 li
242.885 55.4381 li
242.945 55.4381 li
243.005 55.3781 li
243.005 55.3181 li
243.065 55.3181 li
243.065 55.1981 li
243.125 55.1981 li
243.125 55.1381 li
243.185 55.1381 li
243.185 55.0181 li
243.245 55.0181 li
243.245 54.8981 li
243.305 54.8981 li
243.365 54.8381 li
243.365 54.7781 li
243.425 54.7781 li
243.425 54.6581 li
243.485 54.6581 li
243.485 54.5981 li
243.545 54.5981 li
243.545 54.4781 li
243.605 54.4781 li
243.605 54.3581 li
243.665 54.3581 li
243.725 54.2981 li
243.725 54.2381 li
243.785 54.2381 li
243.785 54.1181 li
243.845 54.1181 li
243.845 54.0581 li
243.905 54.0581 li
243.905 53.9381 li
243.965 53.9381 li
243.965 53.8181 li
244.025 53.8181 li
237.785 53.7581 li
237.785 53.8181 li
237.365 53.8781 li
237.185 53.8781 li
237.065 53.9381 li
237.005 53.9381 li
237.005 54.0581 li
236.945 54.0581 li
236.945 54.1181 li
236.885 54.1181 li
236.885 54.2981 li
236.825 54.2981 li
236.825 54.5381 li
236.765 54.5381 li
236.765 54.6581 li
236.705 54.6581 li
236.705 54.9581 li
236.645 54.9581 li
236.645 55.3781 li
236.585 55.3781 li
236.585 55.5581 li
236.525 55.5581 li
236.525 55.9181 li
236.465 55.9781 li
236.105 55.9781 li
236.105 55.7381 li
236.165 55.7381 li
236.165 55.2581 li
236.225 55.2581 li
236.225 55.0181 li
236.285 55.0181 li
236.285 54.5981 li
236.345 54.5981 li
236.345 54.1181 li
236.405 54.1181 li
236.405 53.8781 li
236.465 53.8781 li
236.465 53.3981 li
236.525 53.3981 li
236.525 52.9781 li
236.585 52.9781 li
236.585 52.6781 li
236.645 52.6781 li
236.645 52.2581 li
236.705 52.2581 li
236.705 51.7781 li
237.185 51.7781 li
237.185 51.9581 li
237.245 52.0781 li
237.365 52.1981 li
237.605 52.3181 li
237.965 52.4381 li
238.205 52.4381 li
238.625 52.4981 li
245.105 52.4981 li
245.105 53.0381 li
245.045 53.0381 li
245.045 53.1581 li
244.985 53.1581 li
244.985 53.2181 li
244.925 53.2781 li
244.865 53.2781 li
244.865 53.3981 li
244.805 53.3981 li
244.805 53.5181 li
244.745 53.5181 li
244.745 53.5781 li
244.685 53.5781 li
244.685 53.6981 li
244.625 53.6981 li
244.625 53.7581 li
244.565 53.8181 li
244.505 53.8181 li
244.505 53.9381 li
244.445 53.9381 li
244.445 54.0581 li
244.385 54.0581 li
244.385 54.1181 li
244.325 54.1181 li
244.325 54.2381 li
244.265 54.2381 li
244.265 54.2981 li
244.205 54.3581 li
244.145 54.3581 li
244.145 54.4781 li
244.085 54.4781 li
244.085 54.5981 li
244.025 54.5981 li
244.025 54.6581 li
243.965 54.6581 li
243.965 54.7781 li
243.905 54.7781 li
243.905 54.8381 li
243.845 54.8981 li
243.785 54.8981 li
243.785 55.0181 li
243.725 55.0181 li
243.725 55.1381 li
243.665 55.1381 li
243.665 55.1981 li
243.605 55.1981 li
243.605 55.3181 li
243.545 55.3181 li
243.545 55.3781 li
243.485 55.4381 li
243.425 55.4381 li
243.425 55.5581 li
243.365 55.5581 li
243.365 55.6781 li
243.305 55.6781 li
243.305 55.7381 li
243.245 55.7381 li
243.245 55.8581 li
243.185 55.8581 li
243.185 55.9181 li
243.125 55.9781 li
243.065 55.9781 li
243.065 56.0981 li
243.005 56.0981 li
243.005 56.2181 li
242.945 56.2181 li
242.945 56.2781 li
242.885 56.2781 li
242.885 56.3981 li
242.825 56.3981 li
242.825 56.4581 li
242.765 56.5181 li
242.705 56.5181 li
242.705 56.6381 li
242.645 56.6381 li
242.645 56.7581 li
242.585 56.7581 li
242.585 56.8181 li
242.525 56.8181 li
242.525 56.9381 li
242.465 56.9381 li
242.465 56.9981 li
242.405 57.0581 li
242.345 57.0581 li
242.345 57.1781 li
242.285 57.1781 li
242.285 57.2381 li
242.225 57.2381 li
242.225 57.3581 li
242.165 57.3581 li
242.165 57.4181 li
242.105 57.5381 li
242.045 57.5381 li
242.045 57.5981 li
241.985 57.5981 li
241.985 57.7181 li
241.925 57.7781 li
241.925 57.8381 li
241.865 57.8381 li
241.865 57.8981 li
241.805 57.9581 li
241.805 58.0181 li
241.745 58.0181 li
241.745 58.1381 li
241.685 58.1381 li
241.685 58.1981 li
241.625 58.1981 li
241.625 58.3781 li
241.565 58.3781 li
241.565 58.4981 li
241.505 58.4981 li
241.505 58.6181 li
241.445 58.6181 li
241.445 58.7381 li
241.385 58.7381 li
241.385 58.9181 li
241.325 58.9181 li
241.325 59.0381 li
241.265 59.0381 li
241.265 59.2181 li
241.205 59.2181 li
241.205 59.3981 li
241.145 59.3981 li
241.145 59.5181 li
241.085 59.5181 li
241.085 59.7581 li
241.025 59.7581 li
241.025 60.0581 li
240.965 60.0581 li
240.965 60.1181 li
240.905 60.1181 li
240.905 60.4181 li
240.845 60.4181 li
240.845 60.7781 li
240.785 60.7781 li
240.785 60.9581 li
240.725 60.9581 li
240.725 61.3181 li
240.665 61.3181 li
240.665 61.7981 li
240.605 61.7981 li
240.605 62.0981 li
240.545 62.0981 li
240.545 62.6981 li
240.485 62.6981 li
240.485 63.7181 li
240.425 63.7181 li
240.425 66.5981 li
240.365 66.5981 li
240.365 66.7181 li
240.305 66.7181 li
240.305 66.8381 li
240.245 66.8381 li
240.245 66.9581 li
240.125 67.0781 li
239.885 67.1981 li
ef
223.505 68.5781 mo
223.385 68.5181 li
223.205 68.4581 li
223.025 68.4581 li
222.965 68.3981 li
222.845 68.3981 li
222.665 68.2781 li
222.605 68.2781 li
222.545 68.2181 li
222.305 68.0981 li
222.245 68.0381 li
222.125 67.9781 li
222.065 67.9181 li
221.765 67.6781 li
221.765 67.5581 li
221.705 67.4981 li
221.645 67.4381 li
221.585 67.3781 li
221.525 67.2581 li
221.525 67.1381 li
221.465 67.0781 li
221.405 66.9581 li
221.405 66.7781 li
221.345 66.4781 li
221.405 66.4781 li
221.405 65.9981 li
221.465 65.9981 li
221.465 65.8781 li
221.525 65.8781 li
221.525 65.6981 li
221.585 65.6981 li
221.585 65.5781 li
221.645 65.5781 li
221.645 65.5181 li
221.705 65.5181 li
221.705 65.3981 li
221.765 65.3981 li
222.005 65.1581 li
222.065 65.0981 li
222.125 65.0381 li
222.425 64.8581 li
222.545 64.8581 li
222.665 64.7981 li
223.205 64.7981 li
223.385 64.8581 li
223.445 64.8581 li
223.685 64.9781 li
223.685 65.0381 li
223.745 65.0381 li
223.745 65.0981 li
223.865 65.1581 li
223.865 65.2181 li
223.925 65.2781 li
223.985 65.5181 li
224.045 66.0581 li
223.985 66.0581 li
223.985 66.1781 li
223.925 66.1781 li
223.925 66.3581 li
223.865 66.3581 li
223.865 66.5381 li
223.805 66.5981 li
223.745 66.5981 li
223.745 66.6581 li
223.685 66.7181 li
223.685 66.7781 li
223.565 66.8381 li
223.133 67.3171 223.239 67.0211 222.725 67.3181 cv
222.425 67.3181 li
222.605 67.4981 li
222.863 67.6861 222.852 67.6601 223.145 67.7981 cv
223.325 67.8581 li
223.385 67.8581 li
223.565 67.9181 li
224.285 67.9181 li
224.465 67.8581 li
224.585 67.8581 li
224.765 67.7381 li
224.825 67.6781 li
224.885 67.6781 li
225.245 67.3181 li
225.245 67.1981 li
225.305 67.1981 li
225.365 67.1381 li
225.365 67.0781 li
225.425 67.0181 li
225.425 66.9581 li
225.485 66.9581 li
225.485 66.8381 li
225.545 66.8381 li
225.545 66.7181 li
225.605 66.7181 li
225.605 66.5981 li
225.665 66.5981 li
225.665 66.4781 li
225.725 66.4781 li
225.725 66.2981 li
225.785 66.2981 li
225.785 66.1781 li
225.845 66.1781 li
225.845 65.9381 li
225.905 65.9381 li
225.905 65.7581 li
225.965 65.7581 li
225.965 65.5181 li
226.025 65.5181 li
226.025 65.3981 li
226.085 65.3981 li
226.085 65.1581 li
226.145 65.1581 li
226.145 64.8581 li
226.205 64.8581 li
226.205 64.6781 li
226.265 64.6781 li
226.265 64.3781 li
226.325 64.3781 li
226.325 64.0781 li
226.385 64.0781 li
226.385 63.8981 li
226.445 63.8981 li
226.445 63.5381 li
226.505 63.5381 li
226.505 63.1781 li
226.565 63.1781 li
226.565 62.9981 li
226.625 62.9981 li
226.625 62.6381 li
226.685 62.6381 li
226.685 62.2781 li
226.745 62.2781 li
226.745 62.0981 li
226.805 62.0981 li
226.805 61.7981 li
226.865 61.7981 li
226.865 61.4381 li
226.925 61.4381 li
226.925 61.2581 li
226.985 61.2581 li
226.985 60.8981 li
227.045 60.8981 li
227.045 60.5381 li
227.105 60.5381 li
227.105 60.3581 li
227.165 60.3581 li
227.165 59.9981 li
227.225 59.9981 li
227.225 59.5781 li
227.285 59.5781 li
227.285 59.3981 li
227.345 59.3981 li
227.345 59.0381 li
227.405 59.0381 li
227.405 58.6781 li
227.465 58.6781 li
227.465 58.4981 li
227.525 58.4981 li
227.525 58.1381 li
227.585 58.1381 li
227.585 57.7781 li
227.645 57.7781 li
227.645 57.5981 li
227.705 57.5981 li
227.705 57.1781 li
227.765 57.1781 li
227.765 56.8181 li
227.825 56.8181 li
227.825 56.6381 li
227.885 56.6381 li
227.885 56.2781 li
227.945 56.2781 li
227.945 55.8581 li
228.005 55.8581 li
228.005 55.6781 li
228.065 55.6781 li
228.065 55.3181 li
228.125 55.3181 li
228.125 54.9581 li
228.185 54.9581 li
228.185 54.7181 li
228.245 54.7181 li
228.245 54.3581 li
228.305 54.3581 li
228.305 53.9381 li
228.365 53.9381 li
228.365 53.7581 li
228.425 53.7581 li
228.425 53.3981 li
228.485 53.3981 li
228.485 52.9781 li
228.545 52.9781 li
228.545 52.7981 li
228.605 52.7981 li
228.605 52.4381 li
228.665 52.4381 li
228.665 52.0781 li
228.725 52.0781 li
228.725 51.8381 li
228.785 51.8381 li
228.785 51.4181 li
228.845 51.4181 li
228.845 51.0581 li
228.905 51.0581 li
228.905 50.8781 li
228.965 50.8781 li
228.965 50.4581 li
229.025 50.4581 li
229.025 50.0981 li
229.085 50.0981 li
229.085 49.9181 li
229.145 49.9181 li
229.145 49.4981 li
229.205 49.4981 li
229.205 49.3181 li
226.565 49.3181 li
226.505 49.2581 li
226.385 49.1381 li
226.325 48.9581 li
226.385 48.9581 li
226.385 48.6581 li
226.445 48.6581 li
226.445 48.5381 li
226.505 48.5381 li
226.565 48.4781 li
226.625 48.4781 li
226.805 48.4181 li
229.385 48.4181 li
229.445 48.3581 li
229.445 48.1781 li
229.505 48.1781 li
229.505 47.7581 li
229.565 47.7581 li
229.565 47.3381 li
229.625 47.3381 li
229.625 47.1581 li
229.685 47.1581 li
229.685 46.7381 li
229.745 46.7381 li
229.745 46.3781 li
229.805 46.3781 li
229.805 46.1381 li
229.865 46.1381 li
229.865 45.7781 li
229.925 45.7781 li
229.925 45.4181 li
229.985 45.4181 li
229.985 45.2381 li
230.045 45.2381 li
230.045 44.9381 li
230.105 44.9381 li
230.105 44.6381 li
230.165 44.6381 li
230.165 44.4581 li
230.225 44.4581 li
230.225 44.1581 li
230.285 44.1581 li
230.285 43.9182 li
230.345 43.9182 li
230.345 43.7381 li
230.405 43.7381 li
230.405 43.4981 li
230.465 43.4981 li
230.465 43.2581 li
230.525 43.2581 li
230.525 43.1381 li
230.585 43.1381 li
230.585 42.8981 li
230.645 42.8981 li
230.645 42.7181 li
230.705 42.7181 li
230.705 42.6581 li
230.765 42.6581 li
230.765 42.4781 li
230.825 42.4781 li
230.825 42.2981 li
230.885 42.2981 li
230.885 42.1781 li
230.945 42.1781 li
230.945 42.1181 li
231.005 42.1181 li
231.005 41.9381 li
231.065 41.9381 li
231.065 41.8181 li
231.125 41.8181 li
231.185 41.7581 li
231.185 41.6381 li
231.245 41.6381 li
231.245 41.5181 li
231.365 41.5181 li
231.365 41.3981 li
231.485 41.3381 li
231.485 41.2181 li
231.545 41.2181 li
231.605 41.1581 li
231.605 41.0981 li
232.025 40.6781 li
232.085 40.6781 li
232.325 40.4381 li
232.445 40.4381 li
232.445 40.3781 li
232.505 40.3181 li
232.565 40.3181 li
232.685 40.2581 li
232.745 40.1981 li
233.345 39.8981 li
233.645 39.8381 li
233.765 39.7781 li
233.945 39.7781 li
234.905 39.7181 li
234.905 39.7781 li
235.445 39.8981 li
235.565 39.8981 li
235.625 39.9581 li
235.805 40.0181 li
236.045 40.1381 li
236.105 40.1381 li
236.285 40.2581 li
236.465 40.4381 li
236.525 40.4381 li
236.645 40.5581 li
236.645 40.6181 li
236.854 40.8871 237.039 41.1701 237.065 41.5181 cv
237.065 42.2981 li
237.005 42.2981 li
237.005 42.4781 li
236.945 42.4781 li
236.945 42.5381 li
236.885 42.5381 li
236.885 42.7181 li
236.825 42.7181 li
236.825 42.8381 li
236.765 42.8381 li
236.765 42.8981 li
236.465 43.1981 li
236.405 43.1981 li
236.345 43.2581 li
236.285 43.2581 li
236.285 43.3181 li
236.045 43.4381 li
235.925 43.4381 li
235.805 43.4981 li
235.205 43.4981 li
235.145 43.4381 li
234.965 43.3781 li
234.785 43.2581 li
234.605 43.0781 li
234.485 42.8981 li
234.485 42.7181 li
234.425 42.4781 li
234.485 42.4781 li
234.485 42.0581 li
234.545 42.0581 li
234.545 41.9381 li
234.605 41.9381 li
234.605 41.7581 li
234.665 41.7581 li
234.665 41.6981 li
234.725 41.6981 li
234.725 41.5781 li
234.785 41.5781 li
235.145 41.2181 li
235.205 41.2181 li
235.385 41.0981 li
235.505 41.0381 li
235.565 41.0381 li
235.745 40.9781 li
235.925 40.9781 li
236.045 40.9182 li
235.985 40.8582 li
235.925 40.7981 li
235.865 40.7981 li
235.805 40.7381 li
235.745 40.6781 li
235.685 40.6781 li
235.565 40.6181 li
235.385 40.4981 li
235.205 40.4981 li
235.145 40.4381 li
234.965 40.4381 li
234.785 40.3781 li
234.125 40.3181 li
234.125 40.3781 li
233.885 40.4381 li
233.585 40.6181 li
233.405 40.7981 li
233.285 40.7981 li
233.285 40.8582 li
233.105 41.0381 li
233.045 41.0381 li
233.045 41.1581 li
232.985 41.1581 li
232.985 41.3381 li
232.925 41.3381 li
232.925 41.3981 li
232.865 41.3981 li
232.865 41.5181 li
232.805 41.5181 li
232.805 41.6981 li
232.745 41.6981 li
232.745 41.8181 li
232.685 41.8181 li
232.685 42.1181 li
232.625 42.1181 li
232.625 42.4781 li
232.565 42.4781 li
232.565 42.5981 li
232.505 42.5981 li
232.505 42.8981 li
232.445 42.8981 li
232.445 43.2581 li
232.385 43.2581 li
232.385 43.4381 li
232.325 43.4381 li
232.325 43.7981 li
232.265 43.7981 li
232.265 44.1581 li
232.205 44.1581 li
232.205 44.3381 li
232.145 44.3381 li
232.145 44.6981 li
232.085 44.6981 li
232.085 45.0581 li
232.025 45.0581 li
232.025 45.2381 li
231.965 45.2381 li
231.965 45.5981 li
231.905 45.5981 li
231.905 45.9581 li
231.845 45.9581 li
231.845 46.1981 li
231.785 46.1981 li
231.785 46.6181 li
231.725 46.6181 li
231.725 46.9781 li
231.665 46.9781 li
231.665 47.1581 li
231.605 47.1581 li
231.605 47.5781 li
231.545 47.5781 li
231.545 47.9381 li
231.485 47.9381 li
231.485 48.1781 li
231.425 48.1781 li
231.425 48.4181 li
234.605 48.4181 li
234.725 48.4781 li
234.785 48.5981 li
234.785 49.0781 li
234.725 49.0781 li
234.725 49.1381 li
234.605 49.2581 li
234.425 49.3181 li
231.185 49.3181 li
231.185 49.7381 li
231.125 49.7381 li
231.125 49.9181 li
231.065 49.9181 li
231.065 50.3381 li
231.005 50.3381 li
231.005 50.6981 li
230.945 50.6981 li
230.945 50.9381 li
230.885 50.9381 li
230.885 51.2981 li
230.825 51.2981 li
230.825 51.7181 li
230.765 51.7181 li
230.765 52.0781 li
230.705 52.0781 li
230.705 52.2581 li
230.645 52.2581 li
230.645 52.6781 li
230.585 52.6781 li
230.585 53.0381 li
230.525 53.0381 li
230.525 53.2181 li
230.465 53.2181 li
230.465 53.6381 li
230.405 53.6381 li
230.405 54.0581 li
230.345 54.0581 li
230.345 54.2381 li
230.285 54.2381 li
230.285 54.5981 li
230.225 54.5981 li
230.225 54.9581 li
230.165 54.9581 li
230.165 55.1381 li
230.105 55.1381 li
230.105 55.5581 li
230.045 55.5581 li
230.045 55.9181 li
229.985 55.9181 li
229.985 56.0981 li
229.925 56.0981 li
229.925 56.4581 li
229.865 56.4581 li
229.865 56.8181 li
229.805 56.8181 li
229.805 56.9981 li
229.745 56.9981 li
229.745 57.4181 li
229.685 57.4181 li
229.685 57.7781 li
229.625 57.7781 li
229.625 57.9581 li
229.565 57.9581 li
229.565 58.3181 li
229.505 58.3181 li
229.505 58.6781 li
229.445 58.6781 li
229.445 58.8581 li
229.385 58.8581 li
229.385 59.2181 li
229.325 59.2181 li
229.325 59.5781 li
229.265 59.5781 li
229.265 59.7581 li
229.205 59.7581 li
229.205 60.1181 li
229.145 60.1181 li
229.145 60.4781 li
229.085 60.4781 li
229.085 60.6581 li
229.025 60.6581 li
229.025 61.0181 li
228.965 61.0181 li
228.965 61.3181 li
228.905 61.3181 li
228.905 61.4981 li
228.845 61.4981 li
228.845 61.7981 li
228.785 61.7981 li
228.785 62.0981 li
228.725 62.0981 li
228.725 62.2181 li
228.665 62.2181 li
228.665 62.4581 li
228.605 62.4581 li
228.605 62.7581 li
228.545 62.7581 li
228.545 62.8781 li
228.485 62.8781 li
228.485 63.1181 li
228.425 63.1181 li
228.425 63.3581 li
228.365 63.3581 li
228.365 63.4781 li
228.305 63.4781 li
228.305 63.6581 li
228.245 63.6581 li
228.245 63.8981 li
228.185 63.8981 li
228.185 64.0181 li
228.125 64.0181 li
228.125 64.1981 li
228.065 64.1981 li
228.065 64.3781 li
228.005 64.3781 li
228.005 64.4381 li
227.945 64.4381 li
227.945 64.6181 li
227.885 64.6181 li
227.885 64.7981 li
227.825 64.7981 li
227.825 64.8581 li
227.765 64.8581 li
227.765 65.0381 li
227.705 65.0381 li
227.705 65.2181 li
227.645 65.2181 li
227.645 65.3381 li
227.585 65.3381 li
227.585 65.5181 li
227.525 65.5181 li
227.525 65.6381 li
227.465 65.6381 li
227.465 65.6981 li
227.405 65.6981 li
227.405 65.8181 li
227.345 65.8181 li
227.345 65.9381 li
227.285 65.9381 li
227.285 66.0581 li
227.225 66.0581 li
227.225 66.1781 li
227.165 66.2381 li
227.165 66.2981 li
227.105 66.2981 li
227.105 66.3581 li
227.045 66.4181 li
227.045 66.4781 li
226.985 66.4781 li
226.985 66.5981 li
226.925 66.5981 li
226.925 66.6581 li
226.865 66.6581 li
226.865 66.7781 li
226.805 66.8381 li
226.745 66.8381 li
226.745 66.8981 li
226.685 66.9581 li
226.685 67.0181 li
226.625 67.0781 li
226.565 67.0781 li
226.565 67.1381 li
226.325 67.3781 li
226.325 67.4381 li
226.025 67.7381 li
225.965 67.7381 li
225.845 67.9181 li
225.725 67.9181 li
225.665 68.0381 li
225.485 68.0981 li
225.485 68.1581 li
225.245 68.2781 li
225.185 68.2781 li
225.125 68.3381 li
224.585 68.5181 li
224.345 68.5781 li
ef
239.345 67.1981 mo
239.225 67.1381 li
239.165 67.1381 li
239.165 67.0781 li
239.045 67.0181 li
238.985 66.9581 li
238.985 66.8981 li
238.925 66.8381 li
238.805 66.5981 li
238.805 65.3981 li
238.865 65.3981 li
238.865 64.6181 li
238.925 64.6181 li
238.925 64.3781 li
238.985 64.3781 li
238.985 63.8981 li
239.045 63.8981 li
239.045 63.5381 li
239.105 63.5381 li
239.105 63.3581 li
239.165 63.3581 li
239.165 63.0581 li
239.225 63.0581 li
239.225 62.7581 li
239.285 62.7581 li
239.285 62.5781 li
239.345 62.5781 li
239.345 62.3381 li
239.405 62.3381 li
239.405 62.0981 li
239.465 62.0981 li
239.465 61.9781 li
239.525 61.9781 li
239.525 61.7381 li
239.585 61.7381 li
239.585 61.4981 li
239.645 61.4981 li
239.645 61.3781 li
239.705 61.3781 li
239.705 61.1981 li
239.765 61.1981 li
239.765 61.0181 li
239.825 61.0181 li
239.825 60.9581 li
239.885 60.9581 li
239.885 60.7181 li
239.945 60.7181 li
239.945 60.5381 li
240.005 60.5381 li
240.005 60.4781 li
240.065 60.4781 li
240.065 60.2981 li
240.125 60.2981 li
240.125 60.1181 li
240.185 60.1181 li
240.185 60.0581 li
240.245 60.0581 li
240.245 59.8781 li
240.305 59.8781 li
240.305 59.6981 li
240.365 59.6981 li
240.365 59.6381 li
240.425 59.6381 li
240.425 59.5181 li
240.485 59.5181 li
240.485 59.3381 li
240.545 59.3381 li
240.545 59.2181 li
240.605 59.2181 li
240.605 59.1581 li
240.665 59.1581 li
240.665 58.9781 li
240.725 58.9781 li
240.725 58.8581 li
240.785 58.8581 li
240.785 58.7981 li
240.845 58.7981 li
240.845 58.6781 li
240.905 58.6781 li
240.905 58.4981 li
240.965 58.4981 li
240.965 58.4381 li
241.025 58.4381 li
241.025 58.3781 li
241.085 58.3181 li
241.085 58.1981 li
241.145 58.1981 li
241.205 58.1381 li
241.205 58.0781 li
241.265 58.0781 li
241.265 57.8981 li
241.385 57.8981 li
241.385 57.7781 li
241.445 57.7781 li
241.445 57.5981 li
241.565 57.5981 li
241.565 57.4181 li
241.625 57.4181 li
241.625 57.3581 li
241.685 57.3581 li
241.745 57.2981 li
241.745 57.2381 li
241.805 57.1781 li
241.805 57.1181 li
241.865 57.0581 li
241.865 56.9981 li
241.925 56.9981 li
241.925 56.9381 li
241.985 56.9381 li
241.985 56.8181 li
242.045 56.8181 li
242.105 56.7581 li
242.105 56.6981 li
242.165 56.6381 li
242.165 56.5781 li
242.225 56.5781 li
242.225 56.4581 li
242.285 56.4581 li
242.285 56.3981 li
242.345 56.3981 li
242.345 56.2781 li
242.405 56.2781 li
242.465 56.2181 li
242.465 56.1581 li
242.525 56.0981 li
242.525 56.0381 li
242.585 56.0381 li
242.585 55.9181 li
242.645 55.9181 li
242.645 55.8581 li
242.705 55.8581 li
242.705 55.7381 li
242.765 55.7381 li
242.825 55.6781 li
242.825 55.5581 li
242.885 55.5581 li
242.885 55.4381 li
242.945 55.4381 li
243.005 55.3781 li
243.005 55.3181 li
243.065 55.3181 li
243.065 55.1981 li
243.125 55.1981 li
243.125 55.1381 li
243.185 55.1381 li
243.185 55.0181 li
243.245 55.0181 li
243.245 54.8981 li
243.305 54.8981 li
243.365 54.8381 li
243.365 54.7781 li
243.425 54.7781 li
243.425 54.6581 li
243.485 54.6581 li
243.485 54.5981 li
243.545 54.5981 li
243.545 54.4781 li
243.605 54.4781 li
243.605 54.3581 li
243.665 54.3581 li
243.725 54.2981 li
243.725 54.2381 li
243.785 54.2381 li
243.785 54.1181 li
243.845 54.1181 li
243.845 54.0581 li
243.905 54.0581 li
243.905 53.9381 li
243.965 53.9381 li
243.965 53.8181 li
244.025 53.8181 li
237.785 53.7581 li
237.785 53.8181 li
237.365 53.8781 li
237.185 53.8781 li
237.065 53.9381 li
237.005 53.9381 li
237.005 54.0581 li
236.945 54.0581 li
236.945 54.1181 li
236.885 54.1181 li
236.885 54.2981 li
236.825 54.2981 li
236.825 54.5381 li
236.765 54.5381 li
236.765 54.6581 li
236.705 54.6581 li
236.705 54.9581 li
236.645 54.9581 li
236.645 55.3781 li
236.585 55.3781 li
236.585 55.5581 li
236.525 55.5581 li
236.525 55.9181 li
236.465 55.9781 li
236.105 55.9781 li
236.105 55.7381 li
236.165 55.7381 li
236.165 55.2581 li
236.225 55.2581 li
236.225 55.0181 li
236.285 55.0181 li
236.285 54.5981 li
236.345 54.5981 li
236.345 54.1181 li
236.405 54.1181 li
236.405 53.8781 li
236.465 53.8781 li
236.465 53.3981 li
236.525 53.3981 li
236.525 52.9781 li
236.585 52.9781 li
236.585 52.6781 li
236.645 52.6781 li
236.645 52.2581 li
236.705 52.2581 li
236.705 51.7781 li
237.185 51.7781 li
237.185 51.9581 li
237.245 52.0781 li
237.365 52.1981 li
237.605 52.3181 li
237.965 52.4381 li
238.205 52.4381 li
238.625 52.4981 li
245.105 52.4981 li
245.105 53.0381 li
245.045 53.0381 li
245.045 53.1581 li
244.985 53.1581 li
244.985 53.2181 li
244.925 53.2781 li
244.865 53.2781 li
244.865 53.3981 li
244.805 53.3981 li
244.805 53.5181 li
244.745 53.5181 li
244.745 53.5781 li
244.685 53.5781 li
244.685 53.6981 li
244.625 53.6981 li
244.625 53.7581 li
244.565 53.8181 li
244.505 53.8181 li
244.505 53.9381 li
244.445 53.9381 li
244.445 54.0581 li
244.385 54.0581 li
244.385 54.1181 li
244.325 54.1181 li
244.325 54.2381 li
244.265 54.2381 li
244.265 54.2981 li
244.205 54.3581 li
244.145 54.3581 li
244.145 54.4781 li
244.085 54.4781 li
244.085 54.5981 li
244.025 54.5981 li
244.025 54.6581 li
243.965 54.6581 li
243.965 54.7781 li
243.905 54.7781 li
243.905 54.8381 li
243.845 54.8981 li
243.785 54.8981 li
243.785 55.0181 li
243.725 55.0181 li
243.725 55.1381 li
243.665 55.1381 li
243.665 55.1981 li
243.605 55.1981 li
243.605 55.3181 li
243.545 55.3181 li
243.545 55.3781 li
243.485 55.4381 li
243.425 55.4381 li
243.425 55.5581 li
243.365 55.5581 li
243.365 55.6781 li
243.305 55.6781 li
243.305 55.7381 li
243.245 55.7381 li
243.245 55.8581 li
243.185 55.8581 li
243.185 55.9181 li
243.125 55.9781 li
243.065 55.9781 li
243.065 56.0981 li
243.005 56.0981 li
243.005 56.2181 li
242.945 56.2181 li
242.945 56.2781 li
242.885 56.2781 li
242.885 56.3981 li
242.825 56.3981 li
242.825 56.4581 li
242.765 56.5181 li
242.705 56.5181 li
242.705 56.6381 li
242.645 56.6381 li
242.645 56.7581 li
242.585 56.7581 li
242.585 56.8181 li
242.525 56.8181 li
242.525 56.9381 li
242.465 56.9381 li
242.465 56.9981 li
242.405 57.0581 li
242.345 57.0581 li
242.345 57.1781 li
242.285 57.1781 li
242.285 57.2381 li
242.225 57.2381 li
242.225 57.3581 li
242.165 57.3581 li
242.165 57.4181 li
242.105 57.5381 li
242.045 57.5381 li
242.045 57.5981 li
241.985 57.5981 li
241.985 57.7181 li
241.925 57.7781 li
241.925 57.8381 li
241.865 57.8381 li
241.865 57.8981 li
241.805 57.9581 li
241.805 58.0181 li
241.745 58.0181 li
241.745 58.1381 li
241.685 58.1381 li
241.685 58.1981 li
241.625 58.1981 li
241.625 58.3781 li
241.565 58.3781 li
241.565 58.4981 li
241.505 58.4981 li
241.505 58.6181 li
241.445 58.6181 li
241.445 58.7381 li
241.385 58.7381 li
241.385 58.9181 li
241.325 58.9181 li
241.325 59.0381 li
241.265 59.0381 li
241.265 59.2181 li
241.205 59.2181 li
241.205 59.3981 li
241.145 59.3981 li
241.145 59.5181 li
241.085 59.5181 li
241.085 59.7581 li
241.025 59.7581 li
241.025 60.0581 li
240.965 60.0581 li
240.965 60.1181 li
240.905 60.1181 li
240.905 60.4181 li
240.845 60.4181 li
240.845 60.7781 li
240.785 60.7781 li
240.785 60.9581 li
240.725 60.9581 li
240.725 61.3181 li
240.665 61.3181 li
240.665 61.7981 li
240.605 61.7981 li
240.605 62.0981 li
240.545 62.0981 li
240.545 62.6981 li
240.485 62.6981 li
240.485 63.7181 li
240.425 63.7181 li
240.425 66.5981 li
240.365 66.5981 li
240.365 66.7181 li
240.305 66.7181 li
240.305 66.8381 li
240.245 66.8381 li
240.245 66.9581 li
240.125 67.0781 li
239.885 67.1981 li
ef
290.225 68.5781 mo
290.105 68.5181 li
289.864 68.4071 289.659 68.5111 289.385 68.2781 cv
289.265 68.2781 li
289.265 68.2181 li
288.905 68.0381 li
288.845 67.9781 li
288.785 67.9181 li
288.485 67.6781 li
288.485 67.5581 li
288.425 67.4981 li
288.365 67.4381 li
288.305 67.3781 li
288.245 67.2581 li
288.245 67.1381 li
288.185 67.0781 li
288.125 66.9581 li
288.125 66.7781 li
288.065 66.4781 li
288.125 66.4781 li
288.125 65.9981 li
288.185 65.9981 li
288.185 65.8781 li
288.245 65.8781 li
288.245 65.6981 li
288.305 65.6981 li
288.305 65.5781 li
288.365 65.5781 li
288.365 65.5181 li
288.425 65.5181 li
288.425 65.3981 li
288.485 65.3981 li
288.901 64.8171 289.836 64.5151 290.405 65.0381 cv
290.465 65.0381 li
290.465 65.0981 li
290.645 65.2781 li
290.705 65.5181 li
290.705 66.1781 li
290.645 66.1781 li
290.645 66.3581 li
290.585 66.3581 li
290.585 66.4781 li
290.525 66.4781 li
290.525 66.5981 li
290.465 66.5981 li
290.465 66.6581 li
290.405 66.7181 li
290.345 66.7181 li
290.345 66.7781 li
289.89 67.2641 289.935 67.0491 289.445 67.3181 cv
289.085 67.3181 li
289.205 67.3781 li
289.325 67.4981 li
289.583 67.6861 289.572 67.6601 289.865 67.7981 cv
289.985 67.8581 li
290.105 67.8581 li
290.285 67.9181 li
291.005 67.9181 li
291.185 67.8581 li
291.245 67.8581 li
291.485 67.7381 li
291.545 67.6781 li
291.605 67.6781 li
291.965 67.3181 li
291.965 67.1981 li
292.085 67.1381 li
292.085 67.0781 li
292.145 67.0181 li
292.145 66.8981 li
292.205 66.8981 li
292.205 66.8381 li
292.265 66.8381 li
292.265 66.7181 li
292.325 66.7181 li
292.325 66.5381 li
292.385 66.5381 li
292.385 66.4781 li
292.445 66.4781 li
292.445 66.2981 li
292.505 66.2981 li
292.505 66.0581 li
292.565 66.0581 li
292.565 65.9381 li
292.625 65.9381 li
292.625 65.7581 li
292.685 65.7581 li
292.685 65.5181 li
292.745 65.5181 li
292.745 65.2781 li
292.805 65.2781 li
292.805 65.1581 li
292.865 65.1581 li
292.865 64.8581 li
292.925 64.8581 li
292.925 64.5581 li
292.985 64.5581 li
292.985 64.3781 li
293.045 64.3781 li
293.045 64.0781 li
293.105 64.0781 li
293.105 63.7181 li
293.165 63.7181 li
293.165 63.5381 li
293.225 63.5381 li
293.225 63.1781 li
293.285 63.1781 li
293.285 62.8181 li
293.345 62.8181 li
293.345 62.6381 li
293.405 62.6381 li
293.405 62.2781 li
293.465 62.2781 li
293.465 61.9781 li
293.525 61.9781 li
293.525 61.7981 li
293.585 61.7981 li
293.585 61.4381 li
293.645 61.4381 li
293.645 61.0781 li
293.705 61.0781 li
293.705 60.8981 li
293.765 60.8981 li
293.765 60.5381 li
293.825 60.5381 li
293.825 60.1781 li
293.885 60.1781 li
293.885 59.9981 li
293.945 59.9981 li
293.945 59.5781 li
294.005 59.5781 li
294.005 59.2181 li
294.065 59.2181 li
294.065 59.0381 li
294.125 59.0381 li
294.125 58.6781 li
294.185 58.6781 li
294.185 58.3181 li
294.245 58.3181 li
294.245 58.1381 li
294.305 58.1381 li
294.305 57.7781 li
294.365 57.7781 li
294.365 57.3581 li
294.425 57.3581 li
294.425 57.1781 li
294.485 57.1781 li
294.485 56.8181 li
294.545 56.8181 li
294.545 56.4581 li
294.605 56.4581 li
294.605 56.2781 li
294.665 56.2781 li
294.665 55.8581 li
294.725 55.8581 li
294.725 55.4981 li
294.785 55.4981 li
294.785 55.3181 li
294.845 55.3181 li
294.845 54.9581 li
294.905 54.9581 li
294.905 54.5381 li
294.965 54.5381 li
294.965 54.3581 li
295.025 54.3581 li
295.025 53.9381 li
295.085 53.9381 li
295.085 53.5781 li
295.145 53.5781 li
295.145 53.3981 li
295.205 53.3981 li
295.205 52.9781 li
295.265 52.9781 li
295.265 52.6181 li
295.325 52.6181 li
295.325 52.4381 li
295.385 52.4381 li
295.385 52.0781 li
295.445 52.0781 li
295.445 51.6581 li
295.505 51.6581 li
295.505 51.4181 li
295.565 51.4181 li
295.565 51.0581 li
295.625 51.0581 li
295.625 50.6981 li
295.685 50.6981 li
295.685 50.4581 li
295.745 50.4581 li
295.745 50.0981 li
295.805 50.0981 li
295.805 49.6781 li
295.865 49.6781 li
295.865 49.4981 li
295.925 49.4981 li
295.925 49.3181 li
293.285 49.3181 li
293.105 49.1381 li
293.045 48.9581 li
293.105 48.9581 li
293.105 48.5981 li
293.165 48.5981 li
293.165 48.5381 li
293.225 48.5381 li
293.285 48.4781 li
293.465 48.4181 li
296.105 48.4181 li
296.165 48.3581 li
296.165 47.9381 li
296.225 47.9381 li
296.225 47.7581 li
296.285 47.7581 li
296.285 47.3381 li
296.345 47.3381 li
296.345 46.9781 li
296.405 46.9781 li
296.405 46.7381 li
296.465 46.7381 li
296.465 46.3781 li
296.525 46.3781 li
296.525 45.9581 li
296.585 45.9581 li
296.585 45.5981 li
296.645 45.5981 li
296.645 45.4181 li
296.705 45.4181 li
296.705 45.0581 li
296.765 45.0581 li
296.765 44.7581 li
296.825 44.7581 li
296.825 44.6381 li
296.885 44.6381 li
296.885 44.2781 li
296.945 44.2781 li
296.945 43.9781 li
297.005 43.9781 li
297.005 43.9182 li
297.065 43.9182 li
297.065 43.6181 li
297.125 43.6181 li
297.125 43.3781 li
297.185 43.3781 li
297.185 43.2581 li
297.245 43.2581 li
297.245 43.0181 li
297.305 43.0181 li
297.305 42.8381 li
297.365 42.8381 li
297.365 42.7181 li
297.425 42.7181 li
297.425 42.5381 li
297.485 42.5381 li
297.485 42.4182 li
297.545 42.4182 li
297.545 42.2981 li
297.605 42.2981 li
297.605 42.1781 li
297.665 42.1781 li
297.665 42.0581 li
297.725 42.0581 li
297.725 41.9381 li
297.785 41.9381 li
297.785 41.8181 li
297.845 41.8181 li
297.845 41.6981 li
297.905 41.6981 li
297.905 41.6381 li
297.965 41.6381 li
297.965 41.5181 li
298.025 41.5181 li
298.025 41.3981 li
298.085 41.3981 li
298.205 41.3381 li
298.205 41.2181 li
298.325 41.1581 li
298.325 41.0981 li
298.745 40.6781 li
298.805 40.6781 li
299.045 40.4381 li
299.105 40.4381 li
299.225 40.3181 li
299.285 40.3181 li
299.405 40.2581 li
299.465 40.1981 li
300.065 39.8981 li
300.365 39.8381 li
300.425 39.7781 li
300.665 39.7781 li
301.625 39.7181 li
301.625 39.7781 li
302.165 39.8981 li
302.372 39.9241 302.819 40.1671 303.005 40.2581 cv
303.125 40.4381 li
303.245 40.4381 li
303.305 40.5581 li
303.696 40.9591 303.871 41.5581 303.785 42.1181 cv
303.785 42.2981 li
303.725 42.2981 li
303.725 42.4182 li
303.665 42.4182 li
303.665 42.5381 li
303.605 42.5381 li
303.605 42.7181 li
303.485 42.7181 li
303.485 42.8981 li
303.185 43.1981 li
303.125 43.1981 li
303.065 43.2581 li
303.005 43.2581 li
302.945 43.3181 li
302.765 43.4381 li
302.645 43.4381 li
302.525 43.4981 li
301.925 43.4981 li
301.685 43.3781 li
301.625 43.3781 li
301.325 43.0781 li
301.205 42.8981 li
301.145 42.7181 li
301.145 42.1781 li
301.205 42.1781 li
301.205 42.0581 li
301.265 42.0581 li
301.265 41.8781 li
301.325 41.8781 li
301.325 41.7581 li
301.385 41.7581 li
301.385 41.6981 li
301.445 41.6981 li
301.445 41.5781 li
301.726 41.2951 302.169 40.9661 302.585 40.9781 cv
302.765 40.9182 li
302.705 40.8582 li
302.585 40.7981 li
302.525 40.7381 li
302.465 40.6781 li
302.405 40.6781 li
302.045 40.4981 li
301.925 40.4981 li
301.805 40.4381 li
301.685 40.4381 li
301.445 40.3781 li
300.785 40.3181 li
300.785 40.3781 li
300.605 40.4381 li
300.305 40.6181 li
300.185 40.6781 li
300.125 40.7981 li
300.005 40.7981 li
300.005 40.8582 li
299.825 41.0381 li
299.765 41.0381 li
299.765 41.1581 li
299.705 41.1581 li
299.705 41.2181 li
299.645 41.2181 li
299.645 41.3981 li
299.585 41.3981 li
299.585 41.5181 li
299.525 41.5181 li
299.525 41.5781 li
299.465 41.5781 li
299.465 41.8181 li
299.405 41.8181 li
299.405 42.1181 li
299.345 42.1181 li
299.345 42.2981 li
299.285 42.2981 li
299.285 42.5981 li
299.225 42.5981 li
299.225 42.8981 li
299.165 42.8981 li
299.165 43.0781 li
299.105 43.0781 li
299.105 43.4381 li
299.045 43.4381 li
299.045 43.7981 li
298.985 43.7981 li
298.985 43.9781 li
298.925 43.9781 li
298.925 44.3381 li
298.865 44.3381 li
298.865 44.6981 li
298.805 44.6981 li
298.805 44.8781 li
298.745 44.8781 li
298.745 45.2381 li
298.685 45.2381 li
298.685 45.5981 li
298.625 45.5981 li
298.625 45.7781 li
298.565 45.7781 li
298.565 46.1981 li
298.505 46.1981 li
298.505 46.6181 li
298.445 46.6181 li
298.445 46.7981 li
298.385 46.7981 li
298.385 47.1581 li
298.325 47.1581 li
298.325 47.5781 li
298.265 47.5781 li
298.265 47.7581 li
298.205 47.7581 li
298.205 48.1781 li
298.145 48.1781 li
298.145 48.4181 li
301.265 48.4181 li
301.445 48.4781 li
301.445 48.5981 li
301.505 49.0181 li
301.445 49.0181 li
301.445 49.1381 li
301.325 49.1981 li
301.265 49.2581 li
301.145 49.3181 li
297.905 49.3181 li
297.905 49.5581 li
297.845 49.5581 li
297.845 49.9181 li
297.785 49.9181 li
297.785 50.3381 li
297.725 50.3381 li
297.725 50.5181 li
297.665 50.5181 li
297.665 50.9381 li
297.605 50.9381 li
297.605 51.2981 li
297.545 51.2981 li
297.545 51.5381 li
297.485 51.5381 li
297.485 51.8981 li
297.425 51.8981 li
297.425 52.2581 li
297.365 52.2581 li
297.365 52.4981 li
297.305 52.4981 li
297.305 52.8581 li
297.245 52.8581 li
297.245 53.2181 li
297.185 53.2181 li
297.185 53.4581 li
297.125 53.4581 li
297.125 53.8181 li
297.065 53.8181 li
297.065 54.2381 li
297.005 54.2381 li
297.005 54.4181 li
296.945 54.4181 li
296.945 54.7781 li
296.885 54.7781 li
296.885 55.1381 li
296.825 55.1381 li
296.825 55.3181 li
296.765 55.3181 li
296.765 55.7381 li
296.705 55.7381 li
296.705 56.0981 li
296.645 56.0981 li
296.645 56.2781 li
296.585 56.2781 li
296.585 56.6381 li
296.525 56.6381 li
296.525 56.9981 li
296.465 56.9981 li
296.465 57.4181 li
296.405 57.4181 li
296.405 57.5981 li
296.345 57.5981 li
296.345 57.9581 li
296.285 57.9581 li
296.285 58.3181 li
296.225 58.3181 li
296.225 58.4981 li
296.165 58.4981 li
296.165 58.8581 li
296.105 58.8581 li
296.105 59.2181 li
296.045 59.2181 li
296.045 59.3981 li
295.985 59.3981 li
295.985 59.7581 li
295.925 59.7581 li
295.925 60.1181 li
295.865 60.1181 li
295.865 60.2981 li
295.805 60.2981 li
295.805 60.6581 li
295.745 60.6581 li
295.745 61.0181 li
295.685 61.0181 li
295.685 61.1381 li
295.625 61.1381 li
295.625 61.4981 li
295.565 61.4981 li
295.565 61.7981 li
295.505 61.7981 li
295.505 61.9181 li
295.445 61.9181 li
295.445 62.2181 li
295.385 62.2181 li
295.385 62.4581 li
295.325 62.4581 li
295.325 62.6381 li
295.265 62.6381 li
295.265 62.8781 li
295.205 62.8781 li
295.205 63.1181 li
295.145 63.1181 li
295.145 63.2381 li
295.085 63.2381 li
295.085 63.4781 li
295.025 63.4781 li
295.025 63.6581 li
294.965 63.6581 li
294.965 63.7781 li
294.905 63.7781 li
294.905 64.0181 li
294.845 64.0181 li
294.845 64.1981 li
294.785 64.1981 li
294.785 64.2581 li
294.725 64.2581 li
294.725 64.4381 li
294.665 64.4381 li
294.665 64.6181 li
294.605 64.6181 li
294.605 64.6781 li
294.545 64.6781 li
294.545 64.8581 li
294.485 64.8581 li
294.485 65.0381 li
294.425 65.0381 li
294.425 65.1581 li
294.365 65.1581 li
294.365 65.3381 li
294.305 65.3381 li
294.305 65.5181 li
294.245 65.5181 li
294.245 65.5781 li
294.185 65.5781 li
294.185 65.6981 li
294.125 65.6981 li
294.125 65.8181 li
294.065 65.8181 li
294.065 65.8781 li
294.005 65.8781 li
294.005 66.0581 li
293.945 66.0581 li
293.945 66.1781 li
293.885 66.2381 li
293.825 66.2381 li
293.825 66.3581 li
293.765 66.4181 li
293.765 66.4781 li
293.705 66.4781 li
293.705 66.5381 li
293.645 66.5981 li
293.645 66.6581 li
293.585 66.6581 li
293.585 66.7781 li
293.465 66.8381 li
293.465 66.8981 li
293.405 66.9581 li
293.405 67.0181 li
293.285 67.0781 li
293.285 67.1381 li
292.764 67.7531 292.126 68.3051 291.305 68.5181 cv
291.065 68.5781 li
ef
306.425 67.1981 mo
306.065 67.1381 li
305.885 67.1381 li
305.588 67.0181 305.259 67.0051 304.985 66.8381 cv
304.625 66.6581 li
304.445 66.5981 li
304.385 66.5381 li
304.325 66.4781 li
304.265 66.4781 li
304.205 66.4181 li
304.145 66.4181 li
304.145 66.3581 li
304.025 66.2981 li
303.845 66.2381 li
303.245 65.5781 li
303.245 65.5181 li
303.125 65.4581 li
303.125 65.3981 li
303.065 65.3381 li
303.065 65.2781 li
303.005 65.2181 li
302.945 65.0981 li
302.885 65.0381 li
302.885 64.9781 li
302.825 64.8581 li
302.705 64.6781 li
302.705 64.5581 li
302.645 64.4381 li
302.585 64.3181 li
302.525 63.9581 li
302.525 62.9981 li
302.585 62.9981 li
302.585 62.5781 li
302.645 62.5781 li
302.645 62.4581 li
302.705 62.4581 li
302.705 62.2181 li
302.765 62.2181 li
302.765 62.0981 li
302.825 62.0981 li
302.825 61.9781 li
302.885 61.9781 li
302.885 61.8581 li
302.945 61.8581 li
302.945 61.7381 li
303.005 61.7381 li
303.005 61.6781 li
303.065 61.6781 li
303.065 61.5581 li
303.125 61.5581 li
303.125 61.4381 li
303.185 61.4381 li
303.185 61.3781 li
303.245 61.3781 li
303.245 61.2581 li
303.305 61.2581 li
303.365 61.1981 li
303.365 61.1381 li
303.425 61.1381 li
303.725 60.7781 li
303.725 60.7181 li
303.785 60.7181 li
303.845 60.6581 li
304.025 60.4781 li
304.145 60.4181 li
304.265 60.2381 li
304.385 60.2381 li
304.385 60.1781 li
304.445 60.1181 li
304.505 60.1181 li
304.565 60.0581 li
304.625 59.9981 li
304.745 59.9381 li
304.805 59.8781 li
304.865 59.8781 li
304.985 59.7581 li
305.045 59.7581 li
305.285 59.6381 li
305.285 59.5781 li
305.825 59.3381 li
305.765 59.2181 li
305.705 59.2181 li
305.645 59.1581 li
305.585 59.1581 li
305.525 59.0381 li
305.465 59.0381 li
305.405 58.9781 li
305.345 58.9781 li
305.285 58.8581 li
305.165 58.8581 li
305.165 58.7981 li
305.105 58.7981 li
304.985 58.6781 li
304.925 58.6781 li
304.925 58.6181 li
304.805 58.6181 li
304.745 58.4981 li
304.685 58.4981 li
304.371 58.2071 304.098 58.0071 303.785 57.6581 cv
303.785 57.5981 li
303.665 57.5381 li
303.665 57.4181 li
303.605 57.4181 li
303.605 57.3581 li
303.144 56.7411 303.028 55.9421 303.125 55.1981 cv
303.125 54.9581 li
303.185 54.9581 li
303.185 54.8381 li
303.245 54.8381 li
303.245 54.5981 li
303.305 54.5981 li
303.305 54.4181 li
303.365 54.4181 li
303.365 54.2981 li
303.425 54.2981 li
303.425 54.2381 li
303.485 54.1781 li
303.485 54.0581 li
303.545 54.0581 li
303.605 53.9981 li
303.605 53.8781 li
303.665 53.8781 li
303.665 53.7581 li
303.725 53.7581 li
303.725 53.6981 li
303.785 53.6981 li
303.965 53.4581 li
303.965 53.3981 li
304.025 53.3981 li
304.607 52.7051 305.611 52.2761 306.485 52.1981 cv
307.325 52.1381 li
307.325 52.1981 li
307.685 52.2581 li
307.97 52.2821 308.417 52.4441 308.705 52.5581 cv
309.005 52.6781 li
309.005 52.7381 li
309.185 52.7981 li
309.185 52.8581 li
309.305 52.8581 li
309.305 52.9181 li
309.485 52.9781 li
309.845 53.3981 li
309.905 53.3981 li
309.965 53.5181 li
310.025 53.5181 li
310.025 53.5781 li
310.085 53.6381 li
310.085 53.6981 li
310.205 53.7581 li
310.205 53.8781 li
310.265 53.8781 li
310.265 53.9381 li
310.597 54.4101 310.685 55.1221 310.625 55.6781 cv
310.625 55.9781 li
310.565 55.9781 li
310.565 56.2181 li
310.505 56.2181 li
310.505 56.2781 li
310.445 56.2781 li
310.445 56.5181 li
310.385 56.5181 li
310.385 56.6381 li
310.325 56.6381 li
310.325 56.6981 li
310.265 56.6981 li
310.265 56.8181 li
310.205 56.8181 li
310.205 56.9381 li
310.145 56.9381 li
310.145 56.9981 li
310.085 57.0581 li
310.025 57.0581 li
310.025 57.1781 li
309.905 57.2381 li
309.905 57.3581 li
309.365 57.8981 li
309.305 57.8981 li
309.185 57.9581 li
309.065 58.0781 li
309.005 58.1381 li
308.945 58.1981 li
308.825 58.2581 li
308.765 58.3181 li
308.705 58.3181 li
308.585 58.4381 li
308.525 58.4381 li
308.465 58.4981 li
308.405 58.4981 li
308.225 58.6181 li
308.165 58.6781 li
307.805 58.8581 li
307.865 58.8581 li
307.985 58.9781 li
308.045 59.0381 li
308.165 59.0381 li
308.165 59.0981 li
308.285 59.2181 li
308.405 59.2181 li
308.405 59.2781 li
308.465 59.3381 li
308.585 59.3981 li
308.645 59.3981 li
308.645 59.4581 li
308.765 59.5181 li
308.825 59.5781 li
308.885 59.5781 li
308.945 59.6981 li
309.005 59.6981 li
309.065 59.7581 li
309.125 59.7581 li
309.245 59.8781 li
309.305 59.8781 li
309.365 59.9381 li
309.425 59.9981 li
309.545 60.1181 li
309.665 60.1181 li
309.785 60.2981 li
309.845 60.2981 li
310.385 60.8381 li
310.445 60.9581 li
310.505 61.0181 li
310.565 61.0781 li
310.565 61.1381 li
310.625 61.1981 li
310.685 61.3181 li
310.745 61.3181 li
310.985 61.8581 li
310.985 61.9181 li
311.045 62.0981 li
311.105 62.2181 li
311.165 62.4581 li
311.165 62.8181 li
311.225 63.7181 li
311.165 63.7181 li
311.165 64.0781 li
311.105 64.0781 li
311.105 64.3181 li
311.045 64.3181 li
311.045 64.4381 li
310.985 64.4381 li
310.985 64.6181 li
310.925 64.6181 li
310.925 64.7981 li
310.865 64.7981 li
310.865 64.8581 li
310.805 64.8581 li
310.805 64.9781 li
310.745 64.9781 li
310.745 65.1581 li
310.685 65.1581 li
310.685 65.2181 li
310.625 65.2181 li
310.625 65.3381 li
310.565 65.3381 li
310.565 65.3981 li
310.385 65.5781 li
310.325 65.5781 li
310.325 65.6981 li
309.845 66.1181 li
309.609 66.3901 309.618 66.2601 309.425 66.4781 cv
309.365 66.4781 li
309.305 66.5381 li
308.645 66.8381 li
308.585 66.8981 li
308.465 66.9581 li
308.165 67.0181 li
307.985 67.0781 li
307.865 67.1381 li
307.685 67.1381 li
307.445 67.1981 li
cp
306.485 66.6581 mo
305.885 66.5381 li
305.765 66.4781 li
305.465 66.4181 li
304.925 66.1181 li
304.865 66.1181 li
304.745 65.9981 li
304.625 65.9381 li
304.565 65.8781 li
304.505 65.8781 li
304.445 65.7581 li
304.385 65.7581 li
303.821 65.1491 303.533 64.7831 303.365 63.8981 cv
303.305 63.4781 li
303.365 63.4781 li
303.365 63.1181 li
303.425 63.1181 li
303.425 62.6381 li
303.485 62.6381 li
303.485 62.3981 li
303.545 62.3981 li
303.545 62.2781 li
303.605 62.2781 li
303.605 62.0981 li
303.665 62.0981 li
303.665 61.9181 li
303.725 61.9181 li
303.725 61.8581 li
303.785 61.8581 li
303.785 61.7381 li
303.845 61.7381 li
303.845 61.5581 li
303.905 61.5581 li
303.965 61.4981 li
303.965 61.4381 li
304.025 61.4381 li
304.025 61.3181 li
304.145 61.3181 li
304.145 61.1981 li
304.205 61.1981 li
304.205 61.1381 li
304.467 60.8491 304.688 60.5781 304.985 60.2981 cv
305.105 60.2981 li
305.165 60.1781 li
305.285 60.1181 li
305.345 60.0581 li
305.405 60.0581 li
305.465 59.9981 li
305.525 59.9381 li
305.585 59.9381 li
305.645 59.8781 li
306.185 59.5781 li
306.305 59.5781 li
306.508 59.8091 306.462 59.6471 306.665 59.8781 cv
306.725 59.8781 li
306.785 59.9381 li
306.845 59.9381 li
306.905 59.9981 li
306.965 60.0581 li
307.085 60.1181 li
307.205 60.2381 li
307.265 60.2381 li
307.325 60.2981 li
307.385 60.2981 li
307.588 60.5291 307.542 60.3671 307.745 60.5981 cv
307.805 60.5981 li
307.865 60.6581 li
307.985 60.7181 li
307.985 60.7781 li
308.045 60.7781 li
308.105 60.8381 li
308.165 60.8381 li
308.368 61.0691 308.322 60.9071 308.525 61.1381 cv
308.585 61.1381 li
308.645 61.1981 li
308.705 61.1981 li
308.825 61.3181 li
308.945 61.3781 li
309.125 61.5581 li
309.185 61.5581 li
309.305 61.6781 li
309.505 61.8781 309.705 62.0781 309.905 62.2781 cv
309.905 62.3381 li
310.025 62.4581 li
310.265 62.9381 li
310.265 63.1181 li
310.325 63.1781 li
310.385 63.4181 li
310.385 64.3181 li
310.325 64.3181 li
310.325 64.4381 li
310.265 64.4381 li
310.265 64.6181 li
310.205 64.6181 li
310.205 64.7981 li
310.145 64.7981 li
310.145 64.9181 li
310.085 64.9781 li
310.085 65.0381 li
310.025 65.0981 li
309.965 65.0981 li
309.965 65.1581 li
309.905 65.2181 li
309.905 65.2781 li
309.845 65.3381 li
309.845 65.3981 li
309.365 65.8781 li
309.305 65.8781 li
309.245 65.9381 li
309.185 65.9381 li
309.125 65.9981 li
308.593 66.4141 308.538 66.2031 308.225 66.4781 cv
307.325 66.6581 li
cp
307.445 58.5581 mo
307.325 58.4981 li
307.265 58.4381 li
307.205 58.4381 li
307.085 58.3181 li
307.025 58.3181 li
306.965 58.2581 li
306.905 58.2581 li
306.905 58.1981 li
306.785 58.1381 li
306.725 58.0781 li
306.665 58.0781 li
306.545 57.9581 li
306.485 57.9581 li
306.425 57.8981 li
306.365 57.8981 li
306.365 57.8381 li
306.245 57.7781 li
306.185 57.7181 li
306.125 57.7181 li
306.065 57.6581 li
306.005 57.5981 li
305.945 57.5981 li
305.885 57.5381 li
305.825 57.5381 li
305.825 57.4781 li
305.705 57.4181 li
305.645 57.3581 li
305.585 57.3581 li
305.465 57.2381 li
305.405 57.2381 li
305.345 57.1781 li
305.285 57.1781 li
305.285 57.1181 li
305.165 57.0581 li
305.105 56.9981 li
305.045 56.9981 li
304.925 56.9381 li
304.745 56.7581 li
304.625 56.6981 li
304.445 56.5181 li
304.445 56.4581 li
304.265 56.2781 li
304.265 56.2181 li
304.205 56.2181 li
304.205 56.0981 li
304.145 56.0981 li
303.965 55.7381 li
303.905 55.4981 li
303.845 55.3781 li
303.845 54.7781 li
303.905 54.7781 li
303.905 54.4781 li
303.965 54.4781 li
303.965 54.2981 li
304.025 54.2981 li
304.025 54.1181 li
304.085 54.1181 li
304.085 54.0581 li
304.145 54.0581 li
304.145 53.9981 li
304.205 53.9381 li
304.205 53.8781 li
304.265 53.8781 li
304.265 53.7581 li
304.325 53.7581 li
304.745 53.3381 li
304.805 53.3381 li
304.805 53.2781 li
304.985 53.2181 li
304.985 53.1581 li
305.105 53.1581 li
305.105 53.0981 li
305.285 53.0381 li
305.345 52.9781 li
305.773 52.8041 305.768 52.8401 306.185 52.7381 cv
306.365 52.6781 li
307.265 52.6781 li
307.763 52.8251 308.177 52.8161 308.585 53.1581 cv
308.645 53.2181 li
308.765 53.2181 li
308.825 53.3381 li
308.885 53.3381 li
309.185 53.6381 li
309.365 53.8781 li
309.485 53.9981 li
309.485 54.0581 li
309.545 54.1781 li
309.605 54.2381 li
309.665 54.3581 li
309.845 54.7781 li
309.845 55.0181 li
309.905 55.7381 li
309.845 55.7381 li
309.845 56.0981 li
309.785 56.0981 li
309.785 56.2181 li
309.725 56.2181 li
309.725 56.3981 li
309.665 56.3981 li
309.665 56.5781 li
309.605 56.5781 li
309.605 56.6381 li
309.545 56.6381 li
309.545 56.7581 li
309.485 56.8181 li
309.485 56.8781 li
309.425 56.9381 li
309.365 56.9381 li
309.365 56.9981 li
309.305 56.9981 li
309.305 57.0581 li
309.245 57.1781 li
309.185 57.1781 li
309.185 57.2381 li
309.065 57.3581 li
309.005 57.3581 li
309.005 57.4181 li
308.285 58.1381 li
308.225 58.1381 li
308.105 58.2581 li
308.045 58.2581 li
307.985 58.3181 li
307.865 58.3781 li
307.865 58.4381 li
307.565 58.5581 li
ef
290.225 68.5781 mo
290.105 68.5181 li
289.864 68.4071 289.659 68.5111 289.385 68.2781 cv
289.265 68.2781 li
289.265 68.2181 li
288.905 68.0381 li
288.845 67.9781 li
288.785 67.9181 li
288.485 67.6781 li
288.485 67.5581 li
288.425 67.4981 li
288.365 67.4381 li
288.305 67.3781 li
288.245 67.2581 li
288.245 67.1381 li
288.185 67.0781 li
288.125 66.9581 li
288.125 66.7781 li
288.065 66.4781 li
288.125 66.4781 li
288.125 65.9981 li
288.185 65.9981 li
288.185 65.8781 li
288.245 65.8781 li
288.245 65.6981 li
288.305 65.6981 li
288.305 65.5781 li
288.365 65.5781 li
288.365 65.5181 li
288.425 65.5181 li
288.425 65.3981 li
288.485 65.3981 li
288.901 64.8171 289.836 64.5151 290.405 65.0381 cv
290.465 65.0381 li
290.465 65.0981 li
290.645 65.2781 li
290.705 65.5181 li
290.705 66.1781 li
290.645 66.1781 li
290.645 66.3581 li
290.585 66.3581 li
290.585 66.4781 li
290.525 66.4781 li
290.525 66.5981 li
290.465 66.5981 li
290.465 66.6581 li
290.405 66.7181 li
290.345 66.7181 li
290.345 66.7781 li
289.89 67.2641 289.935 67.0491 289.445 67.3181 cv
289.085 67.3181 li
289.205 67.3781 li
289.325 67.4981 li
289.583 67.6861 289.572 67.6601 289.865 67.7981 cv
289.985 67.8581 li
290.105 67.8581 li
290.285 67.9181 li
291.005 67.9181 li
291.185 67.8581 li
291.245 67.8581 li
291.485 67.7381 li
291.545 67.6781 li
291.605 67.6781 li
291.965 67.3181 li
291.965 67.1981 li
292.085 67.1381 li
292.085 67.0781 li
292.145 67.0181 li
292.145 66.8981 li
292.205 66.8981 li
292.205 66.8381 li
292.265 66.8381 li
292.265 66.7181 li
292.325 66.7181 li
292.325 66.5381 li
292.385 66.5381 li
292.385 66.4781 li
292.445 66.4781 li
292.445 66.2981 li
292.505 66.2981 li
292.505 66.0581 li
292.565 66.0581 li
292.565 65.9381 li
292.625 65.9381 li
292.625 65.7581 li
292.685 65.7581 li
292.685 65.5181 li
292.745 65.5181 li
292.745 65.2781 li
292.805 65.2781 li
292.805 65.1581 li
292.865 65.1581 li
292.865 64.8581 li
292.925 64.8581 li
292.925 64.5581 li
292.985 64.5581 li
292.985 64.3781 li
293.045 64.3781 li
293.045 64.0781 li
293.105 64.0781 li
293.105 63.7181 li
293.165 63.7181 li
293.165 63.5381 li
293.225 63.5381 li
293.225 63.1781 li
293.285 63.1781 li
293.285 62.8181 li
293.345 62.8181 li
293.345 62.6381 li
293.405 62.6381 li
293.405 62.2781 li
293.465 62.2781 li
293.465 61.9781 li
293.525 61.9781 li
293.525 61.7981 li
293.585 61.7981 li
293.585 61.4381 li
293.645 61.4381 li
293.645 61.0781 li
293.705 61.0781 li
293.705 60.8981 li
293.765 60.8981 li
293.765 60.5381 li
293.825 60.5381 li
293.825 60.1781 li
293.885 60.1781 li
293.885 59.9981 li
293.945 59.9981 li
293.945 59.5781 li
294.005 59.5781 li
294.005 59.2181 li
294.065 59.2181 li
294.065 59.0381 li
294.125 59.0381 li
294.125 58.6781 li
294.185 58.6781 li
294.185 58.3181 li
294.245 58.3181 li
294.245 58.1381 li
294.305 58.1381 li
294.305 57.7781 li
294.365 57.7781 li
294.365 57.3581 li
294.425 57.3581 li
294.425 57.1781 li
294.485 57.1781 li
294.485 56.8181 li
294.545 56.8181 li
294.545 56.4581 li
294.605 56.4581 li
294.605 56.2781 li
294.665 56.2781 li
294.665 55.8581 li
294.725 55.8581 li
294.725 55.4981 li
294.785 55.4981 li
294.785 55.3181 li
294.845 55.3181 li
294.845 54.9581 li
294.905 54.9581 li
294.905 54.5381 li
294.965 54.5381 li
294.965 54.3581 li
295.025 54.3581 li
295.025 53.9381 li
295.085 53.9381 li
295.085 53.5781 li
295.145 53.5781 li
295.145 53.3981 li
295.205 53.3981 li
295.205 52.9781 li
295.265 52.9781 li
295.265 52.6181 li
295.325 52.6181 li
295.325 52.4381 li
295.385 52.4381 li
295.385 52.0781 li
295.445 52.0781 li
295.445 51.6581 li
295.505 51.6581 li
295.505 51.4181 li
295.565 51.4181 li
295.565 51.0581 li
295.625 51.0581 li
295.625 50.6981 li
295.685 50.6981 li
295.685 50.4581 li
295.745 50.4581 li
295.745 50.0981 li
295.805 50.0981 li
295.805 49.6781 li
295.865 49.6781 li
295.865 49.4981 li
295.925 49.4981 li
295.925 49.3181 li
293.285 49.3181 li
293.105 49.1381 li
293.045 48.9581 li
293.105 48.9581 li
293.105 48.5981 li
293.165 48.5981 li
293.165 48.5381 li
293.225 48.5381 li
293.285 48.4781 li
293.465 48.4181 li
296.105 48.4181 li
296.165 48.3581 li
296.165 47.9381 li
296.225 47.9381 li
296.225 47.7581 li
296.285 47.7581 li
296.285 47.3381 li
296.345 47.3381 li
296.345 46.9781 li
296.405 46.9781 li
296.405 46.7381 li
296.465 46.7381 li
296.465 46.3781 li
296.525 46.3781 li
296.525 45.9581 li
296.585 45.9581 li
296.585 45.5981 li
296.645 45.5981 li
296.645 45.4181 li
296.705 45.4181 li
296.705 45.0581 li
296.765 45.0581 li
296.765 44.7581 li
296.825 44.7581 li
296.825 44.6381 li
296.885 44.6381 li
296.885 44.2781 li
296.945 44.2781 li
296.945 43.9781 li
297.005 43.9781 li
297.005 43.9182 li
297.065 43.9182 li
297.065 43.6181 li
297.125 43.6181 li
297.125 43.3781 li
297.185 43.3781 li
297.185 43.2581 li
297.245 43.2581 li
297.245 43.0181 li
297.305 43.0181 li
297.305 42.8381 li
297.365 42.8381 li
297.365 42.7181 li
297.425 42.7181 li
297.425 42.5381 li
297.485 42.5381 li
297.485 42.4182 li
297.545 42.4182 li
297.545 42.2981 li
297.605 42.2981 li
297.605 42.1781 li
297.665 42.1781 li
297.665 42.0581 li
297.725 42.0581 li
297.725 41.9381 li
297.785 41.9381 li
297.785 41.8181 li
297.845 41.8181 li
297.845 41.6981 li
297.905 41.6981 li
297.905 41.6381 li
297.965 41.6381 li
297.965 41.5181 li
298.025 41.5181 li
298.025 41.3981 li
298.085 41.3981 li
298.205 41.3381 li
298.205 41.2181 li
298.325 41.1581 li
298.325 41.0981 li
298.745 40.6781 li
298.805 40.6781 li
299.045 40.4381 li
299.105 40.4381 li
299.225 40.3181 li
299.285 40.3181 li
299.405 40.2581 li
299.465 40.1981 li
300.065 39.8981 li
300.365 39.8381 li
300.425 39.7781 li
300.665 39.7781 li
301.625 39.7181 li
301.625 39.7781 li
302.165 39.8981 li
302.372 39.9241 302.819 40.1671 303.005 40.2581 cv
303.125 40.4381 li
303.245 40.4381 li
303.305 40.5581 li
303.696 40.9591 303.871 41.5581 303.785 42.1181 cv
303.785 42.2981 li
303.725 42.2981 li
303.725 42.4182 li
303.665 42.4182 li
303.665 42.5381 li
303.605 42.5381 li
303.605 42.7181 li
303.485 42.7181 li
303.485 42.8981 li
303.185 43.1981 li
303.125 43.1981 li
303.065 43.2581 li
303.005 43.2581 li
302.945 43.3181 li
302.765 43.4381 li
302.645 43.4381 li
302.525 43.4981 li
301.925 43.4981 li
301.685 43.3781 li
301.625 43.3781 li
301.325 43.0781 li
301.205 42.8981 li
301.145 42.7181 li
301.145 42.1781 li
301.205 42.1781 li
301.205 42.0581 li
301.265 42.0581 li
301.265 41.8781 li
301.325 41.8781 li
301.325 41.7581 li
301.385 41.7581 li
301.385 41.6981 li
301.445 41.6981 li
301.445 41.5781 li
301.726 41.2951 302.169 40.9661 302.585 40.9781 cv
302.765 40.9182 li
302.705 40.8582 li
302.585 40.7981 li
302.525 40.7381 li
302.465 40.6781 li
302.405 40.6781 li
302.045 40.4981 li
301.925 40.4981 li
301.805 40.4381 li
301.685 40.4381 li
301.445 40.3781 li
300.785 40.3181 li
300.785 40.3781 li
300.605 40.4381 li
300.305 40.6181 li
300.185 40.6781 li
300.125 40.7981 li
300.005 40.7981 li
300.005 40.8582 li
299.825 41.0381 li
299.765 41.0381 li
299.765 41.1581 li
299.705 41.1581 li
299.705 41.2181 li
299.645 41.2181 li
299.645 41.3981 li
299.585 41.3981 li
299.585 41.5181 li
299.525 41.5181 li
299.525 41.5781 li
299.465 41.5781 li
299.465 41.8181 li
299.405 41.8181 li
299.405 42.1181 li
299.345 42.1181 li
299.345 42.2981 li
299.285 42.2981 li
299.285 42.5981 li
299.225 42.5981 li
299.225 42.8981 li
299.165 42.8981 li
299.165 43.0781 li
299.105 43.0781 li
299.105 43.4381 li
299.045 43.4381 li
299.045 43.7981 li
298.985 43.7981 li
298.985 43.9781 li
298.925 43.9781 li
298.925 44.3381 li
298.865 44.3381 li
298.865 44.6981 li
298.805 44.6981 li
298.805 44.8781 li
298.745 44.8781 li
298.745 45.2381 li
298.685 45.2381 li
298.685 45.5981 li
298.625 45.5981 li
298.625 45.7781 li
298.565 45.7781 li
298.565 46.1981 li
298.505 46.1981 li
298.505 46.6181 li
298.445 46.6181 li
298.445 46.7981 li
298.385 46.7981 li
298.385 47.1581 li
298.325 47.1581 li
298.325 47.5781 li
298.265 47.5781 li
298.265 47.7581 li
298.205 47.7581 li
298.205 48.1781 li
298.145 48.1781 li
298.145 48.4181 li
301.265 48.4181 li
301.445 48.4781 li
301.445 48.5981 li
301.505 49.0181 li
301.445 49.0181 li
301.445 49.1381 li
301.325 49.1981 li
301.265 49.2581 li
301.145 49.3181 li
297.905 49.3181 li
297.905 49.5581 li
297.845 49.5581 li
297.845 49.9181 li
297.785 49.9181 li
297.785 50.3381 li
297.725 50.3381 li
297.725 50.5181 li
297.665 50.5181 li
297.665 50.9381 li
297.605 50.9381 li
297.605 51.2981 li
297.545 51.2981 li
297.545 51.5381 li
297.485 51.5381 li
297.485 51.8981 li
297.425 51.8981 li
297.425 52.2581 li
297.365 52.2581 li
297.365 52.4981 li
297.305 52.4981 li
297.305 52.8581 li
297.245 52.8581 li
297.245 53.2181 li
297.185 53.2181 li
297.185 53.4581 li
297.125 53.4581 li
297.125 53.8181 li
297.065 53.8181 li
297.065 54.2381 li
297.005 54.2381 li
297.005 54.4181 li
296.945 54.4181 li
296.945 54.7781 li
296.885 54.7781 li
296.885 55.1381 li
296.825 55.1381 li
296.825 55.3181 li
296.765 55.3181 li
296.765 55.7381 li
296.705 55.7381 li
296.705 56.0981 li
296.645 56.0981 li
296.645 56.2781 li
296.585 56.2781 li
296.585 56.6381 li
296.525 56.6381 li
296.525 56.9981 li
296.465 56.9981 li
296.465 57.4181 li
296.405 57.4181 li
296.405 57.5981 li
296.345 57.5981 li
296.345 57.9581 li
296.285 57.9581 li
296.285 58.3181 li
296.225 58.3181 li
296.225 58.4981 li
296.165 58.4981 li
296.165 58.8581 li
296.105 58.8581 li
296.105 59.2181 li
296.045 59.2181 li
296.045 59.3981 li
295.985 59.3981 li
295.985 59.7581 li
295.925 59.7581 li
295.925 60.1181 li
295.865 60.1181 li
295.865 60.2981 li
295.805 60.2981 li
295.805 60.6581 li
295.745 60.6581 li
295.745 61.0181 li
295.685 61.0181 li
295.685 61.1381 li
295.625 61.1381 li
295.625 61.4981 li
295.565 61.4981 li
295.565 61.7981 li
295.505 61.7981 li
295.505 61.9181 li
295.445 61.9181 li
295.445 62.2181 li
295.385 62.2181 li
295.385 62.4581 li
295.325 62.4581 li
295.325 62.6381 li
295.265 62.6381 li
295.265 62.8781 li
295.205 62.8781 li
295.205 63.1181 li
295.145 63.1181 li
295.145 63.2381 li
295.085 63.2381 li
295.085 63.4781 li
295.025 63.4781 li
295.025 63.6581 li
294.965 63.6581 li
294.965 63.7781 li
294.905 63.7781 li
294.905 64.0181 li
294.845 64.0181 li
294.845 64.1981 li
294.785 64.1981 li
294.785 64.2581 li
294.725 64.2581 li
294.725 64.4381 li
294.665 64.4381 li
294.665 64.6181 li
294.605 64.6181 li
294.605 64.6781 li
294.545 64.6781 li
294.545 64.8581 li
294.485 64.8581 li
294.485 65.0381 li
294.425 65.0381 li
294.425 65.1581 li
294.365 65.1581 li
294.365 65.3381 li
294.305 65.3381 li
294.305 65.5181 li
294.245 65.5181 li
294.245 65.5781 li
294.185 65.5781 li
294.185 65.6981 li
294.125 65.6981 li
294.125 65.8181 li
294.065 65.8181 li
294.065 65.8781 li
294.005 65.8781 li
294.005 66.0581 li
293.945 66.0581 li
293.945 66.1781 li
293.885 66.2381 li
293.825 66.2381 li
293.825 66.3581 li
293.765 66.4181 li
293.765 66.4781 li
293.705 66.4781 li
293.705 66.5381 li
293.645 66.5981 li
293.645 66.6581 li
293.585 66.6581 li
293.585 66.7781 li
293.465 66.8381 li
293.465 66.8981 li
293.405 66.9581 li
293.405 67.0181 li
293.285 67.0781 li
293.285 67.1381 li
292.764 67.7531 292.126 68.3051 291.305 68.5181 cv
291.065 68.5781 li
ef
306.425 67.1981 mo
306.065 67.1381 li
305.885 67.1381 li
305.588 67.0181 305.259 67.0051 304.985 66.8381 cv
304.625 66.6581 li
304.445 66.5981 li
304.385 66.5381 li
304.325 66.4781 li
304.265 66.4781 li
304.205 66.4181 li
304.145 66.4181 li
304.145 66.3581 li
304.025 66.2981 li
303.845 66.2381 li
303.245 65.5781 li
303.245 65.5181 li
303.125 65.4581 li
303.125 65.3981 li
303.065 65.3381 li
303.065 65.2781 li
303.005 65.2181 li
302.945 65.0981 li
302.885 65.0381 li
302.885 64.9781 li
302.825 64.8581 li
302.705 64.6781 li
302.705 64.5581 li
302.645 64.4381 li
302.585 64.3181 li
302.525 63.9581 li
302.525 62.9981 li
302.585 62.9981 li
302.585 62.5781 li
302.645 62.5781 li
302.645 62.4581 li
302.705 62.4581 li
302.705 62.2181 li
302.765 62.2181 li
302.765 62.0981 li
302.825 62.0981 li
302.825 61.9781 li
302.885 61.9781 li
302.885 61.8581 li
302.945 61.8581 li
302.945 61.7381 li
303.005 61.7381 li
303.005 61.6781 li
303.065 61.6781 li
303.065 61.5581 li
303.125 61.5581 li
303.125 61.4381 li
303.185 61.4381 li
303.185 61.3781 li
303.245 61.3781 li
303.245 61.2581 li
303.305 61.2581 li
303.365 61.1981 li
303.365 61.1381 li
303.425 61.1381 li
303.725 60.7781 li
303.725 60.7181 li
303.785 60.7181 li
303.845 60.6581 li
304.025 60.4781 li
304.145 60.4181 li
304.265 60.2381 li
304.385 60.2381 li
304.385 60.1781 li
304.445 60.1181 li
304.505 60.1181 li
304.565 60.0581 li
304.625 59.9981 li
304.745 59.9381 li
304.805 59.8781 li
304.865 59.8781 li
304.985 59.7581 li
305.045 59.7581 li
305.285 59.6381 li
305.285 59.5781 li
305.825 59.3381 li
305.765 59.2181 li
305.705 59.2181 li
305.645 59.1581 li
305.585 59.1581 li
305.525 59.0381 li
305.465 59.0381 li
305.405 58.9781 li
305.345 58.9781 li
305.285 58.8581 li
305.165 58.8581 li
305.165 58.7981 li
305.105 58.7981 li
304.985 58.6781 li
304.925 58.6781 li
304.925 58.6181 li
304.805 58.6181 li
304.745 58.4981 li
304.685 58.4981 li
304.371 58.2071 304.098 58.0071 303.785 57.6581 cv
303.785 57.5981 li
303.665 57.5381 li
303.665 57.4181 li
303.605 57.4181 li
303.605 57.3581 li
303.144 56.7411 303.028 55.9421 303.125 55.1981 cv
303.125 54.9581 li
303.185 54.9581 li
303.185 54.8381 li
303.245 54.8381 li
303.245 54.5981 li
303.305 54.5981 li
303.305 54.4181 li
303.365 54.4181 li
303.365 54.2981 li
303.425 54.2981 li
303.425 54.2381 li
303.485 54.1781 li
303.485 54.0581 li
303.545 54.0581 li
303.605 53.9981 li
303.605 53.8781 li
303.665 53.8781 li
303.665 53.7581 li
303.725 53.7581 li
303.725 53.6981 li
303.785 53.6981 li
303.965 53.4581 li
303.965 53.3981 li
304.025 53.3981 li
304.607 52.7051 305.611 52.2761 306.485 52.1981 cv
307.325 52.1381 li
307.325 52.1981 li
307.685 52.2581 li
307.97 52.2821 308.417 52.4441 308.705 52.5581 cv
309.005 52.6781 li
309.005 52.7381 li
309.185 52.7981 li
309.185 52.8581 li
309.305 52.8581 li
309.305 52.9181 li
309.485 52.9781 li
309.845 53.3981 li
309.905 53.3981 li
309.965 53.5181 li
310.025 53.5181 li
310.025 53.5781 li
310.085 53.6381 li
310.085 53.6981 li
310.205 53.7581 li
310.205 53.8781 li
310.265 53.8781 li
310.265 53.9381 li
310.597 54.4101 310.685 55.1221 310.625 55.6781 cv
310.625 55.9781 li
310.565 55.9781 li
310.565 56.2181 li
310.505 56.2181 li
310.505 56.2781 li
310.445 56.2781 li
310.445 56.5181 li
310.385 56.5181 li
310.385 56.6381 li
310.325 56.6381 li
310.325 56.6981 li
310.265 56.6981 li
310.265 56.8181 li
310.205 56.8181 li
310.205 56.9381 li
310.145 56.9381 li
310.145 56.9981 li
310.085 57.0581 li
310.025 57.0581 li
310.025 57.1781 li
309.905 57.2381 li
309.905 57.3581 li
309.365 57.8981 li
309.305 57.8981 li
309.185 57.9581 li
309.065 58.0781 li
309.005 58.1381 li
308.945 58.1981 li
308.825 58.2581 li
308.765 58.3181 li
308.705 58.3181 li
308.585 58.4381 li
308.525 58.4381 li
308.465 58.4981 li
308.405 58.4981 li
308.225 58.6181 li
308.165 58.6781 li
307.805 58.8581 li
307.865 58.8581 li
307.985 58.9781 li
308.045 59.0381 li
308.165 59.0381 li
308.165 59.0981 li
308.285 59.2181 li
308.405 59.2181 li
308.405 59.2781 li
308.465 59.3381 li
308.585 59.3981 li
308.645 59.3981 li
308.645 59.4581 li
308.765 59.5181 li
308.825 59.5781 li
308.885 59.5781 li
308.945 59.6981 li
309.005 59.6981 li
309.065 59.7581 li
309.125 59.7581 li
309.245 59.8781 li
309.305 59.8781 li
309.365 59.9381 li
309.425 59.9981 li
309.545 60.1181 li
309.665 60.1181 li
309.785 60.2981 li
309.845 60.2981 li
310.385 60.8381 li
310.445 60.9581 li
310.505 61.0181 li
310.565 61.0781 li
310.565 61.1381 li
310.625 61.1981 li
310.685 61.3181 li
310.745 61.3181 li
310.985 61.8581 li
310.985 61.9181 li
311.045 62.0981 li
311.105 62.2181 li
311.165 62.4581 li
311.165 62.8181 li
311.225 63.7181 li
311.165 63.7181 li
311.165 64.0781 li
311.105 64.0781 li
311.105 64.3181 li
311.045 64.3181 li
311.045 64.4381 li
310.985 64.4381 li
310.985 64.6181 li
310.925 64.6181 li
310.925 64.7981 li
310.865 64.7981 li
310.865 64.8581 li
310.805 64.8581 li
310.805 64.9781 li
310.745 64.9781 li
310.745 65.1581 li
310.685 65.1581 li
310.685 65.2181 li
310.625 65.2181 li
310.625 65.3381 li
310.565 65.3381 li
310.565 65.3981 li
310.385 65.5781 li
310.325 65.5781 li
310.325 65.6981 li
309.845 66.1181 li
309.609 66.3901 309.618 66.2601 309.425 66.4781 cv
309.365 66.4781 li
309.305 66.5381 li
308.645 66.8381 li
308.585 66.8981 li
308.465 66.9581 li
308.165 67.0181 li
307.985 67.0781 li
307.865 67.1381 li
307.685 67.1381 li
307.445 67.1981 li
cp
306.485 66.6581 mo
305.885 66.5381 li
305.765 66.4781 li
305.465 66.4181 li
304.925 66.1181 li
304.865 66.1181 li
304.745 65.9981 li
304.625 65.9381 li
304.565 65.8781 li
304.505 65.8781 li
304.445 65.7581 li
304.385 65.7581 li
303.821 65.1491 303.533 64.7831 303.365 63.8981 cv
303.305 63.4781 li
303.365 63.4781 li
303.365 63.1181 li
303.425 63.1181 li
303.425 62.6381 li
303.485 62.6381 li
303.485 62.3981 li
303.545 62.3981 li
303.545 62.2781 li
303.605 62.2781 li
303.605 62.0981 li
303.665 62.0981 li
303.665 61.9181 li
303.725 61.9181 li
303.725 61.8581 li
303.785 61.8581 li
303.785 61.7381 li
303.845 61.7381 li
303.845 61.5581 li
303.905 61.5581 li
303.965 61.4981 li
303.965 61.4381 li
304.025 61.4381 li
304.025 61.3181 li
304.145 61.3181 li
304.145 61.1981 li
304.205 61.1981 li
304.205 61.1381 li
304.467 60.8491 304.688 60.5781 304.985 60.2981 cv
305.105 60.2981 li
305.165 60.1781 li
305.285 60.1181 li
305.345 60.0581 li
305.405 60.0581 li
305.465 59.9981 li
305.525 59.9381 li
305.585 59.9381 li
305.645 59.8781 li
306.185 59.5781 li
306.305 59.5781 li
306.508 59.8091 306.462 59.6471 306.665 59.8781 cv
306.725 59.8781 li
306.785 59.9381 li
306.845 59.9381 li
306.905 59.9981 li
306.965 60.0581 li
307.085 60.1181 li
307.205 60.2381 li
307.265 60.2381 li
307.325 60.2981 li
307.385 60.2981 li
307.588 60.5291 307.542 60.3671 307.745 60.5981 cv
307.805 60.5981 li
307.865 60.6581 li
307.985 60.7181 li
307.985 60.7781 li
308.045 60.7781 li
308.105 60.8381 li
308.165 60.8381 li
308.368 61.0691 308.322 60.9071 308.525 61.1381 cv
308.585 61.1381 li
308.645 61.1981 li
308.705 61.1981 li
308.825 61.3181 li
308.945 61.3781 li
309.125 61.5581 li
309.185 61.5581 li
309.305 61.6781 li
309.505 61.8781 309.705 62.0781 309.905 62.2781 cv
309.905 62.3381 li
310.025 62.4581 li
310.265 62.9381 li
310.265 63.1181 li
310.325 63.1781 li
310.385 63.4181 li
310.385 64.3181 li
310.325 64.3181 li
310.325 64.4381 li
310.265 64.4381 li
310.265 64.6181 li
310.205 64.6181 li
310.205 64.7981 li
310.145 64.7981 li
310.145 64.9181 li
310.085 64.9781 li
310.085 65.0381 li
310.025 65.0981 li
309.965 65.0981 li
309.965 65.1581 li
309.905 65.2181 li
309.905 65.2781 li
309.845 65.3381 li
309.845 65.3981 li
309.365 65.8781 li
309.305 65.8781 li
309.245 65.9381 li
309.185 65.9381 li
309.125 65.9981 li
308.593 66.4141 308.538 66.2031 308.225 66.4781 cv
307.325 66.6581 li
cp
307.445 58.5581 mo
307.325 58.4981 li
307.265 58.4381 li
307.205 58.4381 li
307.085 58.3181 li
307.025 58.3181 li
306.965 58.2581 li
306.905 58.2581 li
306.905 58.1981 li
306.785 58.1381 li
306.725 58.0781 li
306.665 58.0781 li
306.545 57.9581 li
306.485 57.9581 li
306.425 57.8981 li
306.365 57.8981 li
306.365 57.8381 li
306.245 57.7781 li
306.185 57.7181 li
306.125 57.7181 li
306.065 57.6581 li
306.005 57.5981 li
305.945 57.5981 li
305.885 57.5381 li
305.825 57.5381 li
305.825 57.4781 li
305.705 57.4181 li
305.645 57.3581 li
305.585 57.3581 li
305.465 57.2381 li
305.405 57.2381 li
305.345 57.1781 li
305.285 57.1781 li
305.285 57.1181 li
305.165 57.0581 li
305.105 56.9981 li
305.045 56.9981 li
304.925 56.9381 li
304.745 56.7581 li
304.625 56.6981 li
304.445 56.5181 li
304.445 56.4581 li
304.265 56.2781 li
304.265 56.2181 li
304.205 56.2181 li
304.205 56.0981 li
304.145 56.0981 li
303.965 55.7381 li
303.905 55.4981 li
303.845 55.3781 li
303.845 54.7781 li
303.905 54.7781 li
303.905 54.4781 li
303.965 54.4781 li
303.965 54.2981 li
304.025 54.2981 li
304.025 54.1181 li
304.085 54.1181 li
304.085 54.0581 li
304.145 54.0581 li
304.145 53.9981 li
304.205 53.9381 li
304.205 53.8781 li
304.265 53.8781 li
304.265 53.7581 li
304.325 53.7581 li
304.745 53.3381 li
304.805 53.3381 li
304.805 53.2781 li
304.985 53.2181 li
304.985 53.1581 li
305.105 53.1581 li
305.105 53.0981 li
305.285 53.0381 li
305.345 52.9781 li
305.773 52.8041 305.768 52.8401 306.185 52.7381 cv
306.365 52.6781 li
307.265 52.6781 li
307.763 52.8251 308.177 52.8161 308.585 53.1581 cv
308.645 53.2181 li
308.765 53.2181 li
308.825 53.3381 li
308.885 53.3381 li
309.185 53.6381 li
309.365 53.8781 li
309.485 53.9981 li
309.485 54.0581 li
309.545 54.1781 li
309.605 54.2381 li
309.665 54.3581 li
309.845 54.7781 li
309.845 55.0181 li
309.905 55.7381 li
309.845 55.7381 li
309.845 56.0981 li
309.785 56.0981 li
309.785 56.2181 li
309.725 56.2181 li
309.725 56.3981 li
309.665 56.3981 li
309.665 56.5781 li
309.605 56.5781 li
309.605 56.6381 li
309.545 56.6381 li
309.545 56.7581 li
309.485 56.8181 li
309.485 56.8781 li
309.425 56.9381 li
309.365 56.9381 li
309.365 56.9981 li
309.305 56.9981 li
309.305 57.0581 li
309.245 57.1781 li
309.185 57.1781 li
309.185 57.2381 li
309.065 57.3581 li
309.005 57.3581 li
309.005 57.4181 li
308.285 58.1381 li
308.225 58.1381 li
308.105 58.2581 li
308.045 58.2581 li
307.985 58.3181 li
307.865 58.3781 li
307.865 58.4381 li
307.565 58.5581 li
ef
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/PYRALW+SimSun-ExtB-GBK-EUC-H-Identity-H uf
/PYRALW+SimSun-ExtB-GBK-EUC-H /CIDFont ur
/PYRALV+TimesNewRomanPSMT-Identity-H uf
/PYRALV+TimesNewRomanPSMT /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
